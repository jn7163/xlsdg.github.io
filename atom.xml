<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>xLsDg&#39;s Blog</title>
  <subtitle>If You Want To Go Fast, Go Alone. If You Want To Go Far, Go Together.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://blog.xlsdg.org/"/>
  <updated>2016-12-15T08:00:10.000Z</updated>
  <id>https://blog.xlsdg.org/</id>
  
  <author>
    <name>xLsDg</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Yarn 使用方法</title>
    <link href="https://blog.xlsdg.org/2016/12/15/yarn-instructions/"/>
    <id>https://blog.xlsdg.org/2016/12/15/yarn-instructions/</id>
    <published>2016-12-15T07:05:27.000Z</published>
    <updated>2016-12-15T08:00:10.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装-YARN"><a href="#安装-YARN" class="headerlink" title="安装 YARN"></a>安装 YARN</h2><p>前提条件：电脑已经配置好 Node.js 的环境。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install -g yarn</div></pre></td></tr></table></figure>
<a id="more"></a>
<h2 id="安装-YRM"><a href="#安装-YRM" class="headerlink" title="安装 YRM"></a>安装 YRM</h2><p>包安装源管理器 YRM(YARN Registry Manager)</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install -g yrm</div></pre></td></tr></table></figure>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><ol>
<li><p>开始一个新项目</p>
<p>NPM:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm init</div></pre></td></tr></table></figure>
</li>
</ol>
<p>  YARN:</p>
  <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ yarn init</div></pre></td></tr></table></figure>
<ol>
<li><p>添加一个依赖</p>
<p>NPM:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ npm install --save [package]</div><div class="line">$ npm install --save [package]@[version]</div><div class="line">$ npm install --save [package]@[tag]</div><div class="line">$ npm install -S [package]</div><div class="line">$ npm i -S [package]</div></pre></td></tr></table></figure>
</li>
</ol>
<p>  YARN:</p>
  <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ yarn add [package]</div><div class="line">$ yarn add [package]@[version]</div><div class="line">$ yarn add [package]@[tag]</div></pre></td></tr></table></figure>
<ol>
<li><p>更新一个依赖</p>
<p>NPM:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ npm update --save [package]</div><div class="line">$ npm update --save [package]@[version]</div><div class="line">$ npm update --save [package]@[tag]</div></pre></td></tr></table></figure>
</li>
</ol>
<p>  YARN:</p>
  <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ yarn upgrade [package]</div><div class="line">$ yarn upgrade [package]@[version]</div><div class="line">$ yarn upgrade [package]@[tag]</div></pre></td></tr></table></figure>
<ol>
<li><p>删除一个依赖</p>
<p>NPM:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm uninstall --save [package]</div></pre></td></tr></table></figure>
</li>
</ol>
<p>  YARN:</p>
  <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ yarn remove [package]</div></pre></td></tr></table></figure>
<ol>
<li><p>安装项目所有依赖</p>
<p>NPM:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install</div></pre></td></tr></table></figure>
</li>
</ol>
<p>  YARN:</p>
  <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ yarn</div></pre></td></tr></table></figure>
<p>  或者</p>
  <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ yarn install</div></pre></td></tr></table></figure>
<ol>
<li><p>添加一个开发依赖</p>
<p>NPM:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ npm install --save-dev [package]</div><div class="line">$ npm install --save-dev [package]@[version]</div><div class="line">$ npm install --save-dev [package]@[tag]</div><div class="line">$ npm install -D [package]</div></pre></td></tr></table></figure>
</li>
</ol>
<p>  YARN:</p>
  <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ yarn add --dev [package]</div><div class="line">$ yarn add --dev [package]@[version]</div><div class="line">$ yarn add --dev [package]@[tag]</div><div class="line">$ yarn add -D [package]</div></pre></td></tr></table></figure>
<ol>
<li><p>添加一个全局依赖</p>
<p>NPM:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ npm install -g [package]</div><div class="line">$ npm install -g [package]@[version]</div><div class="line">$ npm install -g [package]@[tag]</div><div class="line">$ npm i -g [package]</div></pre></td></tr></table></figure>
</li>
</ol>
<p>  YARN:</p>
  <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ yarn global add [package]</div><div class="line">$ yarn global add [package]@[version]</div><div class="line">$ yarn global add [package]@[tag]</div></pre></td></tr></table></figure>
<ol>
<li><p>NPM Registry 发布/登录/登出</p>
<p>NPM:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ npm publish</div><div class="line">$ npm login</div><div class="line">$ npm <span class="built_in">logout</span></div></pre></td></tr></table></figure>
</li>
</ol>
<p>  YARN:</p>
  <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ yarn publish</div><div class="line">$ yarn login</div><div class="line">$ yarn <span class="built_in">logout</span></div></pre></td></tr></table></figure>
<ol>
<li><p>执行一个命令</p>
<p>NPM:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm run start</div></pre></td></tr></table></figure>
</li>
</ol>
<p>  YARN:</p>
  <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ yarn run start</div></pre></td></tr></table></figure>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ol>
<li><a href="https://yarnpkg.com/en/docs/cli/" target="_blank" rel="external">YARN 官方文档</a></li>
<li><a href="https://docs.npmjs.com/cli/" target="_blank" rel="external">NPM 官方文档</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;安装-YARN&quot;&gt;&lt;a href=&quot;#安装-YARN&quot; class=&quot;headerlink&quot; title=&quot;安装 YARN&quot;&gt;&lt;/a&gt;安装 YARN&lt;/h2&gt;&lt;p&gt;前提条件：电脑已经配置好 Node.js 的环境。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ npm install -g yarn&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="技术研究" scheme="https://blog.xlsdg.org/categories/%E6%8A%80%E6%9C%AF%E7%A0%94%E7%A9%B6/"/>
    
    
      <category term="Yarn" scheme="https://blog.xlsdg.org/tags/Yarn/"/>
    
  </entry>
  
  <entry>
    <title>Grunt 配置</title>
    <link href="https://blog.xlsdg.org/2015/08/14/grunt-configuration/"/>
    <id>https://blog.xlsdg.org/2015/08/14/grunt-configuration/</id>
    <published>2015-08-14T06:00:00.000Z</published>
    <updated>2016-12-09T15:55:20.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Grunt-安装"><a href="#Grunt-安装" class="headerlink" title="Grunt 安装"></a>Grunt 安装</h2><p>前提条件：电脑已经配置好 Node.js 的环境。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install -g grunt-cli</div></pre></td></tr></table></figure>
<a id="more"></a>
<p>进入工程目录，运行以下命令生成 <code>package.json</code> 文件:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm init</div></pre></td></tr></table></figure>
<p>接着输入以下命令直接安装 Grunt：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install --save-dev grunt</div></pre></td></tr></table></figure>
<p>除了安装 Grunt 以外，不同的项目还需要安装不同的 Grunt 插件模块。常用模块：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">$ npm install --save-dev load-grunt-tasks</div><div class="line">$ npm install --save-dev grunt-contrib-jshint</div><div class="line">$ npm install --save-dev grunt-contrib-csslint</div><div class="line">$ npm install --save-dev grunt-htmlhint</div><div class="line">$ npm install --save-dev grunt-contrib-watch</div><div class="line">$ npm install --save-dev grunt-shell</div><div class="line">$ npm install --save-dev grunt-contrib-concat</div><div class="line">$ npm install --save-dev grunt-contrib-clean</div><div class="line">$ npm install --save-dev grunt-contrib-less</div><div class="line">$ npm install --save-dev grunt-autoprefixer</div><div class="line">$ npm install --save-dev grunt-contrib-uglify</div><div class="line">$ npm install --save-dev grunt-contrib-cssmin</div><div class="line">$ npm install --save-dev grunt-contrib-imagemin</div><div class="line">$ npm install --save-dev grunt-contrib-htmlmin</div></pre></td></tr></table></figure>
<p>或一行命令解决：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install --save-dev load-grunt-tasks grunt-contrib-jshint grunt-contrib-csslint grunt-htmlhint grunt-contrib-watch grunt-shell grunt-contrib-concat grunt-contrib-clean grunt-contrib-less grunt-autoprefixer grunt-contrib-uglify grunt-contrib-cssmin grunt-contrib-imagemin grunt-contrib-htmlmin</div></pre></td></tr></table></figure>
<h2 id="模板文件"><a href="#模板文件" class="headerlink" title="模板文件"></a>模板文件</h2><p>每次都要输入这么多命令，有时候会记不住。其实我们只需要一个 <code>package.json</code> 文件就可以搞定：</p>
<figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  <span class="attr">"name"</span>: <span class="string">"grunt-demo"</span>,</div><div class="line">  <span class="attr">"version"</span>: <span class="string">"1.0.0"</span>,</div><div class="line">  <span class="attr">"description"</span>: <span class="string">"just for learn grunt."</span>,</div><div class="line">  <span class="attr">"main"</span>: <span class="string">"app.js"</span>,</div><div class="line">  <span class="attr">"scripts"</span>: &#123;</div><div class="line">    <span class="attr">"test"</span>: <span class="string">"echo \"Error: no test specified\" &amp;&amp; exit 1"</span></div><div class="line">  &#125;,</div><div class="line">  <span class="attr">"keywords"</span>: [</div><div class="line">    <span class="string">"grunt"</span></div><div class="line">  ],</div><div class="line">  <span class="attr">"author"</span>: <span class="string">"xLsDg"</span>,</div><div class="line">  <span class="attr">"license"</span>: <span class="string">"MIT"</span>,</div><div class="line">  <span class="attr">"devDependencies"</span>: &#123;</div><div class="line">    <span class="attr">"grunt"</span>: <span class="string">"^0.4.5"</span>,</div><div class="line">    <span class="attr">"grunt-autoprefixer"</span>: <span class="string">"^3.0.3"</span>,</div><div class="line">    <span class="attr">"grunt-contrib-clean"</span>: <span class="string">"^0.6.0"</span>,</div><div class="line">    <span class="attr">"grunt-contrib-concat"</span>: <span class="string">"^0.5.1"</span>,</div><div class="line">    <span class="attr">"grunt-contrib-csslint"</span>: <span class="string">"^0.5.0"</span>,</div><div class="line">    <span class="attr">"grunt-contrib-cssmin"</span>: <span class="string">"^0.13.0"</span>,</div><div class="line">    <span class="attr">"grunt-contrib-htmlmin"</span>: <span class="string">"^0.4.0"</span>,</div><div class="line">    <span class="attr">"grunt-contrib-imagemin"</span>: <span class="string">"^0.9.4"</span>,</div><div class="line">    <span class="attr">"grunt-contrib-jshint"</span>: <span class="string">"^0.11.2"</span>,</div><div class="line">    <span class="attr">"grunt-contrib-less"</span>: <span class="string">"^1.0.1"</span>,</div><div class="line">    <span class="attr">"grunt-contrib-uglify"</span>: <span class="string">"^0.9.1"</span>,</div><div class="line">    <span class="attr">"grunt-contrib-watch"</span>: <span class="string">"^0.6.1"</span>,</div><div class="line">    <span class="attr">"grunt-htmlhint"</span>: <span class="string">"^0.4.1"</span>,</div><div class="line">    <span class="attr">"grunt-shell"</span>: <span class="string">"^1.1.2"</span>,</div><div class="line">    <span class="attr">"load-grunt-tasks"</span>: <span class="string">"^3.2.0"</span></div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>每次需要使用的时候，将该文件放到项目文件夹下，在终端中输入 <code>npm install</code> 即可自动安装相应的模块。</p>
<h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2><p>安装完模块之后，还需要配置一下对应的工作参数。新建 <code>Gruntfile.js</code> 文件与 <code>package.json</code> 文件同一个目录下，内容为：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div><div class="line">255</div><div class="line">256</div><div class="line">257</div><div class="line">258</div><div class="line">259</div><div class="line">260</div><div class="line">261</div><div class="line">262</div><div class="line">263</div><div class="line">264</div><div class="line">265</div><div class="line">266</div><div class="line">267</div><div class="line">268</div><div class="line">269</div><div class="line">270</div><div class="line">271</div><div class="line">272</div><div class="line">273</div><div class="line">274</div><div class="line">275</div><div class="line">276</div><div class="line">277</div><div class="line">278</div><div class="line">279</div><div class="line">280</div><div class="line">281</div><div class="line">282</div><div class="line">283</div><div class="line">284</div><div class="line">285</div><div class="line">286</div><div class="line">287</div><div class="line">288</div><div class="line">289</div><div class="line">290</div><div class="line">291</div><div class="line">292</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">module</span>.exports = <span class="function"><span class="keyword">function</span>(<span class="params">grunt</span>) </span>&#123;</div><div class="line">    <span class="keyword">var</span> cwdDir = __dirname;</div><div class="line"></div><div class="line">    <span class="keyword">var</span> cssSrc = cwdDir + <span class="string">'/less'</span>;</div><div class="line">    <span class="keyword">var</span> cssDst = cwdDir + <span class="string">'/css'</span>;</div><div class="line"></div><div class="line">    <span class="keyword">var</span> jsSrc = cwdDir + <span class="string">'/js/page'</span>;</div><div class="line">    <span class="keyword">var</span> jsDst = cwdDir + <span class="string">'/js/dist'</span>;</div><div class="line"></div><div class="line">    <span class="keyword">var</span> htmlSrc = cwdDir + <span class="string">'/views'</span>;</div><div class="line">    <span class="keyword">var</span> htmlDst = cwdDir + <span class="string">'/html'</span>;</div><div class="line"></div><div class="line">    <span class="keyword">var</span> imgSrc = cwdDir + <span class="string">'/img'</span>;</div><div class="line">    <span class="keyword">var</span> imgDst = cwdDir + <span class="string">'/img/dist'</span>;</div><div class="line"></div><div class="line">    <span class="built_in">require</span>(<span class="string">'load-grunt-tasks'</span>)(grunt, &#123;</div><div class="line">        <span class="attr">pattern</span>: <span class="string">'grunt-*'</span>,</div><div class="line">        <span class="attr">config</span>: cwdDir + <span class="string">'/package.json'</span>,</div><div class="line">        <span class="attr">scope</span>: <span class="string">'devDependencies'</span></div><div class="line">    &#125;);</div><div class="line"></div><div class="line">    grunt.initConfig(&#123;</div><div class="line">        <span class="attr">pkg</span>: grunt.file.readJSON(<span class="string">'package.json'</span>),</div><div class="line">        <span class="attr">autoprefixer</span>: &#123;</div><div class="line">            <span class="attr">options</span>: &#123;</div><div class="line">                <span class="attr">browsers</span>: [</div><div class="line">                    <span class="string">'ie &gt;= 8'</span>,</div><div class="line">                    <span class="string">'ff &gt;= 10'</span>,</div><div class="line">                    <span class="string">'chrome &gt;= 20'</span>,</div><div class="line">                    <span class="string">'safari &gt;= 7'</span>,</div><div class="line">                    <span class="string">'opera &gt;= 10'</span>,</div><div class="line">                    <span class="string">'ios &gt;= 7'</span>,</div><div class="line">                    <span class="string">'android &gt;= 2.3'</span></div><div class="line">                ]</div><div class="line">            &#125;,</div><div class="line">            <span class="attr">src</span>: [cssDst + <span class="string">'/*.css'</span>]</div><div class="line">        &#125;,</div><div class="line">        <span class="attr">clean</span>: &#123;</div><div class="line">            <span class="attr">options</span>: &#123;</div><div class="line">                <span class="string">'force'</span>: <span class="literal">false</span>, <span class="comment">// This overrides this task from blocking deletion of folders outside current working dir (CWD). Use with caution.</span></div><div class="line">                <span class="string">'no-write'</span>: <span class="literal">false</span> <span class="comment">// Will log messages of what would happen if the task was run but doesn't actually delete the files.</span></div><div class="line">            &#125;,</div><div class="line">            <span class="attr">css</span>: &#123;</div><div class="line">                <span class="attr">files</span>: [&#123;</div><div class="line">                    <span class="attr">src</span>: [cssDst + <span class="string">'/*.css'</span>]</div><div class="line">                &#125;]</div><div class="line">            &#125;,</div><div class="line">            <span class="attr">js</span>: &#123;</div><div class="line">                <span class="attr">files</span>: [&#123;</div><div class="line">                    <span class="attr">src</span>: [jsDst + <span class="string">'/*.js'</span>]</div><div class="line">                &#125;]</div><div class="line">            &#125;,</div><div class="line">            <span class="attr">html</span>: &#123;</div><div class="line">                <span class="attr">files</span>: [&#123;</div><div class="line">                    <span class="attr">src</span>: [htmlDst + <span class="string">'/*.html'</span>]</div><div class="line">                &#125;]</div><div class="line">            &#125;</div><div class="line">        &#125;,</div><div class="line">        <span class="attr">concat</span>: &#123;</div><div class="line">            <span class="attr">options</span>: &#123;</div><div class="line">              <span class="attr">separator</span>: <span class="string">';'</span> <span class="comment">// Concatenated files will be joined on this string. If you're post-processing concatenated JavaScript files with a minifier, you may need to use a semicolon ';\n' as the separator.</span></div><div class="line">            &#125;,</div><div class="line">            <span class="attr">css</span>: &#123;</div><div class="line">              <span class="attr">src</span>: [cssDst + <span class="string">'/*.css'</span>, <span class="string">'!'</span> + cssDst + <span class="string">'/all.css'</span>],</div><div class="line">              <span class="attr">dest</span>: cssDst + <span class="string">'/all.css'</span>,</div><div class="line">            &#125;,</div><div class="line">            <span class="attr">js</span>: &#123;</div><div class="line">              <span class="attr">src</span>: [jsDst + <span class="string">'/*.js'</span>, <span class="string">'!'</span> + jsDst + <span class="string">'/all.js'</span>],</div><div class="line">              <span class="attr">dest</span>: jsDst + <span class="string">'/all.js'</span>,</div><div class="line">            &#125;</div><div class="line">        &#125;,</div><div class="line">        <span class="attr">csslint</span>: &#123;</div><div class="line">            <span class="attr">options</span>: &#123;</div><div class="line">                <span class="string">'important'</span>: <span class="literal">false</span>,</div><div class="line">                <span class="string">'adjoining-classes'</span>: <span class="literal">false</span>,</div><div class="line">                <span class="string">'known-properties'</span>: <span class="literal">false</span>,</div><div class="line">                <span class="string">'box-sizing'</span>: <span class="literal">false</span>,</div><div class="line">                <span class="string">'box-model'</span>: <span class="literal">false</span>,</div><div class="line">                <span class="string">'overqualified-elements'</span>: <span class="literal">false</span>,</div><div class="line">                <span class="string">'display-property-grouping'</span>: <span class="literal">true</span>,</div><div class="line">                <span class="string">'bulletproof-font-face'</span>: <span class="literal">true</span>,</div><div class="line">                <span class="string">'compatible-vendor-prefixes'</span>: <span class="literal">false</span>,</div><div class="line">                <span class="string">'regex-selectors'</span>: <span class="literal">true</span>,</div><div class="line">                <span class="string">'errors'</span>: <span class="literal">true</span>,</div><div class="line">                <span class="string">'duplicate-background-images'</span>: <span class="literal">true</span>,</div><div class="line">                <span class="string">'duplicate-properties'</span>: <span class="literal">true</span>,</div><div class="line">                <span class="string">'empty-rules'</span>: <span class="literal">true</span>,</div><div class="line">                <span class="string">'selector-max-approaching'</span>: <span class="literal">true</span>,</div><div class="line">                <span class="string">'gradients'</span>: <span class="literal">true</span>,</div><div class="line">                <span class="string">'fallback-colors'</span>: <span class="literal">true</span>,</div><div class="line">                <span class="string">'font-sizes'</span>: <span class="literal">false</span>,</div><div class="line">                <span class="string">'font-faces'</span>: <span class="literal">true</span>,</div><div class="line">                <span class="string">'floats'</span>: <span class="literal">false</span>,</div><div class="line">                <span class="string">'star-property-hack'</span>: <span class="literal">false</span>,</div><div class="line">                <span class="string">'outline-none'</span>: <span class="literal">false</span>,</div><div class="line">                <span class="string">'import'</span>: <span class="literal">true</span>,</div><div class="line">                <span class="string">'ids'</span>: <span class="literal">true</span>,</div><div class="line">                <span class="string">'underscore-property-hack'</span>: <span class="literal">false</span>,</div><div class="line">                <span class="string">'rules-count'</span>: <span class="literal">true</span>,</div><div class="line">                <span class="string">'qualified-headings'</span>: <span class="literal">false</span>,</div><div class="line">                <span class="string">'selector-max'</span>: <span class="literal">true</span>,</div><div class="line">                <span class="string">'shorthand'</span>: <span class="literal">true</span>,</div><div class="line">                <span class="string">'text-indent'</span>: <span class="literal">true</span>,</div><div class="line">                <span class="string">'unique-headings'</span>: <span class="literal">false</span>,</div><div class="line">                <span class="string">'universal-selector'</span>: <span class="literal">true</span>,</div><div class="line">                <span class="string">'unqualified-attributes'</span>: <span class="literal">false</span>,</div><div class="line">                <span class="string">'vendor-prefix'</span>: <span class="literal">false</span>,</div><div class="line">                <span class="string">'zero-units'</span>: <span class="literal">true</span>,</div><div class="line">                <span class="string">'force'</span>: <span class="literal">true</span></div><div class="line">            &#125;,</div><div class="line">            <span class="attr">src</span>: [cssDst + <span class="string">'/*.css'</span>]</div><div class="line">        &#125;,</div><div class="line">        <span class="attr">cssmin</span>: &#123;</div><div class="line">            <span class="attr">options</span>: &#123;</div><div class="line">                <span class="attr">compatibility</span> : <span class="string">'ie8'</span>,</div><div class="line">                <span class="attr">noAdvanced</span> : <span class="literal">true</span></div><div class="line">            &#125;,</div><div class="line">            <span class="attr">target</span>: &#123;</div><div class="line">                <span class="attr">files</span>: [&#123;</div><div class="line">                  <span class="attr">expand</span>: <span class="literal">true</span>,</div><div class="line">                  <span class="attr">cwd</span>: cssDst,</div><div class="line">                  <span class="attr">src</span>: [<span class="string">'*.css'</span>, <span class="string">'!*.min.css'</span>],</div><div class="line">                  <span class="attr">dest</span>: cssDst,</div><div class="line">                  <span class="attr">ext</span>: <span class="string">'.min.css'</span></div><div class="line">                &#125;]</div><div class="line">            &#125;</div><div class="line">        &#125;,</div><div class="line">        <span class="attr">htmlmin</span>: &#123;</div><div class="line">            <span class="attr">options</span>: &#123;</div><div class="line">                <span class="attr">removeComments</span>: <span class="literal">true</span>,</div><div class="line">                <span class="attr">collapseWhitespace</span>: <span class="literal">true</span></div><div class="line">            &#125;,</div><div class="line">            <span class="attr">files</span>: [&#123;</div><div class="line">                <span class="attr">expand</span>: <span class="literal">true</span>,</div><div class="line">                <span class="attr">cwd</span>: htmlDst,</div><div class="line">                <span class="attr">src</span>: [<span class="string">'*.html'</span>],</div><div class="line">                <span class="attr">dest</span>: htmlDst</div><div class="line">            &#125;]</div><div class="line">        &#125;,</div><div class="line">        <span class="attr">imagemin</span>: &#123;</div><div class="line">            <span class="attr">options</span>: &#123;</div><div class="line">                <span class="attr">optimizationLevel</span>: <span class="number">3</span>,</div><div class="line">                <span class="attr">svgoPlugins</span>: [&#123;</div><div class="line">                    <span class="attr">removeViewBox</span>: <span class="literal">false</span></div><div class="line">                &#125;],</div><div class="line">                <span class="attr">use</span>: []</div><div class="line">            &#125;,</div><div class="line">            <span class="attr">files</span>: [&#123;</div><div class="line">                <span class="attr">expand</span>: <span class="literal">true</span>,</div><div class="line">                <span class="attr">cwd</span>: imgSrc,</div><div class="line">                <span class="attr">src</span>: [<span class="string">'*.&#123;png,jpg,gif&#125;'</span>],</div><div class="line">                <span class="attr">dest</span>: imgDst</div><div class="line">            &#125;]</div><div class="line">        &#125;,</div><div class="line">        <span class="attr">jshint</span>: &#123;</div><div class="line">            <span class="attr">options</span>: &#123;</div><div class="line">                <span class="string">'jquery'</span>: <span class="literal">true</span>, <span class="comment">//检查预定义的全局变量，防止出现$未定义，该项根据实际代码修改</span></div><div class="line">                <span class="string">'bitwise'</span>: <span class="literal">false</span>, <span class="comment">//不检查位运算</span></div><div class="line">                <span class="string">'browser'</span>: <span class="literal">true</span>, <span class="comment">//通过浏览器内置的全局变量检测</span></div><div class="line">                <span class="string">'devel'</span>: <span class="literal">true</span>, <span class="comment">//允许对调试用的alert和console.log的调用</span></div><div class="line">                <span class="string">'camelcase'</span>: <span class="literal">true</span>, <span class="comment">//强制验证驼峰式命名</span></div><div class="line">                <span class="string">'curly'</span>: <span class="literal">true</span>, <span class="comment">//强制使用花括号</span></div><div class="line">                <span class="string">'eqeqeq'</span>: <span class="literal">false</span>, <span class="comment">//不强制使用===比较运算符</span></div><div class="line">                <span class="string">'es3'</span>: <span class="literal">true</span>, <span class="comment">//兼容es3规范，针对旧版浏览器编写的代码</span></div><div class="line">                <span class="string">'esnext'</span>: <span class="literal">false</span>, <span class="comment">//不使用最新的es6规范</span></div><div class="line">                <span class="string">'expr'</span>: <span class="literal">true</span>, <span class="comment">//允许未赋值的函数名表达式，例如console &amp;&amp; console.log(1)</span></div><div class="line">                <span class="string">'forin'</span>: <span class="literal">false</span>, <span class="comment">//不强制过滤遍历对象继承的属性</span></div><div class="line">                <span class="string">'freeze'</span>: <span class="literal">false</span>, <span class="comment">//不限制对内置对象的扩展</span></div><div class="line">                <span class="string">'immed'</span>: <span class="literal">true</span>, <span class="comment">//禁止未用括号包含立即执行函数</span></div><div class="line">                <span class="string">'indent'</span>: <span class="literal">false</span>, <span class="comment">//不强制缩进</span></div><div class="line">                <span class="string">'latedef'</span>: <span class="literal">true</span>, <span class="comment">//禁止先调用后定义</span></div><div class="line">                <span class="string">'maxdepth'</span>: <span class="literal">false</span>, <span class="comment">//不限制代码块嵌套层数</span></div><div class="line">                <span class="string">'maxparams'</span>: <span class="literal">false</span>, <span class="comment">//不限制函数参数个数</span></div><div class="line">                <span class="string">'newcap'</span>: <span class="literal">false</span>, <span class="comment">//不对首字母大写的函数强制使用new</span></div><div class="line">                <span class="string">'noarg'</span>: <span class="literal">false</span>, <span class="comment">//不禁止对arguments.caller和arguments.callee的调用</span></div><div class="line">                <span class="string">'noempty'</span>: <span class="literal">false</span>, <span class="comment">//不禁止空代码块</span></div><div class="line">                <span class="string">'nonew'</span>: <span class="literal">false</span>, <span class="comment">//允许直接new实例化而不赋值给变量</span></div><div class="line">                <span class="string">'plusplus'</span>: <span class="literal">false</span>, <span class="comment">//允许++和--运算符使用</span></div><div class="line">                <span class="string">'quotmark'</span>: <span class="string">'single'</span>, <span class="comment">//字符串使用单引号</span></div><div class="line">                <span class="string">'scripturl'</span>: <span class="literal">true</span>, <span class="comment">//允许javascript伪协议的url</span></div><div class="line">                <span class="string">'smarttabs'</span>: <span class="literal">false</span>, <span class="comment">//允许混合tab和空格缩进</span></div><div class="line">                <span class="string">'strict'</span>: <span class="literal">false</span>, <span class="comment">//不强制使用es5严格模式</span></div><div class="line">                <span class="string">'sub'</span>: <span class="literal">true</span>, <span class="comment">//允许用[]形式访问对象属性</span></div><div class="line">                <span class="string">'undef'</span>: <span class="literal">true</span>, <span class="comment">//禁止明确未定义的变量调用，如果你的变量（myvar）是在其他文件中定义的，可以使用/*global myvar */绕过检测</span></div><div class="line">                <span class="string">'unused'</span>: <span class="literal">false</span>, <span class="comment">//允许定义没用的变量，在某些函数回调中，经常出现多个参数，但不一定会用</span></div><div class="line">                <span class="string">'multistr'</span>: <span class="literal">false</span>, <span class="comment">//禁止多行字符串，改用加号连接</span></div><div class="line">                <span class="string">'globals'</span>: &#123;</div><div class="line">                    <span class="string">'jQuery'</span>: <span class="literal">true</span>,</div><div class="line">                    <span class="string">'FastClick'</span>: <span class="literal">true</span>,</div><div class="line">                    <span class="string">'define'</span>: <span class="literal">true</span>,</div><div class="line">                    <span class="string">'unescape'</span>: <span class="literal">true</span>,</div><div class="line">                    <span class="string">'require'</span>: <span class="literal">true</span>,</div><div class="line">                    <span class="string">'iScroll'</span>: <span class="literal">true</span>,</div><div class="line">                    <span class="string">'host'</span>: <span class="literal">true</span></div><div class="line">                &#125;</div><div class="line">            &#125;,</div><div class="line">            <span class="attr">src</span>: [jsDst + <span class="string">'/*.js'</span>]</div><div class="line">        &#125;,</div><div class="line">        <span class="attr">less</span>: &#123;</div><div class="line">            <span class="attr">options</span>: &#123;</div><div class="line">            &#125;,</div><div class="line">            <span class="attr">files</span>: [&#123;</div><div class="line">                <span class="attr">expand</span>: <span class="literal">true</span>,</div><div class="line">                <span class="attr">cwd</span>: cssSrc,</div><div class="line">                <span class="attr">src</span>: [<span class="string">'*.less'</span>],</div><div class="line">                <span class="attr">dest</span>: cssDst</div><div class="line">            &#125;]</div><div class="line">        &#125;,</div><div class="line">        <span class="attr">uglify</span>: &#123;</div><div class="line">            <span class="attr">options</span>: &#123;</div><div class="line">            &#125;,</div><div class="line">            <span class="attr">files</span>: [&#123;</div><div class="line">                <span class="attr">expand</span>: <span class="literal">true</span>,</div><div class="line">                <span class="attr">cwd</span>: jsDst,</div><div class="line">                <span class="attr">src</span>: [<span class="string">'*.js'</span>, <span class="string">'!all.js'</span>],</div><div class="line">                <span class="attr">dest</span>: jsDst</div><div class="line">            &#125;]</div><div class="line">        &#125;,</div><div class="line">        <span class="attr">watch</span>: &#123;</div><div class="line">            <span class="attr">css</span>: &#123;</div><div class="line">                <span class="attr">options</span>: &#123;</div><div class="line">                &#125;,</div><div class="line">                <span class="attr">files</span>: [cssSrc + <span class="string">'/*.less'</span>],</div><div class="line">                <span class="attr">tasks</span>: [<span class="string">'clean:css'</span>, <span class="string">'less'</span>, <span class="string">'csslint'</span>, <span class="string">'autoprefixer'</span>, <span class="string">'cssmin'</span>]</div><div class="line">            &#125;,</div><div class="line">            <span class="attr">js</span>: &#123;</div><div class="line">                <span class="attr">options</span>: &#123;</div><div class="line">                &#125;,</div><div class="line">                <span class="attr">files</span>: [jsSrc + <span class="string">'/*.js'</span>],</div><div class="line">                <span class="attr">tasks</span>: [<span class="string">'clean:js'</span>, <span class="string">'jshint'</span>, <span class="string">'uglify'</span>]</div><div class="line">            &#125;,</div><div class="line">            <span class="attr">html</span>: &#123;</div><div class="line">                <span class="attr">options</span>: &#123;</div><div class="line">                &#125;,</div><div class="line">                <span class="attr">files</span>: [htmlSrc + <span class="string">'/*.html'</span>],</div><div class="line">                <span class="attr">tasks</span>: [<span class="string">'clean:html'</span>, <span class="string">'htmlhint'</span>, <span class="string">'htmlmin'</span>]</div><div class="line">            &#125;</div><div class="line">        &#125;,</div><div class="line">        <span class="attr">htmlhint</span>: &#123;</div><div class="line">            <span class="attr">options</span>: &#123;</div><div class="line">                <span class="string">'tagname-lowercase'</span>: <span class="literal">true</span>,</div><div class="line">                <span class="string">'attr-lowercase'</span>: <span class="literal">true</span>,</div><div class="line">                <span class="string">'attr-value-double-quotes'</span>: <span class="literal">true</span>,</div><div class="line">                <span class="string">'attr-value-not-empty'</span>: <span class="literal">false</span>,</div><div class="line">                <span class="string">'attr-no-duplication'</span>: <span class="literal">true</span>,</div><div class="line">                <span class="string">'doctype-first'</span>: <span class="literal">true</span>,</div><div class="line">                <span class="string">'tag-pair'</span>: <span class="literal">true</span>,</div><div class="line">                <span class="string">'tag-self-close'</span>: <span class="literal">true</span>,</div><div class="line">                <span class="string">'spec-char-escape'</span>: <span class="literal">true</span>,</div><div class="line">                <span class="string">'id-unique'</span>: <span class="literal">true</span>,</div><div class="line">                <span class="string">'src-not-empty'</span>: <span class="literal">true</span>,</div><div class="line">                <span class="string">'head-script-disabled'</span>: <span class="literal">true</span>,</div><div class="line">                <span class="string">'img-alt-require'</span>: <span class="literal">false</span>,</div><div class="line">                <span class="string">'doctype-html5'</span>: <span class="literal">true</span>,</div><div class="line">                <span class="string">'id-class-value'</span>: <span class="literal">true</span>,</div><div class="line">                <span class="string">'style-disabled'</span>: <span class="literal">false</span>,</div><div class="line">                <span class="string">'space-tab-mixed-disabled'</span>: <span class="literal">true</span>,</div><div class="line">                <span class="string">'id-class-ad-disabled'</span>: <span class="literal">true</span>,</div><div class="line">                <span class="string">'href-abs-or-rel'</span>: <span class="literal">true</span>,</div><div class="line">                <span class="string">'attr-unsafe-chars'</span>: <span class="literal">true</span>,</div><div class="line">                <span class="string">'force'</span>: <span class="literal">true</span></div><div class="line">            &#125;,</div><div class="line">            <span class="attr">files</span>: [&#123;</div><div class="line">                <span class="attr">expand</span>: <span class="literal">true</span>,</div><div class="line">                <span class="attr">cwd</span>: htmlSrc,</div><div class="line">                <span class="attr">src</span>: [<span class="string">'*.html'</span>],</div><div class="line">                <span class="attr">dest</span>: htmlDst</div><div class="line">            &#125;]</div><div class="line">        &#125;,</div><div class="line">        <span class="attr">shell</span>: &#123;</div><div class="line">            <span class="attr">options</span>: &#123;</div><div class="line">                <span class="attr">stderr</span>: <span class="literal">false</span></div><div class="line">            &#125;,</div><div class="line">            <span class="attr">makeDir</span>: &#123;</div><div class="line">                <span class="attr">command</span>: <span class="string">'mkdir test'</span></div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line"></div><div class="line">    grunt.registerTask(<span class="string">'default'</span>, [<span class="string">'build-css'</span>, <span class="string">'build-js'</span>, <span class="string">'build-html'</span>]);</div><div class="line"></div><div class="line">    grunt.registerTask(<span class="string">'concat-css'</span>, [<span class="string">'concat:css'</span>]);</div><div class="line">    grunt.registerTask(<span class="string">'clean-css'</span>, [<span class="string">'clean:css'</span>]);</div><div class="line">    grunt.registerTask(<span class="string">'build-css'</span>, [<span class="string">'clean:css'</span>, <span class="string">'less'</span>, <span class="string">'csslint'</span>, <span class="string">'autoprefixer'</span>, <span class="string">'cssmin'</span>]);</div><div class="line"></div><div class="line">    grunt.registerTask(<span class="string">'concat-js'</span>, [<span class="string">'concat:js'</span>]);</div><div class="line">    grunt.registerTask(<span class="string">'clean-js'</span>, [<span class="string">'clean:js'</span>]);</div><div class="line">    grunt.registerTask(<span class="string">'build-js'</span>, [<span class="string">'clean:js'</span>, <span class="string">'jshint'</span>, <span class="string">'uglify'</span>]);</div><div class="line"></div><div class="line">    grunt.registerTask(<span class="string">'clean-html'</span>, [<span class="string">'clean:html'</span>]);</div><div class="line">    grunt.registerTask(<span class="string">'build-html'</span>, [<span class="string">'clean:html'</span>, <span class="string">'htmlhint'</span>, <span class="string">'htmlmin'</span>]);</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<p>以上内容需根据实际项目情况修改，仅作模板参考。</p>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p>1.<a href="http://javascript.ruanyifeng.com/tool/grunt.html" target="_blank" rel="external">Grunt: 任务自动管理工具</a></p>
<p>2.<a href="http://www.cnblogs.com/yexiaochai/p/3603389.html" target="_blank" rel="external">三十分钟学会使用 Grunt 打包前端代码</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Grunt-安装&quot;&gt;&lt;a href=&quot;#Grunt-安装&quot; class=&quot;headerlink&quot; title=&quot;Grunt 安装&quot;&gt;&lt;/a&gt;Grunt 安装&lt;/h2&gt;&lt;p&gt;前提条件：电脑已经配置好 Node.js 的环境。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ npm install -g grunt-cli&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="技术研究" scheme="https://blog.xlsdg.org/categories/%E6%8A%80%E6%9C%AF%E7%A0%94%E7%A9%B6/"/>
    
    
      <category term="Node-js" scheme="https://blog.xlsdg.org/tags/Node-js/"/>
    
      <category term="Grunt" scheme="https://blog.xlsdg.org/tags/Grunt/"/>
    
  </entry>
  
  <entry>
    <title>Gulp 配置</title>
    <link href="https://blog.xlsdg.org/2015/08/13/gulp-configuration/"/>
    <id>https://blog.xlsdg.org/2015/08/13/gulp-configuration/</id>
    <published>2015-08-13T06:00:00.000Z</published>
    <updated>2016-12-09T15:55:37.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Gulp-安装"><a href="#Gulp-安装" class="headerlink" title="Gulp 安装"></a>Gulp 安装</h2><p>前提条件：电脑已经配置好 Node.js 的环境。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install -g gulp-cli</div></pre></td></tr></table></figure>
<a id="more"></a>
<p>进入工程目录，运行以下命令:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install --save-dev gulp</div></pre></td></tr></table></figure>
<p>除了安装 Gulp 以外，不同的项目还需要安装不同的 Gulp 插件模块。常用模块：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">$ npm install --save-dev gulp-load-plugins</div><div class="line">$ npm install --save-dev gulp-jshint</div><div class="line">$ npm install --save-dev gulp-csslint</div><div class="line">$ npm install --save-dev gulp-htmlhint</div><div class="line">$ npm install --save-dev gulp-watch</div><div class="line">$ npm install --save-dev gulp-shell</div><div class="line">$ npm install --save-dev gulp-concat</div><div class="line">$ npm install --save-dev gulp-clean</div><div class="line">$ npm install --save-dev gulp-less</div><div class="line">$ npm install --save-dev gulp-autoprefixer</div><div class="line">$ npm install --save-dev gulp-uglify</div><div class="line">$ npm install --save-dev gulp-cssmin</div><div class="line">$ npm install --save-dev gulp-imagemin</div><div class="line">$ npm install --save-dev gulp-htmlmin</div></pre></td></tr></table></figure>
<p>或一行命令解决：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install --save-dev gulp-load-plugins gulp-jshint gulp-csslint gulp-htmlhint gulp-watch gulp-shell gulp-concat gulp-clean gulp-less gulp-autoprefixer gulp-uglify gulp-cssmin gulp-imagemin gulp-htmlmin</div></pre></td></tr></table></figure>
<h2 id="模板文件"><a href="#模板文件" class="headerlink" title="模板文件"></a>模板文件</h2><p>每次都要输入这么多命令，有时候会记不住。其实我们只需要一个 <code>package.json</code> 文件就可以搞定：</p>
<figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    <span class="attr">"name"</span>: <span class="string">"gulp-demo"</span>,</div><div class="line">    <span class="attr">"version"</span>: <span class="string">"1.0.0"</span>,</div><div class="line">    <span class="attr">"description"</span>: <span class="string">"just for learn gulp."</span>,</div><div class="line">    <span class="attr">"devDependencies"</span>: &#123;</div><div class="line">        <span class="attr">"gulp"</span>: <span class="string">"^3.9.0"</span>,</div><div class="line">        <span class="attr">"gulp-autoprefixer"</span>: <span class="string">"^2.3.1"</span>,</div><div class="line">        <span class="attr">"gulp-clean"</span>: <span class="string">"^0.3.1"</span>,</div><div class="line">        <span class="attr">"gulp-concat"</span>: <span class="string">"^2.6.0"</span>,</div><div class="line">        <span class="attr">"gulp-csslint"</span>: <span class="string">"^0.1.5"</span>,</div><div class="line">        <span class="attr">"gulp-cssmin"</span>: <span class="string">"^0.1.7"</span>,</div><div class="line">        <span class="attr">"gulp-htmlhint"</span>: <span class="string">"^0.3.0"</span>,</div><div class="line">        <span class="attr">"gulp-htmlmin"</span>: <span class="string">"^1.1.3"</span>,</div><div class="line">        <span class="attr">"gulp-jshint"</span>: <span class="string">"^1.11.2"</span>,</div><div class="line">        <span class="attr">"gulp-less"</span>: <span class="string">"^3.0.3"</span>,</div><div class="line">        <span class="attr">"gulp-load-plugins"</span>: <span class="string">"^0.10.0"</span>,</div><div class="line">        <span class="attr">"gulp-shell"</span>: <span class="string">"^0.4.2"</span>,</div><div class="line">        <span class="attr">"gulp-uglify"</span>: <span class="string">"^1.2.0"</span>,</div><div class="line">        <span class="attr">"gulp-watch"</span>: <span class="string">"^4.3.4"</span></div><div class="line">    &#125;,</div><div class="line">    <span class="attr">"scripts"</span>: &#123;</div><div class="line">        <span class="attr">"test"</span>: <span class="string">"echo \"Error: no test specified\" &amp;&amp; exit 1"</span></div><div class="line">    &#125;,</div><div class="line">    <span class="attr">"keywords"</span>: [</div><div class="line">      <span class="string">"gulp"</span></div><div class="line">    ],</div><div class="line">    <span class="attr">"author"</span>: <span class="string">"xLsDg"</span>,</div><div class="line">    <span class="attr">"license"</span>: <span class="string">"MIT"</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>每次需要使用的时候，将该文件放到项目文件夹下，在终端中输入 <code>npm install</code> 即可自动安装相应的模块。</p>
<h2 id="配置模板"><a href="#配置模板" class="headerlink" title="配置模板"></a>配置模板</h2><p>安装完模块之后，还需要配置一下对应的工作参数。新建 <code>gulpfile.js</code> 文件与 <code>package.json</code> 文件同一个目录下，内容为：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div><div class="line">255</div><div class="line">256</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> cssSrc = <span class="string">'./less'</span>;</div><div class="line"><span class="keyword">var</span> cssDst = <span class="string">'./css'</span>;</div><div class="line"></div><div class="line"><span class="keyword">var</span> jsSrc = <span class="string">'./js/page'</span>;</div><div class="line"><span class="keyword">var</span> jsDst = <span class="string">'./js/dist'</span>;</div><div class="line"></div><div class="line"><span class="keyword">var</span> htmlSrc = <span class="string">'./views/**'</span>;</div><div class="line"><span class="keyword">var</span> htmlDst = <span class="string">'./html'</span>;</div><div class="line"></div><div class="line"><span class="keyword">var</span> gulp = <span class="built_in">require</span>(<span class="string">'gulp'</span>);</div><div class="line"></div><div class="line"><span class="keyword">var</span> plugins = <span class="built_in">require</span>(<span class="string">'gulp-load-plugins'</span>)(&#123;</div><div class="line">        <span class="attr">pattern</span>: [<span class="string">'gulp-*'</span>, <span class="string">'gulp.*'</span>],</div><div class="line">        <span class="attr">config</span>: __dirname + <span class="string">'/package.json'</span>,</div><div class="line">        <span class="attr">scope</span>: [<span class="string">'devDependencies'</span>],</div><div class="line">        <span class="attr">replaceString</span>: <span class="regexp">/^gulp(-|\.)/</span>, <span class="comment">// what to remove from the name of the module when adding it to the context</span></div><div class="line">        camelize: <span class="literal">true</span>, <span class="comment">// if true, transforms hyphenated plugins names to camel case</span></div><div class="line">        lazy: <span class="literal">true</span>, <span class="comment">// whether the plugins should be lazy loaded on demand</span></div><div class="line">        rename: &#123;&#125; <span class="comment">// a mapping of plugins to rename</span></div><div class="line">    &#125;);</div><div class="line"></div><div class="line">gulp.task(<span class="string">'concat-css'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">return</span> gulp.src([cssDst + <span class="string">'/*.css'</span>, <span class="string">'!'</span> + cssDst + <span class="string">'/all.css'</span>])</div><div class="line">        .pipe(plugins.concat(<span class="string">'all.css'</span>))</div><div class="line">        .pipe(gulp.dest(cssDst));</div><div class="line">&#125;);</div><div class="line"></div><div class="line">gulp.task(<span class="string">'clean-css'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">return</span> gulp.src([cssDst + <span class="string">'/*.css'</span>], &#123;</div><div class="line">            <span class="string">'read'</span>: <span class="literal">false</span></div><div class="line">        &#125;)</div><div class="line">        .pipe(plugins.clean(&#123;</div><div class="line">            <span class="string">'force'</span>: <span class="literal">false</span></div><div class="line">        &#125;));</div><div class="line">&#125;);</div><div class="line"></div><div class="line">gulp.task(<span class="string">'build-css'</span>, [<span class="string">'clean-css'</span>], <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">return</span> gulp.src([cssSrc + <span class="string">'/*.less'</span>, <span class="string">'!'</span> + cssSrc + <span class="string">'/variable.less'</span>])</div><div class="line">        .pipe(plugins.less())</div><div class="line">        .pipe(plugins.csslint(&#123;</div><div class="line">            <span class="string">'important'</span>: <span class="literal">false</span>,</div><div class="line">            <span class="string">'adjoining-classes'</span>: <span class="literal">false</span>,</div><div class="line">            <span class="string">'known-properties'</span>: <span class="literal">false</span>,</div><div class="line">            <span class="string">'box-sizing'</span>: <span class="literal">false</span>,</div><div class="line">            <span class="string">'box-model'</span>: <span class="literal">false</span>,</div><div class="line">            <span class="string">'overqualified-elements'</span>: <span class="literal">false</span>,</div><div class="line">            <span class="string">'display-property-grouping'</span>: <span class="literal">true</span>,</div><div class="line">            <span class="string">'bulletproof-font-face'</span>: <span class="literal">true</span>,</div><div class="line">            <span class="string">'compatible-vendor-prefixes'</span>: <span class="literal">false</span>,</div><div class="line">            <span class="string">'regex-selectors'</span>: <span class="literal">true</span>,</div><div class="line">            <span class="string">'errors'</span>: <span class="literal">true</span>,</div><div class="line">            <span class="string">'duplicate-background-images'</span>: <span class="literal">true</span>,</div><div class="line">            <span class="string">'duplicate-properties'</span>: <span class="literal">true</span>,</div><div class="line">            <span class="string">'empty-rules'</span>: <span class="literal">true</span>,</div><div class="line">            <span class="string">'selector-max-approaching'</span>: <span class="literal">true</span>,</div><div class="line">            <span class="string">'gradients'</span>: <span class="literal">true</span>,</div><div class="line">            <span class="string">'fallback-colors'</span>: <span class="literal">true</span>,</div><div class="line">            <span class="string">'font-sizes'</span>: <span class="literal">false</span>,</div><div class="line">            <span class="string">'font-faces'</span>: <span class="literal">true</span>,</div><div class="line">            <span class="string">'floats'</span>: <span class="literal">false</span>,</div><div class="line">            <span class="string">'star-property-hack'</span>: <span class="literal">false</span>,</div><div class="line">            <span class="string">'outline-none'</span>: <span class="literal">false</span>,</div><div class="line">            <span class="string">'import'</span>: <span class="literal">true</span>,</div><div class="line">            <span class="string">'ids'</span>: <span class="literal">true</span>,</div><div class="line">            <span class="string">'underscore-property-hack'</span>: <span class="literal">false</span>,</div><div class="line">            <span class="string">'rules-count'</span>: <span class="literal">true</span>,</div><div class="line">            <span class="string">'qualified-headings'</span>: <span class="literal">false</span>,</div><div class="line">            <span class="string">'selector-max'</span>: <span class="literal">true</span>,</div><div class="line">            <span class="string">'shorthand'</span>: <span class="literal">true</span>,</div><div class="line">            <span class="string">'text-indent'</span>: <span class="literal">true</span>,</div><div class="line">            <span class="string">'unique-headings'</span>: <span class="literal">false</span>,</div><div class="line">            <span class="string">'universal-selector'</span>: <span class="literal">true</span>,</div><div class="line">            <span class="string">'unqualified-attributes'</span>: <span class="literal">false</span>,</div><div class="line">            <span class="string">'vendor-prefix'</span>: <span class="literal">false</span>,</div><div class="line">            <span class="string">'zero-units'</span>: <span class="literal">true</span>,</div><div class="line">            <span class="string">'force'</span>: <span class="literal">true</span></div><div class="line">        &#125;))</div><div class="line">        .pipe(plugins.csslint.reporter())</div><div class="line">        .pipe(plugins.autoprefixer(&#123;</div><div class="line">            <span class="attr">browsers</span>: [</div><div class="line">                <span class="string">'ie &gt;= 8'</span>,</div><div class="line">                <span class="string">'ff &gt;= 10'</span>,</div><div class="line">                <span class="string">'chrome &gt;= 20'</span>,</div><div class="line">                <span class="string">'safari &gt;= 7'</span>,</div><div class="line">                <span class="string">'opera &gt;= 10'</span>,</div><div class="line">                <span class="string">'ios &gt;= 7'</span>,</div><div class="line">                <span class="string">'android &gt;= 2.3'</span></div><div class="line">            ]</div><div class="line">        &#125;))</div><div class="line">        .pipe(plugins.cssmin(&#123;</div><div class="line">            <span class="string">'compatibility'</span>: <span class="string">'ie8'</span>,</div><div class="line">            <span class="string">'noAdvanced'</span>: <span class="literal">true</span></div><div class="line">        &#125;))</div><div class="line">        .pipe(gulp.dest(cssDst));</div><div class="line">&#125;);</div><div class="line"></div><div class="line">gulp.task(<span class="string">'concat-js'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">return</span> gulp.src([jsDst + <span class="string">'/*.js'</span>, <span class="string">'!'</span> + jsDst + <span class="string">'/all.js'</span>])</div><div class="line">        .pipe(plugins.concat(<span class="string">'all.js'</span>))</div><div class="line">        .pipe(gulp.dest(jsDst));</div><div class="line">&#125;);</div><div class="line"></div><div class="line">gulp.task(<span class="string">'clean-js'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">return</span> gulp.src([jsDst + <span class="string">'/*.js'</span>], &#123;</div><div class="line">            <span class="string">'read'</span>: <span class="literal">false</span></div><div class="line">        &#125;)</div><div class="line">        .pipe(plugins.clean(&#123;</div><div class="line">            <span class="string">'force'</span>: <span class="literal">false</span></div><div class="line">        &#125;));</div><div class="line">&#125;);</div><div class="line"></div><div class="line">gulp.task(<span class="string">'build-js'</span>, [<span class="string">'clean-js'</span>], <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">return</span> gulp.src([jsSrc + <span class="string">'/*.js'</span>])</div><div class="line">        .pipe(plugins.jshint(&#123;</div><div class="line">            <span class="string">'jquery'</span>: <span class="literal">true</span>, <span class="comment">// 检查预定义的全局变量，防止出现$未定义，该项根据实际代码修改</span></div><div class="line">            <span class="string">'bitwise'</span>: <span class="literal">false</span>, <span class="comment">// 不检查位运算</span></div><div class="line">            <span class="string">'browser'</span>: <span class="literal">true</span>, <span class="comment">// 通过浏览器内置的全局变量检测</span></div><div class="line">            <span class="string">'devel'</span>: <span class="literal">true</span>, <span class="comment">// 允许对调试用的alert和console.log的调用</span></div><div class="line">            <span class="string">'camelcase'</span>: <span class="literal">true</span>, <span class="comment">// 强制验证驼峰式命名</span></div><div class="line">            <span class="string">'curly'</span>: <span class="literal">true</span>, <span class="comment">// 强制使用花括号</span></div><div class="line">            <span class="string">'eqeqeq'</span>: <span class="literal">false</span>, <span class="comment">// 不强制使用===比较运算符</span></div><div class="line">            <span class="string">'es3'</span>: <span class="literal">true</span>, <span class="comment">// 兼容es3规范，针对旧版浏览器编写的代码</span></div><div class="line">            <span class="string">'esnext'</span>: <span class="literal">false</span>, <span class="comment">// 不使用最新的es6规范</span></div><div class="line">            <span class="string">'expr'</span>: <span class="literal">true</span>, <span class="comment">// 允许未赋值的函数名表达式，例如console &amp;&amp; console.log(1)</span></div><div class="line">            <span class="string">'forin'</span>: <span class="literal">false</span>, <span class="comment">// 不强制过滤遍历对象继承的属性</span></div><div class="line">            <span class="string">'freeze'</span>: <span class="literal">false</span>, <span class="comment">// 不限制对内置对象的扩展</span></div><div class="line">            <span class="string">'immed'</span>: <span class="literal">true</span>, <span class="comment">// 禁止未用括号包含立即执行函数</span></div><div class="line">            <span class="string">'indent'</span>: <span class="literal">false</span>, <span class="comment">// 不强制缩进</span></div><div class="line">            <span class="string">'latedef'</span>: <span class="literal">true</span>, <span class="comment">// 禁止先调用后定义</span></div><div class="line">            <span class="string">'maxdepth'</span>: <span class="literal">false</span>, <span class="comment">// 不限制代码块嵌套层数</span></div><div class="line">            <span class="string">'maxparams'</span>: <span class="literal">false</span>, <span class="comment">// 不限制函数参数个数</span></div><div class="line">            <span class="string">'newcap'</span>: <span class="literal">false</span>, <span class="comment">// 不对首字母大写的函数强制使用new</span></div><div class="line">            <span class="string">'noarg'</span>: <span class="literal">false</span>, <span class="comment">// 不禁止对arguments.caller和arguments.callee的调用</span></div><div class="line">            <span class="string">'noempty'</span>: <span class="literal">false</span>, <span class="comment">// 不禁止空代码块</span></div><div class="line">            <span class="string">'nonew'</span>: <span class="literal">false</span>, <span class="comment">// 允许直接new实例化而不赋值给变量</span></div><div class="line">            <span class="string">'plusplus'</span>: <span class="literal">false</span>, <span class="comment">// 允许++和--运算符使用</span></div><div class="line">            <span class="string">'quotmark'</span>: <span class="string">'single'</span>, <span class="comment">// 字符串使用单引号</span></div><div class="line">            <span class="string">'scripturl'</span>: <span class="literal">true</span>, <span class="comment">// 允许javascript伪协议的url</span></div><div class="line">            <span class="string">'smarttabs'</span>: <span class="literal">false</span>, <span class="comment">// 允许混合tab和空格缩进</span></div><div class="line">            <span class="string">'strict'</span>: <span class="literal">false</span>, <span class="comment">// 不强制使用es5严格模式</span></div><div class="line">            <span class="string">'sub'</span>: <span class="literal">true</span>, <span class="comment">// 允许用[]形式访问对象属性</span></div><div class="line">            <span class="string">'undef'</span>: <span class="literal">true</span>, <span class="comment">// 禁止明确未定义的变量调用，如果你的变量（myvar）是在其他文件中定义的，可以使用/*global myvar */绕过检测</span></div><div class="line">            <span class="string">'unused'</span>: <span class="literal">false</span>, <span class="comment">// 允许定义没用的变量，在某些函数回调中，经常出现多个参数，但不一定会用</span></div><div class="line">            <span class="string">'multistr'</span>: <span class="literal">false</span>, <span class="comment">// 禁止多行字符串，改用加号连接</span></div><div class="line">            <span class="string">'globals'</span>: &#123;</div><div class="line">                <span class="string">'jQuery'</span>: <span class="literal">true</span>,</div><div class="line">                <span class="string">'FastClick'</span>: <span class="literal">true</span>,</div><div class="line">                <span class="string">'define'</span>: <span class="literal">true</span>,</div><div class="line">                <span class="string">'unescape'</span>: <span class="literal">true</span>,</div><div class="line">                <span class="string">'require'</span>: <span class="literal">true</span>,</div><div class="line">                <span class="string">'iScroll'</span>: <span class="literal">true</span>,</div><div class="line">                <span class="string">'host'</span>: <span class="literal">true</span></div><div class="line">            &#125;</div><div class="line">        &#125;))</div><div class="line">        .pipe(plugins.jshint.reporter(<span class="string">'default'</span>))</div><div class="line">        .pipe(plugins.uglify())</div><div class="line">        .pipe(gulp.dest(jsDst));</div><div class="line">&#125;);</div><div class="line"></div><div class="line">gulp.task(<span class="string">'clean-html'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">return</span> gulp.src([htmlDst + <span class="string">'/*.html'</span>], &#123;</div><div class="line">            <span class="string">'read'</span>: <span class="literal">false</span></div><div class="line">        &#125;)</div><div class="line">        .pipe(plugins.clean(&#123;</div><div class="line">            <span class="string">'force'</span>: <span class="literal">false</span></div><div class="line">        &#125;));</div><div class="line">&#125;);</div><div class="line"></div><div class="line">gulp.task(<span class="string">'build-html'</span>, [<span class="string">'clean-html'</span>], <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">return</span> gulp.src([htmlSrc + <span class="string">'/*.html'</span>])</div><div class="line">        .pipe(plugins.htmlhint(&#123;</div><div class="line">            <span class="string">'tagname-lowercase'</span>: <span class="literal">true</span>,</div><div class="line">            <span class="string">'attr-lowercase'</span>: <span class="literal">true</span>,</div><div class="line">            <span class="string">'attr-value-double-quotes'</span>: <span class="literal">true</span>,</div><div class="line">            <span class="string">'attr-value-not-empty'</span>: <span class="literal">false</span>,</div><div class="line">            <span class="string">'attr-no-duplication'</span>: <span class="literal">true</span>,</div><div class="line">            <span class="string">'doctype-first'</span>: <span class="literal">true</span>,</div><div class="line">            <span class="string">'tag-pair'</span>: <span class="literal">true</span>,</div><div class="line">            <span class="string">'tag-self-close'</span>: <span class="literal">true</span>,</div><div class="line">            <span class="string">'spec-char-escape'</span>: <span class="literal">true</span>,</div><div class="line">            <span class="string">'id-unique'</span>: <span class="literal">true</span>,</div><div class="line">            <span class="string">'src-not-empty'</span>: <span class="literal">true</span>,</div><div class="line">            <span class="string">'head-script-disabled'</span>: <span class="literal">true</span>,</div><div class="line">            <span class="string">'img-alt-require'</span>: <span class="literal">false</span>,</div><div class="line">            <span class="string">'doctype-html5'</span>: <span class="literal">true</span>,</div><div class="line">            <span class="string">'id-class-value'</span>: <span class="literal">true</span>,</div><div class="line">            <span class="string">'style-disabled'</span>: <span class="literal">false</span>,</div><div class="line">            <span class="string">'space-tab-mixed-disabled'</span>: <span class="literal">true</span>,</div><div class="line">            <span class="string">'id-class-ad-disabled'</span>: <span class="literal">true</span>,</div><div class="line">            <span class="string">'href-abs-or-rel'</span>: <span class="literal">true</span>,</div><div class="line">            <span class="string">'attr-unsafe-chars'</span>: <span class="literal">true</span>,</div><div class="line">            <span class="string">'force'</span>: <span class="literal">true</span></div><div class="line">        &#125;))</div><div class="line">        .pipe(plugins.htmlhint.reporter())</div><div class="line">        .pipe(plugins.htmlmin(&#123;</div><div class="line">            <span class="string">'removeComments'</span>: <span class="literal">false</span>,</div><div class="line">            <span class="string">'removeCommentsFromCDATA'</span>: <span class="literal">false</span>,</div><div class="line">            <span class="string">'removeCDATASectionsFromCDATA'</span>: <span class="literal">false</span>,</div><div class="line">            <span class="string">'collapseWhitespace'</span>: <span class="literal">true</span>,</div><div class="line">            <span class="string">'conservativeCollapse'</span>: <span class="literal">false</span>,</div><div class="line">            <span class="string">'preserveLineBreaks'</span>: <span class="literal">false</span>,</div><div class="line">            <span class="string">'collapseBooleanAttributes'</span>: <span class="literal">false</span>,</div><div class="line">            <span class="string">'removeAttributeQuotes'</span>: <span class="literal">false</span>,</div><div class="line">            <span class="string">'removeRedundantAttributes'</span>: <span class="literal">false</span>,</div><div class="line">            <span class="string">'preventAttributesEscaping'</span>: <span class="literal">false</span>,</div><div class="line">            <span class="string">'useShortDoctype'</span>: <span class="literal">false</span>,</div><div class="line">            <span class="string">'removeEmptyAttributes'</span>: <span class="literal">false</span>,</div><div class="line">            <span class="string">'removeScriptTypeAttributes'</span>: <span class="literal">false</span>,</div><div class="line">            <span class="string">'removeStyleLinkTypeAttributes'</span>: <span class="literal">false</span>,</div><div class="line">            <span class="string">'removeOptionalTags'</span>: <span class="literal">false</span>,</div><div class="line">            <span class="string">'removeIgnored'</span>: <span class="literal">false</span>,</div><div class="line">            <span class="string">'removeEmptyElements'</span>: <span class="literal">false</span>,</div><div class="line">            <span class="string">'lint'</span>: <span class="literal">false</span>,</div><div class="line">            <span class="string">'keepClosingSlash'</span>: <span class="literal">false</span>,</div><div class="line">            <span class="string">'caseSensitive'</span>: <span class="literal">false</span>,</div><div class="line">            <span class="string">'minifyJS'</span>: <span class="literal">false</span>,</div><div class="line">            <span class="string">'minifyCSS'</span>: <span class="literal">false</span>,</div><div class="line">            <span class="string">'minifyURLs'</span>: <span class="literal">false</span>,</div><div class="line">            <span class="string">'ignoreCustomComments'</span>: [],</div><div class="line">            <span class="string">'processScripts'</span>: [],</div><div class="line">            <span class="string">'maxLineLength'</span>: [],</div><div class="line">            <span class="string">'customAttrAssign'</span>: [],</div><div class="line">            <span class="string">'customAttrSurround'</span>: [],</div><div class="line">            <span class="string">'customAttrCollapse'</span>: []</div><div class="line">        &#125;))</div><div class="line">        .pipe(gulp.dest(htmlDst));</div><div class="line">&#125;);</div><div class="line"></div><div class="line">gulp.task(<span class="string">'clean-all'</span>, [<span class="string">'clean-css'</span>, <span class="string">'clean-js'</span>, <span class="string">'clean-html'</span>], <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'Clean all files finish.'</span>);</div><div class="line">&#125;);</div><div class="line"></div><div class="line">gulp.task(<span class="string">'build-all'</span>, [<span class="string">'build-css'</span>, <span class="string">'build-js'</span>, <span class="string">'build-html'</span>], <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'Build all files finish.'</span>);</div><div class="line">&#125;);</div><div class="line"></div><div class="line">gulp.task(<span class="string">'no-html'</span>, [<span class="string">'build-css'</span>, <span class="string">'build-js'</span>], <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'Build all files finish.'</span>);</div><div class="line">&#125;);</div><div class="line">gulp.task(<span class="string">'no-js'</span>, [<span class="string">'build-css'</span>, <span class="string">'build-html'</span>], <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'Build all files finish.'</span>);</div><div class="line">&#125;);</div><div class="line">gulp.task(<span class="string">'no-css'</span>, [<span class="string">'build-js'</span>, <span class="string">'build-html'</span>], <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'Build all files finish.'</span>);</div><div class="line">&#125;);</div><div class="line"></div><div class="line">gulp.task(<span class="string">'watch'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    gulp.watch([cssSrc + <span class="string">'/*.less'</span>, jsSrc + <span class="string">'/*.js'</span>, htmlSrc + <span class="string">'/*.html'</span>], [<span class="string">'build-all'</span>]).on(<span class="string">'change'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>&#123;</div><div class="line">        <span class="built_in">console</span>.log(<span class="string">'Event type: '</span> + event.type);</div><div class="line">        <span class="built_in">console</span>.log(<span class="string">'Event path: '</span> + event.path);</div><div class="line">    &#125;);</div><div class="line">&#125;);</div><div class="line"></div><div class="line">gulp.task(<span class="string">'default'</span>, [<span class="string">'build-all'</span>], <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'Build all files finish.'</span>);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>以上内容需根据实际项目情况小做修改即可。</p>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p>1.<a href="http://javascript.ruanyifeng.com/tool/gulp.html" target="_blank" rel="external">Gulp：任务自动管理工具</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Gulp-安装&quot;&gt;&lt;a href=&quot;#Gulp-安装&quot; class=&quot;headerlink&quot; title=&quot;Gulp 安装&quot;&gt;&lt;/a&gt;Gulp 安装&lt;/h2&gt;&lt;p&gt;前提条件：电脑已经配置好 Node.js 的环境。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ npm install -g gulp-cli&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="技术研究" scheme="https://blog.xlsdg.org/categories/%E6%8A%80%E6%9C%AF%E7%A0%94%E7%A9%B6/"/>
    
    
      <category term="Gulp" scheme="https://blog.xlsdg.org/tags/Gulp/"/>
    
      <category term="Node-js" scheme="https://blog.xlsdg.org/tags/Node-js/"/>
    
  </entry>
  
  <entry>
    <title>花密PHP核心代码</title>
    <link href="https://blog.xlsdg.org/2015/06/21/flower-password-php-core-code/"/>
    <id>https://blog.xlsdg.org/2015/06/21/flower-password-php-core-code/</id>
    <published>2015-06-21T06:30:00.000Z</published>
    <updated>2016-12-09T10:51:50.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="花密简介"><a href="#花密简介" class="headerlink" title="花密简介"></a>花密简介</h2><p>“花密”提供一种简单的密码管理方法，你只需要记住一个“记忆密码”，为不同的账号设置不同的“区分代号”，然后通过“花密”计算就可以得到不同的复杂密码。</p>
<a id="more"></a>
<h2 id="核心代码"><a href="#核心代码" class="headerlink" title="核心代码"></a>核心代码</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line"></div><div class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">"pwd"</span>]) &amp;&amp; <span class="keyword">isset</span>($_GET[<span class="string">"key"</span>])) &#123;</div><div class="line">    $pwd = $_GET[<span class="string">"pwd"</span>];</div><div class="line">    $key = $_GET[<span class="string">"key"</span>];</div><div class="line">    $len = <span class="keyword">isset</span>($_GET[<span class="string">"len"</span>]) ? $_GET[<span class="string">"len"</span>] : <span class="number">16</span>;</div><div class="line"></div><div class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">"pwd"</span>]) &amp;&amp; <span class="keyword">isset</span>($_POST[<span class="string">"key"</span>])) &#123;</div><div class="line">    $pwd = $_POST[<span class="string">"pwd"</span>];</div><div class="line">    $key = $_POST[<span class="string">"key"</span>];</div><div class="line">    $len = <span class="keyword">isset</span>($_POST[<span class="string">"len"</span>]) ? $_POST[<span class="string">"len"</span>] : <span class="number">16</span>;</div><div class="line">&#125; <span class="keyword">else</span> &#123;</div><div class="line">    <span class="keyword">echo</span> <span class="string">""</span>;</div><div class="line">    <span class="keyword">exit</span>(<span class="number">0</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">if</span> ($pwd &amp;&amp; $key &amp;&amp; $len) &#123;</div><div class="line">    $objFP = <span class="keyword">new</span> FlowerPassword();</div><div class="line">    $code = $objFP-&gt;fpCode($pwd, $key, $len);</div><div class="line">    <span class="keyword">unset</span>($objFP);</div><div class="line"></div><div class="line">    <span class="keyword">if</span> ($code !== <span class="keyword">false</span>) &#123;</div><div class="line">        <span class="keyword">echo</span> $code;</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        <span class="keyword">echo</span> <span class="string">""</span>;</div><div class="line">    &#125;</div><div class="line">&#125; <span class="keyword">else</span> &#123;</div><div class="line">    <span class="keyword">echo</span> <span class="string">""</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">FlowerPassword</span> </span>&#123;</div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">fpCode</span><span class="params">($password, $key, $length = <span class="number">16</span>)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> ($password &amp;&amp; $key &amp;&amp; (<span class="number">1</span> &lt; $length) &amp;&amp; ($length &lt; <span class="number">33</span>)) &#123;</div><div class="line">            $hmd5 = hash_hmac(<span class="string">'md5'</span>, $password, $key);</div><div class="line">            $rule = str_split(hash_hmac(<span class="string">'md5'</span>, $hmd5, <span class="string">"kise"</span>));</div><div class="line">            $source = str_split(hash_hmac(<span class="string">'md5'</span>, $hmd5, <span class="string">"snow"</span>));</div><div class="line">            $str = <span class="string">"sunlovesnow1990090127xykab"</span>;</div><div class="line">            <span class="keyword">for</span> ($i = <span class="number">0</span>; $i &lt; <span class="number">32</span>; $i++) &#123;</div><div class="line">                <span class="keyword">if</span> (!is_numeric($source[$i])) &#123;</div><div class="line">                    <span class="keyword">if</span> (stripos($str, $rule[$i]) !== <span class="keyword">false</span>) &#123;</div><div class="line">                        $source[$i] = strtoupper($source[$i]);</div><div class="line">                    &#125;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">if</span> (is_numeric($source[<span class="number">0</span>])) &#123;</div><div class="line">                $source[<span class="number">0</span>] = <span class="string">'K'</span>;</div><div class="line">            &#125;</div><div class="line">            $code = substr(implode($source), <span class="number">0</span>, $length);</div><div class="line">            <span class="keyword">return</span> $code;</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="meta">?&gt;</span></div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;花密简介&quot;&gt;&lt;a href=&quot;#花密简介&quot; class=&quot;headerlink&quot; title=&quot;花密简介&quot;&gt;&lt;/a&gt;花密简介&lt;/h2&gt;&lt;p&gt;“花密”提供一种简单的密码管理方法，你只需要记住一个“记忆密码”，为不同的账号设置不同的“区分代号”，然后通过“花密”计算就可以得到不同的复杂密码。&lt;/p&gt;
    
    </summary>
    
      <category term="技术研究" scheme="https://blog.xlsdg.org/categories/%E6%8A%80%E6%9C%AF%E7%A0%94%E7%A9%B6/"/>
    
    
      <category term="Flower Password" scheme="https://blog.xlsdg.org/tags/Flower-Password/"/>
    
      <category term="PHP" scheme="https://blog.xlsdg.org/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>花密C语言核心代码</title>
    <link href="https://blog.xlsdg.org/2015/06/10/flower-password-c-core-code/"/>
    <id>https://blog.xlsdg.org/2015/06/10/flower-password-c-core-code/</id>
    <published>2015-06-10T02:30:00.000Z</published>
    <updated>2016-12-09T10:49:46.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>下载依赖库：spaniakos 的 <a href="https://github.com/spaniakos/ArduinoMD5" title="ArduinoMD5" target="_blank" rel="external">ArduinoMD5</a> 。</p>
<p>选择这个库的原因是代码可以在 Arduino 或 Raspberry Pi 上运行。</p>
<a id="more"></a>
<h2 id="头文件包含"><a href="#头文件包含" class="headerlink" title="头文件包含"></a>头文件包含</h2><p>拷贝三个文件：<code>MD5_config.h</code> 、 <code>MD5.h</code> 、 <code>MD5.cpp</code> 到项目文件夹，并在源代码文件中包含：</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"MD5.h"</span></span></div></pre></td></tr></table></figure>
<h2 id="核心代码"><a href="#核心代码" class="headerlink" title="核心代码"></a>核心代码</h2><p>JavaScript的isNaN()函数C语言实现：</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">char</span> <span class="title">isNaN</span><span class="params">(<span class="keyword">char</span> ch)</span> </span>&#123;</div><div class="line">  <span class="keyword">if</span> (<span class="string">'0'</span> &lt;= ch &amp;&amp; ch &lt;= <span class="string">'9'</span>) &#123;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">  &#125; <span class="keyword">else</span> &#123;</div><div class="line">    <span class="keyword">return</span> <span class="number">1</span>;</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>字母字符转大写：</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">char</span> <span class="title">toupper</span><span class="params">(<span class="keyword">char</span> c)</span> </span>&#123;</div><div class="line">  <span class="keyword">if</span> ((<span class="string">'a'</span> &lt;= c) &amp;&amp; (c &lt;= <span class="string">'z'</span>)) &#123;</div><div class="line">    c = c - (<span class="string">'a'</span> - <span class="string">'A'</span>);</div><div class="line">  &#125;</div><div class="line">  <span class="keyword">return</span> c;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>花密计算核心代码：</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">char</span> <span class="title">fpCode</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span>* password, <span class="keyword">char</span>* key, <span class="keyword">char</span> code[<span class="number">33</span>], <span class="keyword">unsigned</span> <span class="keyword">char</span> length)</span> </span>&#123;</div><div class="line">  <span class="keyword">unsigned</span> <span class="keyword">char</span> pwdLen = <span class="built_in">strlen</span>(password);</div><div class="line">  <span class="keyword">unsigned</span> <span class="keyword">char</span> keyLen = <span class="built_in">strlen</span>(key);</div><div class="line"></div><div class="line">  <span class="keyword">if</span> ((<span class="number">1</span> &gt; pwdLen) || (<span class="number">1</span> &gt; keyLen) || (<span class="number">1u</span> &gt; length) || (length &gt; <span class="number">32u</span>)) &#123;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  MD5 hashMD5;</div><div class="line"></div><div class="line">  <span class="keyword">char</span>* pHmd5 = hashMD5.hmac_md5(password, pwdLen, key, keyLen);</div><div class="line">  <span class="keyword">char</span> hmd5[<span class="number">32</span>];</div><div class="line">  <span class="built_in">memcpy</span>(hmd5, pHmd5, <span class="number">32</span>);</div><div class="line"></div><div class="line">  <span class="keyword">char</span>* pKise = <span class="string">"kise"</span>;</div><div class="line">  <span class="keyword">char</span>* pRule = hashMD5.hmac_md5(hmd5, <span class="number">32</span>, pKise, <span class="number">4</span>);</div><div class="line">  <span class="keyword">char</span> rule[<span class="number">32</span>];</div><div class="line">  <span class="built_in">memcpy</span>(rule, pRule, <span class="number">32</span>);</div><div class="line"></div><div class="line">  <span class="keyword">char</span>* pSnow = <span class="string">"snow"</span>;</div><div class="line">  <span class="keyword">char</span>* pSource = hashMD5.hmac_md5(hmd5, <span class="number">32</span>, pSnow, <span class="number">4</span>);</div><div class="line">  <span class="keyword">char</span> source[<span class="number">32</span>];</div><div class="line">  <span class="built_in">memcpy</span>(source, pSource, <span class="number">32</span>);</div><div class="line"></div><div class="line">  <span class="keyword">for</span> (<span class="keyword">unsigned</span> <span class="keyword">char</span> i = <span class="number">0</span>; i &lt; <span class="number">32</span>; i++) &#123;</div><div class="line">    <span class="keyword">if</span> (isNaN(source[i])) &#123;</div><div class="line">      <span class="keyword">if</span> (<span class="built_in">strchr</span>(<span class="string">"sunlovesnow1990090127xykab"</span>, rule[i]) != <span class="literal">NULL</span>) &#123;</div><div class="line">        source[i] = <span class="built_in">toupper</span>(source[i]);</div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="keyword">if</span> (isNaN(source[<span class="number">0</span>]) == <span class="number">0</span>) &#123;</div><div class="line">    source[<span class="number">0</span>] = <span class="string">'K'</span>;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="built_in">memset</span>(code, <span class="number">0</span>, <span class="number">33</span>);</div><div class="line">  <span class="built_in">memcpy</span>(code, source, <span class="keyword">sizeof</span>(<span class="keyword">char</span>) * length);</div><div class="line"></div><div class="line">  <span class="keyword">return</span> <span class="number">1</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p>生成 <code>code[]</code> 的数组为什么不是32，而是33？</p>
<p>是为了输出字符串结果，特意多加了一个 <code>&#39;\0&#39;</code> 位。</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">char</span>* p = <span class="string">"password"</span>;</div><div class="line"><span class="keyword">char</span>* k = <span class="string">"key"</span>;</div><div class="line"><span class="keyword">char</span> c[<span class="number">33</span>];</div><div class="line"></div><div class="line"><span class="keyword">if</span> (fpCode(p, k, c, <span class="number">16</span>) == <span class="number">1</span>) &#123;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"fpCode=%s"</span>, c);</div><div class="line">&#125; <span class="keyword">else</span> &#123;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"Error!"</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;准备工作&quot;&gt;&lt;a href=&quot;#准备工作&quot; class=&quot;headerlink&quot; title=&quot;准备工作&quot;&gt;&lt;/a&gt;准备工作&lt;/h2&gt;&lt;p&gt;下载依赖库：spaniakos 的 &lt;a href=&quot;https://github.com/spaniakos/ArduinoMD5&quot; title=&quot;ArduinoMD5&quot;&gt;ArduinoMD5&lt;/a&gt; 。&lt;/p&gt;
&lt;p&gt;选择这个库的原因是代码可以在 Arduino 或 Raspberry Pi 上运行。&lt;/p&gt;
    
    </summary>
    
      <category term="技术研究" scheme="https://blog.xlsdg.org/categories/%E6%8A%80%E6%9C%AF%E7%A0%94%E7%A9%B6/"/>
    
    
      <category term="Flower Password" scheme="https://blog.xlsdg.org/tags/Flower-Password/"/>
    
      <category term="C" scheme="https://blog.xlsdg.org/tags/C/"/>
    
      <category term="Arduino" scheme="https://blog.xlsdg.org/tags/Arduino/"/>
    
      <category term="Raspberry-Pi" scheme="https://blog.xlsdg.org/tags/Raspberry-Pi/"/>
    
  </entry>
  
  <entry>
    <title>花密Python核心代码</title>
    <link href="https://blog.xlsdg.org/2015/06/09/flower-password-python-core-code/"/>
    <id>https://blog.xlsdg.org/2015/06/09/flower-password-python-core-code/</id>
    <published>2015-06-09T02:30:00.000Z</published>
    <updated>2016-12-09T10:52:25.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="花密简介"><a href="#花密简介" class="headerlink" title="花密简介"></a>花密简介</h2><p>“花密”提供一种简单的密码管理方法，你只需要记住一个“记忆密码”，为不同的账号设置不同的“区分代号”，然后通过“花密”计算就可以得到不同的复杂密码。</p>
<a id="more"></a>
<h2 id="Python-2-x-核心代码"><a href="#Python-2-x-核心代码" class="headerlink" title="Python 2.x 核心代码"></a>Python 2.x 核心代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> sys</div><div class="line"><span class="keyword">import</span> hmac</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">generateFPCode</span><span class="params">(password, key, length = <span class="number">16</span>)</span>:</span></div><div class="line">    <span class="keyword">if</span> (<span class="number">1</span> &gt; len(password.strip())) <span class="keyword">or</span> (<span class="number">1</span> &gt; len(key.strip())) <span class="keyword">or</span> (<span class="number">1</span> &gt; length) <span class="keyword">or</span> (length &gt; <span class="number">32</span>):</div><div class="line">        <span class="keyword">return</span>;</div><div class="line"></div><div class="line">    hmd5 = hmac.new(key, password).hexdigest();</div><div class="line">    rule = list(hmac.new(<span class="string">"kise"</span>, hmd5).hexdigest());</div><div class="line">    source = list(hmac.new(<span class="string">"snow"</span>, hmd5).hexdigest());</div><div class="line"></div><div class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, <span class="number">32</span>):</div><div class="line">        <span class="keyword">if</span> <span class="keyword">not</span>(source[i].isdigit()):</div><div class="line">            <span class="keyword">if</span> rule[i] <span class="keyword">in</span> <span class="string">"sunlovesnow1990090127xykab"</span>:</div><div class="line">                source[i] = source[i].upper();</div><div class="line"></div><div class="line">    code = <span class="string">""</span>.join(source[<span class="number">1</span>:length]);</div><div class="line">    <span class="keyword">if</span> <span class="keyword">not</span>(source[<span class="number">0</span>].isdigit()):</div><div class="line">        code = source[<span class="number">0</span>] + code;</div><div class="line">    <span class="keyword">else</span>:</div><div class="line">        code = <span class="string">"K"</span> + code;</div><div class="line"></div><div class="line">    <span class="keyword">return</span> code;</div></pre></td></tr></table></figure>
<h2 id="Python-3-x-核心代码"><a href="#Python-3-x-核心代码" class="headerlink" title="Python 3.x 核心代码"></a>Python 3.x 核心代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> sys</div><div class="line"><span class="keyword">import</span> hmac</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">generateFPCode</span><span class="params">(password, key, length = <span class="number">16</span>)</span>:</span></div><div class="line">    <span class="keyword">if</span> (<span class="number">1</span> &gt; len(password.strip())) <span class="keyword">or</span> (<span class="number">1</span> &gt; len(key.strip())) <span class="keyword">or</span> (<span class="number">1</span> &gt; length) <span class="keyword">or</span> (length &gt; <span class="number">32</span>):</div><div class="line">        <span class="keyword">return</span>;</div><div class="line"></div><div class="line">    password = password.encode(encoding=<span class="string">"utf-8"</span>);</div><div class="line">    key = key.encode(encoding=<span class="string">"utf-8"</span>);</div><div class="line"></div><div class="line">    hmd5 = hmac.new(key, password).hexdigest().encode(encoding=<span class="string">"utf-8"</span>);</div><div class="line">    rule = list(hmac.new(<span class="string">"kise"</span>.encode(encoding=<span class="string">"utf-8"</span>), hmd5).hexdigest());</div><div class="line">    source = list(hmac.new(<span class="string">"snow"</span>.encode(encoding=<span class="string">"utf-8"</span>), hmd5).hexdigest());</div><div class="line"></div><div class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, <span class="number">32</span>):</div><div class="line">        <span class="keyword">if</span> <span class="keyword">not</span>(source[i].isdigit()):</div><div class="line">            <span class="keyword">if</span> rule[i] <span class="keyword">in</span> <span class="string">"sunlovesnow1990090127xykab"</span>:</div><div class="line">                source[i] = source[i].upper();</div><div class="line"></div><div class="line">    code = <span class="string">""</span>.join(source[<span class="number">1</span>:length]);</div><div class="line">    <span class="keyword">if</span> <span class="keyword">not</span>(source[<span class="number">0</span>].isdigit()):</div><div class="line">        code = source[<span class="number">0</span>] + code;</div><div class="line">    <span class="keyword">else</span>:</div><div class="line">        code = <span class="string">"K"</span> + code;</div><div class="line"></div><div class="line">    <span class="keyword">return</span> code;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;花密简介&quot;&gt;&lt;a href=&quot;#花密简介&quot; class=&quot;headerlink&quot; title=&quot;花密简介&quot;&gt;&lt;/a&gt;花密简介&lt;/h2&gt;&lt;p&gt;“花密”提供一种简单的密码管理方法，你只需要记住一个“记忆密码”，为不同的账号设置不同的“区分代号”，然后通过“花密”计算就可以得到不同的复杂密码。&lt;/p&gt;
    
    </summary>
    
      <category term="技术研究" scheme="https://blog.xlsdg.org/categories/%E6%8A%80%E6%9C%AF%E7%A0%94%E7%A9%B6/"/>
    
    
      <category term="Flower Password" scheme="https://blog.xlsdg.org/tags/Flower-Password/"/>
    
      <category term="Python" scheme="https://blog.xlsdg.org/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>花密JavaScript核心代码</title>
    <link href="https://blog.xlsdg.org/2015/06/08/flower-password-javascript-core-code/"/>
    <id>https://blog.xlsdg.org/2015/06/08/flower-password-javascript-core-code/</id>
    <published>2015-06-08T09:30:00.000Z</published>
    <updated>2016-12-09T10:50:49.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="花密简介"><a href="#花密简介" class="headerlink" title="花密简介"></a>花密简介</h2><p>“花密”提供一种简单的密码管理方法，你只需要记住一个“记忆密码”，为不同的账号设置不同的“区分代号”，然后通过“花密”计算就可以得到不同的复杂密码。</p>
<a id="more"></a>
<h2 id="核心代码"><a href="#核心代码" class="headerlink" title="核心代码"></a>核心代码</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">&lt;script src=<span class="string">"https://raw.githubusercontent.com/blueimp/JavaScript-MD5/master/js/md5.min.js"</span>&gt;&lt;/script&gt;</div><div class="line"></div><div class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="title">generateFPCode</span>(<span class="params">password, key, length</span>) </span>&#123;</div><div class="line">        length = length || <span class="number">16</span>;</div><div class="line">        <span class="keyword">if</span> (password &amp;&amp; key &amp;&amp; (<span class="number">1</span> &lt; length) &amp;&amp; (length &lt; <span class="number">33</span>)) &#123;</div><div class="line">            <span class="keyword">var</span> hmd5 = md5(password, key);</div><div class="line">            <span class="keyword">var</span> rule = md5(hmd5, <span class="string">'kise'</span>).split(<span class="string">""</span>);</div><div class="line">            <span class="keyword">var</span> source = md5(hmd5, <span class="string">'snow'</span>).split(<span class="string">""</span>);</div><div class="line">            <span class="keyword">var</span> str = <span class="string">"sunlovesnow1990090127xykab"</span>;</div><div class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">32</span>; i++) &#123;</div><div class="line">                <span class="keyword">if</span> (<span class="built_in">isNaN</span>(source[i])) &#123;</div><div class="line">                    <span class="keyword">if</span> (str.search(rule[i]) &gt; <span class="number">-1</span>) &#123;</div><div class="line">                        source[i] = source[i].toUpperCase();</div><div class="line">                    &#125;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">var</span> code32 = source.join(<span class="string">""</span>);</div><div class="line">            <span class="keyword">var</span> code01 = code32.slice(<span class="number">0</span>, <span class="number">1</span>);</div><div class="line">            code32 = (<span class="built_in">isNaN</span>(code01) ? code01 : <span class="string">"K"</span>) + code32.slice(<span class="number">1</span>, length);</div><div class="line">            <span class="keyword">return</span> code32;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&lt;<span class="regexp">/script&gt;</span></div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;花密简介&quot;&gt;&lt;a href=&quot;#花密简介&quot; class=&quot;headerlink&quot; title=&quot;花密简介&quot;&gt;&lt;/a&gt;花密简介&lt;/h2&gt;&lt;p&gt;“花密”提供一种简单的密码管理方法，你只需要记住一个“记忆密码”，为不同的账号设置不同的“区分代号”，然后通过“花密”计算就可以得到不同的复杂密码。&lt;/p&gt;
    
    </summary>
    
      <category term="技术研究" scheme="https://blog.xlsdg.org/categories/%E6%8A%80%E6%9C%AF%E7%A0%94%E7%A9%B6/"/>
    
    
      <category term="Flower Password" scheme="https://blog.xlsdg.org/tags/Flower-Password/"/>
    
      <category term="JavaScript" scheme="https://blog.xlsdg.org/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript学习笔记</title>
    <link href="https://blog.xlsdg.org/2015/06/03/javascript-study-notes/"/>
    <id>https://blog.xlsdg.org/2015/06/03/javascript-study-notes/</id>
    <published>2015-06-03T04:30:00.000Z</published>
    <updated>2016-12-09T13:31:51.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="JavaScript-用法"><a href="#JavaScript-用法" class="headerlink" title="JavaScript 用法"></a>JavaScript 用法</h2><ol>
<li><p><code>&lt;script&gt;</code> 标签</p>
 <figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></div><div class="line">    alert(<span class="string">"我的第一个 JavaScript"</span>);</div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
 <a id="more"></a>
</li>
<li><p><code>&lt;head&gt;</code> 中的 JavaScript 函数</p>
 <figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></div><div class="line">        <span class="function"><span class="keyword">function</span> <span class="title">myFunction</span>(<span class="params"></span>) </span>&#123;</div><div class="line">        <span class="built_in">document</span>.getElementById(<span class="string">"demo"</span>).innerHTML=<span class="string">"我的第一个 JavaScript 函数"</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>我的 Web 页面<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"demo"</span>&gt;</span>一个段落<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">onclick</span>=<span class="string">"myFunction()"</span>&gt;</span>尝试一下<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
<li><p><code>&lt;body&gt;</code> 中的 JavaScript 函数</p>
 <figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>我的 Web 页面<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"demo"</span>&gt;</span>一个段落<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">onclick</span>=<span class="string">"myFunction()"</span>&gt;</span>尝试一下<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></div><div class="line">        <span class="function"><span class="keyword">function</span> <span class="title">myFunction</span>(<span class="params"></span>) </span>&#123;</div><div class="line">        <span class="built_in">document</span>.getElementById(<span class="string">"demo"</span>).innerHTML=<span class="string">"我的第一个 JavaScript 函数"</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
<li><p>外部的 JavaScript</p>
<p> 外部脚本不能包含 <code>&lt;script&gt;</code> 标签。</p>
 <figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"myScript.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="JavaScript-输出"><a href="#JavaScript-输出" class="headerlink" title="JavaScript 输出"></a>JavaScript 输出</h2><ol>
<li><p>写到 HTML 文档</p>
 <figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>我的第一个 Web 页面<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>我的第一个段落。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">"myFunction()"</span>&gt;</span>点我<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></div><div class="line">        <span class="function"><span class="keyword">function</span> <span class="title">myFunction</span>(<span class="params"></span>) </span>&#123;</div><div class="line">            <span class="built_in">document</span>.write(<span class="built_in">Date</span>());</div><div class="line">        &#125;</div><div class="line">        <span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
<li><p>写到控制台</p>
 <figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>我的第一个 Web 页面<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></div><div class="line">        a = <span class="number">5</span>;</div><div class="line">        b = <span class="number">6</span>;</div><div class="line">        c = a + b;</div><div class="line">        <span class="built_in">console</span>.log(c);</div><div class="line">        <span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="JavaScript-语句"><a href="#JavaScript-语句" class="headerlink" title="JavaScript 语句"></a>JavaScript 语句</h2><ol>
<li><p>JavaScript 对大小写敏感</p>
<p> 函数 getElementById 与 getElementbyID 是不同的，同样，变量 myVariable 与 MyVariable 也是不同的。</p>
</li>
<li><p>对代码行进行折行</p>
<p> 可以在文本字符串中使用反斜杠对代码行进行换行。</p>
 <figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">document.write("你好 \</div><div class="line">世界!");</div></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="JavaScript-注释"><a href="#JavaScript-注释" class="headerlink" title="JavaScript 注释"></a>JavaScript 注释</h2><ol>
<li><p>JavaScript 单行注释</p>
 <figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">// 输出标题：</div><div class="line">document.getElementById("myH1").innerHTML="欢迎来到我的主页";</div><div class="line">// 输出段落：</div><div class="line">document.getElementById("myP").innerHTML="这是我的第一个段落。";</div></pre></td></tr></table></figure>
</li>
<li><p>JavaScript 多行注释</p>
 <figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">/*</div><div class="line">下面的这些代码会输出</div><div class="line">一个标题和一个段落</div><div class="line">并将代表主页的开始</div><div class="line">*/</div><div class="line">document.getElementById("myH1").innerHTML="欢迎来到我的主页";</div><div class="line">document.getElementById("myP").innerHTML="这是我的第一个段落。";</div></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="JavaScript-变量"><a href="#JavaScript-变量" class="headerlink" title="JavaScript 变量"></a>JavaScript 变量</h2><p>变量必须以字母开头；变量也能以 <code>$</code> 和 <code>_</code> 符号开头；变量名称对大小写敏感。</p>
<ol>
<li><p>声明（创建） JavaScript 变量</p>
 <figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">var carname="Volvo";</div></pre></td></tr></table></figure>
</li>
<li><p>一条语句，多个变量</p>
 <figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">var lastname="Doe", age=30, job="carpenter";</div></pre></td></tr></table></figure>
</li>
<li><p>Value = undefined</p>
<p> 未使用值来声明的变量，其值实际上是 undefined。</p>
 <figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">var carname;</div></pre></td></tr></table></figure>
</li>
<li><p>重新声明 JavaScript 变量</p>
<p> 如果重新声明 JavaScript 变量，该变量的值不会丢失。</p>
 <figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">var carname="Volvo";</div><div class="line">var carname;</div></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="JavaScript-数据类型"><a href="#JavaScript-数据类型" class="headerlink" title="JavaScript 数据类型"></a>JavaScript 数据类型</h2><p>字符串（String）、数字(Number)、布尔(Boolean)、数组(Array)、对象(Object)、空（Null）、未定义（Undefined）。</p>
<ol>
<li><p>JavaScript 拥有动态类型</p>
 <figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">var x;               // x 为 undefined</div><div class="line">var x = 5;           // 现在 x 为数字</div><div class="line">var x = "John";      // 现在 x 为字符串</div></pre></td></tr></table></figure>
</li>
<li><p>JavaScript 字符串</p>
 <figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">var answer="It's alright";</div><div class="line">var answer="He is called 'Johnny'";</div><div class="line">var answer='He is called "Johnny"';</div></pre></td></tr></table></figure>
</li>
<li><p>JavaScript 数字</p>
 <figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">var y=123e5;      // 12300000</div><div class="line">var z=123e-5;     // 0.00123</div></pre></td></tr></table></figure>
</li>
<li><p>JavaScript 布尔</p>
 <figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">var x=true;</div><div class="line">var y=false;</div></pre></td></tr></table></figure>
</li>
<li><p>JavaScript 数组</p>
 <figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">var cars1=new Array();</div><div class="line">cars1[0]="Saab";</div><div class="line">cars1[1]="Volvo";</div><div class="line">cars1[2]="BMW";</div><div class="line">var cars2=new Array("Saab","Volvo","BMW");</div><div class="line">var cars3=["Saab","Volvo","BMW"];</div></pre></td></tr></table></figure>
</li>
<li><p>JavaScript 对象</p>
 <figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">var person=&#123;firstname:"John", lastname:"Doe", id:5566&#125;;</div><div class="line">var name1=person.lastname;</div><div class="line">var name2=person["lastname"];</div></pre></td></tr></table></figure>
</li>
<li><p>Undefined 和 Null</p>
<p> Undefined 这个值表示变量不含有值，可以通过将变量的值设置为 null 来清空变量。</p>
 <figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cars=null;</div><div class="line">person=null;</div></pre></td></tr></table></figure>
</li>
<li><p>声明变量类型</p>
 <figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">var carname=new String;</div><div class="line">var x=      new Number;</div><div class="line">var y=      new Boolean;</div><div class="line">var cars=   new Array;</div><div class="line">var person= new Object;</div></pre></td></tr></table></figure>
</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;JavaScript-用法&quot;&gt;&lt;a href=&quot;#JavaScript-用法&quot; class=&quot;headerlink&quot; title=&quot;JavaScript 用法&quot;&gt;&lt;/a&gt;JavaScript 用法&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; 标签&lt;/p&gt;
 &lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;javascript&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    alert(&lt;span class=&quot;string&quot;&gt;&quot;我的第一个 JavaScript&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="编程笔记" scheme="https://blog.xlsdg.org/categories/%E7%BC%96%E7%A8%8B%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="JavaScript" scheme="https://blog.xlsdg.org/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>树莓派之Node.js环境配置</title>
    <link href="https://blog.xlsdg.org/2015/06/02/install-node-js-on-the-raspberry-pi/"/>
    <id>https://blog.xlsdg.org/2015/06/02/install-node-js-on-the-raspberry-pi/</id>
    <published>2015-06-02T13:30:00.000Z</published>
    <updated>2016-12-09T15:56:06.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一键安装"><a href="#一键安装" class="headerlink" title="一键安装"></a>一键安装</h2><p>优点：简单、快捷、方便、省事。</p>
<p>缺点：以这个方法安装的Node.js版本比较低。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo aptitude install nodejs</div></pre></td></tr></table></figure>
<a id="more"></a>
<h2 id="源码安装"><a href="#源码安装" class="headerlink" title="源码安装"></a>源码安装</h2><p>优点：能安装最新版或任意版本的Node.js。</p>
<p>缺点：源码编译时间的时间比较长。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$ wget http://nodejs.org/dist/node-latest.tar.gz</div><div class="line">$ tar -xvzf node-latest.tar.gz</div><div class="line">$ <span class="built_in">cd</span> node-latest/</div><div class="line">$ ./configure</div><div class="line">$ make</div><div class="line">$ sudo make install</div></pre></td></tr></table></figure>
<h2 id="软件包安装"><a href="#软件包安装" class="headerlink" title="软件包安装"></a>软件包安装</h2><p>优点：简单、快捷、方便、省事，可以安装到比较新的版本。</p>
<p>缺点：暂未发现。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ wget http://node-arm.herokuapp.com/node_latest_armhf.deb</div><div class="line">$ sudo dpkg -i node_latest_armhf.deb</div></pre></td></tr></table></figure>
<h2 id="通过NVM安装"><a href="#通过NVM安装" class="headerlink" title="通过NVM安装"></a>通过NVM安装</h2><p>优点：官网v0.10.28之前的任意版本都可以直接安装；可以任意切换不同版本；</p>
<p>缺点：v0.10.28之后的版本都要以源码编译的方式安装。</p>
<ol>
<li><p>安装NVM：</p>
 <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git <span class="built_in">clone</span> https://github.com/creationix/nvm.git ~/.nvm &amp;&amp; <span class="built_in">cd</span> ~/.nvm &amp;&amp; git checkout `git describe --abbrev=0 --tags`</div></pre></td></tr></table></figure>
</li>
<li><p>编辑 <code>~/.bashrc</code> 或 <code>~/.profile</code> 或 <code>~/.zshrc</code> 或 <code>~/.bash_profile</code> 文件（如果存在的话），添加下面代码到最后一行：</p>
 <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> [ <span class="_">-f</span> ~/.nvm/nvm.sh ]; <span class="keyword">then</span></div><div class="line"> <span class="built_in">export</span> NVM_NODEJS_ORG_MIRROR=http://npm.taobao.org/mirrors/node</div><div class="line"> <span class="built_in">export</span> NVM_IOJS_ORG_MIRROR=http://npm.taobao.org/mirrors/iojs</div><div class="line">    . ~/.nvm/nvm.sh</div><div class="line">    [[ -r ~/.nvm/bash_completion ]] &amp;&amp; . ~/.nvm/bash_completion</div><div class="line"><span class="keyword">fi</span></div></pre></td></tr></table></figure>
</li>
<li><p>通过以下类似命令安装任意版本的Node.js，以v0.10.28为例：</p>
 <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ nvm install v0.10.28</div></pre></td></tr></table></figure>
</li>
<li><p>切换或使用特定版本的Node.js：</p>
 <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ nvm use v0.10.27</div></pre></td></tr></table></figure>
</li>
<li><p>查看使用的Node.js版本：</p>
 <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ nvm ls</div></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="通过n模块更新Node-js"><a href="#通过n模块更新Node-js" class="headerlink" title="通过n模块更新Node.js"></a>通过n模块更新Node.js</h2><ol>
<li><p>安装n模块:</p>
 <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo npm install -g n</div></pre></td></tr></table></figure>
</li>
<li><p>更新最新版Node.js:</p>
 <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo n latest</div></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="安装CNPM"><a href="#安装CNPM" class="headerlink" title="安装CNPM"></a>安装CNPM</h2><ol>
<li><p>具体参考：<a href="http://npm.taobao.org/" title="淘宝 NPM 镜像" target="_blank" rel="external">淘宝 NPM 镜像</a></p>
 <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install -g cnpm --registry=http://registry.npm.taobao.org</div></pre></td></tr></table></figure>
</li>
<li><p>通过CNPM安装模块</p>
 <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ cnpm install [name]</div></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="解决NPM慢的问题"><a href="#解决NPM慢的问题" class="headerlink" title="解决NPM慢的问题"></a>解决NPM慢的问题</h2><ol>
<li><p>使用淘宝NPM镜像：</p>
 <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo npm config <span class="built_in">set</span> registry http://registry.npm.taobao.org/</div></pre></td></tr></table></figure>
</li>
<li><p>使用代理：</p>
 <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ sudo npm config <span class="built_in">set</span> proxy http://hx.gy:1080</div><div class="line">$ sudo npm config <span class="built_in">set</span> https-proxy http://hx.gy:1080</div></pre></td></tr></table></figure>
</li>
<li><p>查看配置：</p>
 <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo npm config list</div></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="安装io-js"><a href="#安装io-js" class="headerlink" title="安装io.js"></a>安装io.js</h2><p>io.js的安装相对比较简单，官方已有编译好的二进制文件下载。</p>
<p>访问<a href="https://iojs.org/dist/latest/" target="_blank" rel="external">io.js官网</a>，选择相应的系统平台安装包，然后输入以下命令（这个方法卸载的时候比较麻烦）：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">cd</span> ~</div><div class="line">$ wget https://iojs.org/dist/latest/iojs-v3.3.0-linux-armv7l.tar.gz</div><div class="line">$ tar -xvzf iojs-v3.3.0-linux-armv7l.tar.gz</div><div class="line">$ <span class="built_in">cd</span> iojs-v3.3.0-linux-armv7l/</div><div class="line">$ rm <span class="_">-f</span> ./*.md</div><div class="line">$ rm <span class="_">-f</span> ./LICENSE</div><div class="line">$ sudo cp -rf --remove-destination ./* /usr/<span class="built_in">local</span>/</div><div class="line">$ <span class="built_in">cd</span> ..</div><div class="line">$ rm -rf iojs-v3.3.0-linux-armv7l/</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一键安装&quot;&gt;&lt;a href=&quot;#一键安装&quot; class=&quot;headerlink&quot; title=&quot;一键安装&quot;&gt;&lt;/a&gt;一键安装&lt;/h2&gt;&lt;p&gt;优点：简单、快捷、方便、省事。&lt;/p&gt;
&lt;p&gt;缺点：以这个方法安装的Node.js版本比较低。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ sudo aptitude install nodejs&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="技术研究" scheme="https://blog.xlsdg.org/categories/%E6%8A%80%E6%9C%AF%E7%A0%94%E7%A9%B6/"/>
    
    
      <category term="Raspberry-Pi" scheme="https://blog.xlsdg.org/tags/Raspberry-Pi/"/>
    
      <category term="Node-js" scheme="https://blog.xlsdg.org/tags/Node-js/"/>
    
      <category term="Shell" scheme="https://blog.xlsdg.org/tags/Shell/"/>
    
  </entry>
  
  <entry>
    <title>《SQL必知必会》学习笔记</title>
    <link href="https://blog.xlsdg.org/2015/06/01/sams-teach-yourself-sql-in-10-minutes-study-notes/"/>
    <id>https://blog.xlsdg.org/2015/06/01/sams-teach-yourself-sql-in-10-minutes-study-notes/</id>
    <published>2015-06-01T12:30:00.000Z</published>
    <updated>2016-12-09T15:58:06.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><ol>
<li><p>到官网下载实验数据脚本：<a href="http://forta.com/books/0672336073/" title="Sample Table Scripts" target="_blank" rel="external">Sams Teach Yourself SQL in 10 Minutes</a>。本文以 MySQL 为例，对应的脚本文件下载地址：<a href="http://forta.com/books/0672336073/TeachYourselfSQL_MySQL.zip" title="SQL scripts" target="_blank" rel="external">MySQL</a>。</p>
 <a id="more"></a>
</li>
<li><p>终端中运行 <code>mysql -uroot -p</code> 登录 MySQL，执行以下命令创建数据库：</p>
 <figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> sql_test;</div></pre></td></tr></table></figure>
</li>
<li><p>运行 <code>create.txt</code> SQL 脚本文件创建表：</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ mysql -uroot -p sql_test &lt; create.txt</div></pre></td></tr></table></figure>
</li>
<li><p>运行 <code>populate.txt</code> SQL 脚本文件插入数据：</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ mysql -uroot -p sql_test &lt; populate.txt</div></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="了解-SQL"><a href="#了解-SQL" class="headerlink" title="了解 SQL"></a>了解 SQL</h2><ol>
<li>数据库：保存有组织的数据容器（通常是一个文件或一组文件）。</li>
<li>表：某种特定类型数据的结构化清单。</li>
<li>列：表中的一个字段，所有表都是由一个或多个列组成的。</li>
<li>行：表中的一个记录。</li>
<li>主键：一列（或一组列），其值能够唯一标识表中每一行。</li>
</ol>
<h2 id="检索数据"><a href="#检索数据" class="headerlink" title="检索数据"></a>检索数据</h2><ol>
<li><p>检索单个列</p>
 <figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span> prod_name</div><div class="line"><span class="keyword">FROM</span> Products;</div></pre></td></tr></table></figure>
</li>
<li><p>检索多个列</p>
 <figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span> prod_id, prod_name, prod_price</div><div class="line"><span class="keyword">FROM</span> Products;</div></pre></td></tr></table></figure>
</li>
<li><p>检索所有列</p>
 <figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span> *</div><div class="line"><span class="keyword">FROM</span> Products;</div></pre></td></tr></table></figure>
</li>
<li><p>检索不同的值</p>
 <figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> vend_id</div><div class="line"><span class="keyword">FROM</span> Products;</div></pre></td></tr></table></figure>
</li>
<li><p>限制结果</p>
 <figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span> prod_name</div><div class="line"><span class="keyword">FROM</span> Products</div><div class="line"><span class="keyword">LIMIT</span> <span class="number">2</span> <span class="keyword">OFFSET</span> <span class="number">3</span>;</div><div class="line"><span class="comment">/* OR */</span></div><div class="line"><span class="keyword">SELECT</span> prod_name</div><div class="line"><span class="keyword">FROM</span> Products</div><div class="line"><span class="keyword">LIMIT</span> <span class="number">3</span>, <span class="number">2</span>;</div></pre></td></tr></table></figure>
</li>
<li><p>使用注释</p>
 <figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">SELECT prod_name    -- 行内注释</div><div class="line">FROM Products;</div><div class="line"></div><div class="line"># 单行注释</div><div class="line">SELECT prod_name</div><div class="line">FROM Products;</div><div class="line"></div><div class="line">/* 多行注释</div><div class="line">SELECT prod_name, vend_id</div><div class="line">FROM Products; */</div><div class="line">SELECT prod_name</div><div class="line">FROM Produncts;</div></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="排序检索数据"><a href="#排序检索数据" class="headerlink" title="排序检索数据"></a>排序检索数据</h2><ol>
<li><p>排序数据</p>
 <figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span> prod_name</div><div class="line"><span class="keyword">FROM</span> Products</div><div class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> prod_name;</div></pre></td></tr></table></figure>
</li>
<li><p>按多个列排序</p>
 <figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span> prod_id, prod_price, prod_name</div><div class="line"><span class="keyword">FROM</span> Products</div><div class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> prod_price, prod_name;</div></pre></td></tr></table></figure>
</li>
<li><p>按列位置排序</p>
 <figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span> prod_id, prod_price, prod_name</div><div class="line"><span class="keyword">FROM</span> Products</div><div class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="number">2</span>, <span class="number">3</span>;</div></pre></td></tr></table></figure>
</li>
<li><p>指定排序方向</p>
 <figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span> prod_id, prod_price, prod_name</div><div class="line"><span class="keyword">FROM</span> Products</div><div class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> prod_price <span class="keyword">DESC</span>, prod_name <span class="keyword">DESC</span>;</div></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="过滤数据"><a href="#过滤数据" class="headerlink" title="过滤数据"></a>过滤数据</h2><ol>
<li><p>检查单个值</p>
 <figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span> prod_name, prod_price</div><div class="line"><span class="keyword">FROM</span> Products</div><div class="line"><span class="keyword">WHERE</span> prod_price &lt; <span class="number">10</span>;</div></pre></td></tr></table></figure>
</li>
<li><p>不匹配检查</p>
 <figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span> vend_id, prod_name</div><div class="line"><span class="keyword">FROM</span> Products</div><div class="line"><span class="keyword">WHERE</span> vend_id &lt;&gt; <span class="string">'DLL01'</span>;</div></pre></td></tr></table></figure>
</li>
<li><p>范围值检查</p>
 <figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span> prod_name, prod_price</div><div class="line"><span class="keyword">FROM</span> Products</div><div class="line"><span class="keyword">WHERE</span> prod_price <span class="keyword">BETWEEN</span> <span class="number">5</span> <span class="keyword">AND</span> <span class="number">10</span>;</div></pre></td></tr></table></figure>
</li>
<li><p>空值检查</p>
 <figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span> cust_name</div><div class="line"><span class="keyword">FROM</span> Customers</div><div class="line"><span class="keyword">WHERE</span> cust_email <span class="keyword">IS</span> <span class="literal">NULL</span>;</div></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="高级数据过滤"><a href="#高级数据过滤" class="headerlink" title="高级数据过滤"></a>高级数据过滤</h2><ol>
<li><p>AND 操作符</p>
 <figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span> prod_id, prod_price, prod_name</div><div class="line"><span class="keyword">FROM</span> Products</div><div class="line"><span class="keyword">WHERE</span> vend_id = <span class="string">'DLL01'</span> <span class="keyword">AND</span> prod_price &lt;= <span class="number">4</span>;</div></pre></td></tr></table></figure>
</li>
<li><p>OR 操作符</p>
 <figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span> prod_name, prod_price</div><div class="line"><span class="keyword">FROM</span> Products</div><div class="line"><span class="keyword">WHERE</span> vend_id = <span class="string">'DLL01'</span> <span class="keyword">OR</span> vend_id = <span class="string">'BRS01'</span>;</div></pre></td></tr></table></figure>
</li>
<li><p>求值顺序</p>
 <figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span> prod_name, prod_price</div><div class="line"><span class="keyword">FROM</span> Products</div><div class="line"><span class="keyword">WHERE</span> (vend_id = <span class="string">'DLL01'</span> <span class="keyword">OR</span> vend_id = <span class="string">'BRS01'</span>) <span class="keyword">AND</span> prod_price &gt;= <span class="number">10</span>;</div></pre></td></tr></table></figure>
</li>
<li><p>IN 操作符</p>
 <figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span> prod_name, prod_price</div><div class="line"><span class="keyword">FROM</span> Products</div><div class="line"><span class="keyword">WHERE</span> vend_id <span class="keyword">IN</span> ( <span class="string">'DLL01'</span>, <span class="string">'BRS01'</span> )</div><div class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> prod_name;</div></pre></td></tr></table></figure>
</li>
<li><p>NOT 操作符</p>
 <figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span> prod_name</div><div class="line"><span class="keyword">FROM</span> Products</div><div class="line"><span class="keyword">WHERE</span> <span class="keyword">NOT</span> vend_id = <span class="string">'DLL01'</span></div><div class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> prod_name;</div></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="用通配符进行过滤"><a href="#用通配符进行过滤" class="headerlink" title="用通配符进行过滤"></a>用通配符进行过滤</h2><ol>
<li><p>百分号（%）通配符</p>
 <figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span> prod_id, prod_name</div><div class="line"><span class="keyword">FROM</span> Products</div><div class="line"><span class="keyword">WHERE</span> prod_name <span class="keyword">LIKE</span> <span class="string">'%bean bag%'</span>;</div></pre></td></tr></table></figure>
</li>
<li><p>下划线（_）通配符</p>
<p> 只匹配单个字符：</p>
 <figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span> prod_id, prod_name</div><div class="line"><span class="keyword">FROM</span> Products</div><div class="line"><span class="keyword">WHERE</span> prod_name <span class="keyword">LIKE</span> <span class="string">'__ inch teddy bear'</span>;</div></pre></td></tr></table></figure>
</li>
<li><p>方括号（[]）通配符</p>
<p> 匹配方括号中的每个字符：</p>
 <figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">SELCET cust_contact</div><div class="line">FROM Customers</div><div class="line">WHERE cust_contact LIKE '[JM]%'</div><div class="line">ORDER BY cust_contact;</div></pre></td></tr></table></figure>
<p> 否定方括号中的每个字符：</p>
 <figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">SELCET cust_contact</div><div class="line">FROM Customers</div><div class="line">WHERE cust_contact LIKE '[^JM]%'</div><div class="line">ORDER BY cust_contact;</div></pre></td></tr></table></figure>
</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;到官网下载实验数据脚本：&lt;a href=&quot;http://forta.com/books/0672336073/&quot; title=&quot;Sample Table Scripts&quot;&gt;Sams Teach Yourself SQL in 10 Minutes&lt;/a&gt;。本文以 MySQL 为例，对应的脚本文件下载地址：&lt;a href=&quot;http://forta.com/books/0672336073/TeachYourselfSQL_MySQL.zip&quot; title=&quot;SQL scripts&quot;&gt;MySQL&lt;/a&gt;。&lt;/p&gt;
    
    </summary>
    
      <category term="编程笔记" scheme="https://blog.xlsdg.org/categories/%E7%BC%96%E7%A8%8B%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="MySQL" scheme="https://blog.xlsdg.org/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>树莓派之SD卡备份与还原</title>
    <link href="https://blog.xlsdg.org/2015/05/31/raspberry-pi-sd-card-backup-and-recovery/"/>
    <id>https://blog.xlsdg.org/2015/05/31/raspberry-pi-sd-card-backup-and-recovery/</id>
    <published>2015-05-31T04:30:00.000Z</published>
    <updated>2016-12-09T15:58:12.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>本文主要介绍以最小的方式完整备份树莓派SD卡镜像的方法。</p>
<h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>在树莓派的终端里运行下面这条命令，安装必备工具：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo aptitude install dosfstools dump parted kpartx screen exfat-fuse fuse-utils ntfs-3g</div></pre></td></tr></table></figure>
<a id="more"></a>
<p>说明：</p>
<p><code>dosfstools</code>：FAT32分区格式化工具。</p>
<p><code>dump</code>：dump 和 restore 备份工具。</p>
<p><code>screen</code>：ssh远程会话管理工具。</p>
<p><code>parted</code>，<code>kpartx</code>：虚拟磁盘工具。</p>
<p><code>exfat-fuse</code>：挂载exFAT格式优盘工具。</p>
<p><code>fuse-utils</code>，<code>ntfs-3g</code>：挂载NTFS格式优盘工具。</p>
<h2 id="优盘编号"><a href="#优盘编号" class="headerlink" title="优盘编号"></a>优盘编号</h2><p>备份需要一个能够装下整个树莓派镜像的优盘或移动硬盘，在终端中运行 <code>sudo fdisk -l</code>，确认已经插上的优盘或移动硬盘编号为 <code>/dev/sda1</code>。若不是则记下具体编号，待会修改脚本中内容。</p>
<h2 id="脚本配置"><a href="#脚本配置" class="headerlink" title="脚本配置"></a>脚本配置</h2><p>备份镜像文件名，修改 <code>raspberrypi.img</code> 即可：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">IMG_PATH=<span class="string">"<span class="variable">$&#123;USB_PATH&#125;</span>/raspberrypi.img"</span></div></pre></td></tr></table></figure>
<p>挂载优盘，修改 <code>/dev/sda1</code> 为具体的编号：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo mount -o uid=pi,gid=pi /dev/sda1 <span class="variable">$&#123;USB_PATH&#125;</span></div></pre></td></tr></table></figure>
<p>生成镜像文件大小，默认4G=4096×1048576字节(b)。想要生成?G，只需要修改count的值即可，count=?×1024×1024×1024÷4096：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo dd <span class="keyword">if</span>=/dev/zero of=<span class="variable">$&#123;IMG_PATH&#125;</span> bs=4096 count=1048576</div></pre></td></tr></table></figure>
<p>boot分区卷标：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo dosfslabel <span class="variable">$&#123;bootPath&#125;</span> <span class="string">"rpi-boot"</span></div></pre></td></tr></table></figure>
<p>系统分区卷标：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo e2label <span class="variable">$&#123;rootPath&#125;</span> <span class="string">"rpi-sys"</span></div></pre></td></tr></table></figure>
<h2 id="备份脚本"><a href="#备份脚本" class="headerlink" title="备份脚本"></a>备份脚本</h2><p>将以下内容保存为 <code>backup.sh</code> 文件，并赋予执行权限 <code>sudo chmod +x backup.sh</code>。在终端中输入 <code>screen -S backup</code> 创建backup会话，找到 <code>backup.sh</code> 文件所在位置执行 <code>./backup.sh</code> 开始备份树莓派的SD卡全部内容，备份后的镜像文件 <code>raspberrypi.img</code> 保存在优盘或移动硬盘的根目录下。最后使用快捷键Ctrl+a+d(即按住Ctrl，依次再按a,d)离开backup会话。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/sh</span></div><div class="line"></div><div class="line"></div><div class="line">USB_PATH=<span class="string">"/mnt/usb"</span></div><div class="line">IMG_PATH=<span class="string">"<span class="variable">$&#123;USB_PATH&#125;</span>/raspberrypi.img"</span></div><div class="line">TMP_BOOT=<span class="string">"/mnt/tmp_boot"</span></div><div class="line">TMP_ROOT=<span class="string">"/mnt/tmp_root"</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> [ ! <span class="_">-d</span> <span class="variable">$&#123;USB_PATH&#125;</span> ]; <span class="keyword">then</span></div><div class="line">  sudo mkdir <span class="variable">$&#123;USB_PATH&#125;</span></div><div class="line"><span class="keyword">fi</span></div><div class="line"></div><div class="line">sudo mount -o uid=pi,gid=pi /dev/sda1 <span class="variable">$&#123;USB_PATH&#125;</span></div><div class="line"></div><div class="line"><span class="keyword">if</span> [ <span class="_">-f</span> <span class="variable">$&#123;IMG_PATH&#125;</span> ]; <span class="keyword">then</span></div><div class="line">  sudo rm <span class="_">-f</span> <span class="variable">$&#123;IMG_PATH&#125;</span></div><div class="line"><span class="keyword">fi</span></div><div class="line"></div><div class="line">sudo dd <span class="keyword">if</span>=/dev/zero of=<span class="variable">$&#123;IMG_PATH&#125;</span> bs=4096 count=1048576</div><div class="line"></div><div class="line">sudo parted <span class="_">-s</span> <span class="variable">$&#123;IMG_PATH&#125;</span> -- mklabel msdos</div><div class="line">sudo parted <span class="_">-s</span> <span class="variable">$&#123;IMG_PATH&#125;</span> -- mkpart primary fat32 8192s 122879s</div><div class="line">sudo parted <span class="_">-s</span> <span class="variable">$&#123;IMG_PATH&#125;</span> -- mkpart primary ext4 122880s -1</div><div class="line">sudo parted <span class="_">-s</span> <span class="variable">$&#123;IMG_PATH&#125;</span> <span class="built_in">print</span></div><div class="line"></div><div class="line">loopDev=`sudo losetup <span class="_">-f</span> --show <span class="variable">$&#123;IMG_PATH&#125;</span>`</div><div class="line">devPath=`sudo kpartx -va <span class="variable">$&#123;loopDev&#125;</span> | sed -E <span class="string">'s/.*(loop[0-9])p.*/\1/g'</span> | head -1`</div><div class="line">devPath=<span class="string">"/dev/mapper/<span class="variable">$&#123;devPath&#125;</span>"</span></div><div class="line"></div><div class="line">bootPath=<span class="string">"<span class="variable">$&#123;devPath&#125;</span>p1"</span></div><div class="line">sudo mkfs.vfat <span class="variable">$&#123;bootPath&#125;</span></div><div class="line">sudo dosfslabel <span class="variable">$&#123;bootPath&#125;</span> <span class="string">"rpi-boot"</span></div><div class="line"></div><div class="line">rootPath=<span class="string">"<span class="variable">$&#123;devPath&#125;</span>p2"</span></div><div class="line">sudo mkfs.ext4 <span class="variable">$&#123;rootPath&#125;</span></div><div class="line">sudo e2label <span class="variable">$&#123;rootPath&#125;</span> <span class="string">"rpi-sys"</span></div><div class="line"></div><div class="line"><span class="keyword">if</span> [ ! <span class="_">-d</span> <span class="variable">$&#123;TMP_BOOT&#125;</span> ]; <span class="keyword">then</span></div><div class="line">  sudo mkdir <span class="variable">$&#123;TMP_BOOT&#125;</span></div><div class="line"><span class="keyword">fi</span></div><div class="line"></div><div class="line">sudo umount <span class="variable">$&#123;TMP_BOOT&#125;</span></div><div class="line">sudo mount -t vfat <span class="variable">$&#123;bootPath&#125;</span> <span class="variable">$&#123;TMP_BOOT&#125;</span></div><div class="line">sudo cp -rfp /boot/* <span class="variable">$&#123;TMP_BOOT&#125;</span>/</div><div class="line">sudo umount <span class="variable">$&#123;TMP_BOOT&#125;</span></div><div class="line"></div><div class="line"><span class="keyword">if</span> [ ! <span class="_">-d</span> <span class="variable">$&#123;TMP_ROOT&#125;</span> ]; <span class="keyword">then</span></div><div class="line">  sudo mkdir <span class="variable">$&#123;TMP_ROOT&#125;</span></div><div class="line"><span class="keyword">fi</span></div><div class="line"></div><div class="line">sudo umount <span class="variable">$&#123;TMP_ROOT&#125;</span></div><div class="line">sudo mount -t ext4 <span class="variable">$&#123;rootPath&#125;</span> <span class="variable">$&#123;TMP_ROOT&#125;</span></div><div class="line"><span class="built_in">cd</span> <span class="variable">$&#123;TMP_ROOT&#125;</span></div><div class="line">sudo dump -0uaf - / | sudo restore -rf -</div><div class="line"><span class="built_in">cd</span> ~</div><div class="line">sudo umount <span class="variable">$&#123;TMP_ROOT&#125;</span></div><div class="line"></div><div class="line">sudo kpartx <span class="_">-d</span> <span class="variable">$&#123;loopDev&#125;</span></div><div class="line">sudo losetup <span class="_">-d</span> <span class="variable">$&#123;loopDev&#125;</span></div><div class="line"></div><div class="line">sudo umount <span class="variable">$&#123;USB_PATH&#125;</span></div><div class="line"><span class="comment">#sudo rm -rf $&#123;TMP_BOOT&#125;</span></div><div class="line"><span class="comment">#sudo rm -rf $&#123;TMP_ROOT&#125;</span></div></pre></td></tr></table></figure>
<h2 id="还原镜像"><a href="#还原镜像" class="headerlink" title="还原镜像"></a>还原镜像</h2><p>Windows下还原镜像可以使用以下工具： <a href="http://sourceforge.net/projects/win32diskimager/" title="Win32DiskImager" target="_blank" rel="external">Win32DiskImager</a>，<a href="http://www.alexpage.de/usb-image-tool/" title="USB Image Tool" target="_blank" rel="external">USB Image Tool</a>（推荐），<a href="http://hddguru.com/software/HDD-Raw-Copy-Tool/" title="HDDRawCopy" target="_blank" rel="external">HDDRawCopy</a>（可以进一步压缩img镜像文件）。</p>
<h2 id="新系统运行"><a href="#新系统运行" class="headerlink" title="新系统运行"></a>新系统运行</h2><p>还原后的新系统第一次运行记得执行以下命令，然后选择 <code>Expand Filesystem</code> 扩展新SD卡未使用的空间。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo raspi-config</div></pre></td></tr></table></figure>
<h2 id="脚本说明"><a href="#脚本说明" class="headerlink" title="脚本说明"></a>脚本说明</h2><h3 id="镜像文件分区"><a href="#镜像文件分区" class="headerlink" title="镜像文件分区"></a>镜像文件分区</h3><p><code>8192s</code> 和 <code>122879s</code> 是根据官方镜像文件分区得到的数据，也就是第一个boot分区大小。<code>-1</code> 代表直到镜像文件结尾。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">sudo parted <span class="_">-s</span> <span class="variable">$&#123;IMG_PATH&#125;</span> -- mklabel msdos</div><div class="line">sudo parted <span class="_">-s</span> <span class="variable">$&#123;IMG_PATH&#125;</span> -- mkpart primary fat32 8192s 122879s</div><div class="line">sudo parted <span class="_">-s</span> <span class="variable">$&#123;IMG_PATH&#125;</span> -- mkpart primary ext4 122880s -1</div><div class="line">sudo parted <span class="_">-s</span> <span class="variable">$&#123;IMG_PATH&#125;</span> <span class="built_in">print</span></div></pre></td></tr></table></figure>
<h3 id="挂载并格式化虚拟磁盘"><a href="#挂载并格式化虚拟磁盘" class="headerlink" title="挂载并格式化虚拟磁盘"></a>挂载并格式化虚拟磁盘</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">loopDev=`sudo losetup <span class="_">-f</span> --show <span class="variable">$&#123;IMG_PATH&#125;</span>`</div><div class="line">devPath=`sudo kpartx -va <span class="variable">$&#123;loopDev&#125;</span> | sed -E <span class="string">'s/.*(loop[0-9])p.*/\1/g'</span> | head -1`</div><div class="line">devPath=<span class="string">"/dev/mapper/<span class="variable">$&#123;devPath&#125;</span>"</span></div><div class="line"></div><div class="line">bootPath=<span class="string">"<span class="variable">$&#123;devPath&#125;</span>p1"</span></div><div class="line">sudo mkfs.vfat <span class="variable">$&#123;bootPath&#125;</span></div><div class="line">sudo dosfslabel <span class="variable">$&#123;bootPath&#125;</span> <span class="string">"rpi-boot"</span></div><div class="line"></div><div class="line">rootPath=<span class="string">"<span class="variable">$&#123;devPath&#125;</span>p2"</span></div><div class="line">sudo mkfs.ext4 <span class="variable">$&#123;rootPath&#125;</span></div><div class="line">sudo e2label <span class="variable">$&#123;rootPath&#125;</span> <span class="string">"rpi-sys"</span></div></pre></td></tr></table></figure>
<h3 id="备份boot分区"><a href="#备份boot分区" class="headerlink" title="备份boot分区"></a>备份boot分区</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> [ ! <span class="_">-d</span> <span class="variable">$&#123;TMP_BOOT&#125;</span> ]; <span class="keyword">then</span></div><div class="line">  sudo mkdir <span class="variable">$&#123;TMP_BOOT&#125;</span></div><div class="line"><span class="keyword">fi</span></div><div class="line"></div><div class="line">sudo umount <span class="variable">$&#123;TMP_BOOT&#125;</span></div><div class="line">sudo mount -t vfat <span class="variable">$&#123;bootPath&#125;</span> <span class="variable">$&#123;TMP_BOOT&#125;</span></div><div class="line">sudo cp -rfp /boot/* <span class="variable">$&#123;TMP_BOOT&#125;</span>/</div><div class="line">sudo umount <span class="variable">$&#123;TMP_BOOT&#125;</span></div></pre></td></tr></table></figure>
<h3 id="备份系统分区"><a href="#备份系统分区" class="headerlink" title="备份系统分区"></a>备份系统分区</h3><p>使用 <code>dump</code> 和 <code>restore</code> 工具配合备份系统：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> [ ! <span class="_">-d</span> <span class="variable">$&#123;TMP_ROOT&#125;</span> ]; <span class="keyword">then</span></div><div class="line">  sudo mkdir <span class="variable">$&#123;TMP_ROOT&#125;</span></div><div class="line"><span class="keyword">fi</span></div><div class="line"></div><div class="line">sudo umount <span class="variable">$&#123;TMP_ROOT&#125;</span></div><div class="line">sudo mount -t ext4 <span class="variable">$&#123;rootPath&#125;</span> <span class="variable">$&#123;TMP_ROOT&#125;</span></div><div class="line"><span class="built_in">cd</span> <span class="variable">$&#123;TMP_ROOT&#125;</span></div><div class="line">sudo dump -0uaf - / | sudo restore -rf -</div><div class="line"><span class="built_in">cd</span> ~</div><div class="line">sudo umount <span class="variable">$&#123;TMP_ROOT&#125;</span></div></pre></td></tr></table></figure>
<h3 id="卸载虚拟磁盘"><a href="#卸载虚拟磁盘" class="headerlink" title="卸载虚拟磁盘"></a>卸载虚拟磁盘</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo kpartx <span class="_">-d</span> <span class="variable">$&#123;loopDev&#125;</span></div><div class="line">sudo losetup <span class="_">-d</span> <span class="variable">$&#123;loopDev&#125;</span></div></pre></td></tr></table></figure>
<h2 id="修改镜像文件"><a href="#修改镜像文件" class="headerlink" title="修改镜像文件"></a>修改镜像文件</h2><p>明白了以上脚本内容，以后我们想要修改镜像文件里的内容可以使用以下的脚本：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/sh</span></div><div class="line"></div><div class="line">USB_PATH=<span class="string">"/mnt/usb"</span></div><div class="line">IMG_PATH=<span class="string">"<span class="variable">$&#123;USB_PATH&#125;</span>/raspberrypi.img"</span></div><div class="line">BOOT_PATH=<span class="string">"/mnt/tmp_boot"</span></div><div class="line">ROOT_PATH=<span class="string">"/mnt/tmp_root"</span></div><div class="line"></div><div class="line"><span class="keyword">if</span> [ ! <span class="_">-d</span> <span class="variable">$&#123;USB_PATH&#125;</span> ]; <span class="keyword">then</span></div><div class="line">  sudo mkdir <span class="variable">$&#123;USB_PATH&#125;</span></div><div class="line"><span class="keyword">fi</span></div><div class="line"></div><div class="line">sudo mount -o uid=pi,gid=pi /dev/sda1 <span class="variable">$&#123;USB_PATH&#125;</span></div><div class="line"></div><div class="line">loopDev=`sudo losetup <span class="_">-f</span> --show <span class="variable">$&#123;IMG_PATH&#125;</span>`</div><div class="line">devPath=`sudo kpartx -va <span class="variable">$&#123;loopDev&#125;</span> | sed -E <span class="string">'s/.*(loop[0-9])p.*/\1/g'</span> | head -1`</div><div class="line">devPath=<span class="string">"/dev/mapper/<span class="variable">$&#123;devPath&#125;</span>"</span></div><div class="line"></div><div class="line">bootPath=<span class="string">"<span class="variable">$&#123;devPath&#125;</span>p1"</span></div><div class="line"></div><div class="line"><span class="keyword">if</span> [ ! <span class="_">-d</span> <span class="variable">$&#123;BOOT_PATH&#125;</span> ]; <span class="keyword">then</span></div><div class="line">  sudo mkdir <span class="variable">$&#123;BOOT_PATH&#125;</span></div><div class="line"><span class="keyword">fi</span></div><div class="line"></div><div class="line">sudo umount <span class="variable">$&#123;BOOT_PATH&#125;</span></div><div class="line">sudo mount -t vfat <span class="variable">$&#123;bootPath&#125;</span> <span class="variable">$&#123;BOOT_PATH&#125;</span></div><div class="line"></div><div class="line">rootPath=<span class="string">"<span class="variable">$&#123;devPath&#125;</span>p2"</span></div><div class="line"></div><div class="line"><span class="keyword">if</span> [ ! <span class="_">-d</span> <span class="variable">$&#123;ROOT_PATH&#125;</span> ]; <span class="keyword">then</span></div><div class="line">  sudo mkdir <span class="variable">$&#123;ROOT_PATH&#125;</span></div><div class="line"><span class="keyword">fi</span></div><div class="line"></div><div class="line">sudo umount <span class="variable">$&#123;ROOT_PATH&#125;</span></div><div class="line">sudo mount -t ext4 <span class="variable">$&#123;rootPath&#125;</span> <span class="variable">$&#123;ROOT_PATH&#125;</span></div><div class="line"></div><div class="line"><span class="built_in">echo</span> <span class="string">"bootPath: <span class="variable">$&#123;BOOT_PATH&#125;</span>"</span></div><div class="line"><span class="built_in">echo</span> <span class="string">"rootPath: <span class="variable">$&#123;ROOT_PATH&#125;</span>"</span></div><div class="line"></div><div class="line"><span class="built_in">echo</span> <span class="string">"sudo umount <span class="variable">$&#123;BOOT_PATH&#125;</span>"</span></div><div class="line"><span class="built_in">echo</span> <span class="string">"sudo umount <span class="variable">$&#123;ROOT_PATH&#125;</span>"</span></div><div class="line"></div><div class="line"><span class="built_in">echo</span> <span class="string">"sudo kpartx -d <span class="variable">$&#123;loopDev&#125;</span>"</span></div><div class="line"><span class="built_in">echo</span> <span class="string">"sudo losetup -d <span class="variable">$&#123;loopDev&#125;</span>"</span></div><div class="line"></div><div class="line"><span class="built_in">echo</span> <span class="string">"sudo umount <span class="variable">$&#123;USB_PATH&#125;</span>"</span></div></pre></td></tr></table></figure>
<p>修改完成之后记得执行最后那几行打印的命令，卸载虚拟磁盘，保存结果。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;本文主要介绍以最小的方式完整备份树莓派SD卡镜像的方法。&lt;/p&gt;
&lt;h2 id=&quot;准备工作&quot;&gt;&lt;a href=&quot;#准备工作&quot; class=&quot;headerlink&quot; title=&quot;准备工作&quot;&gt;&lt;/a&gt;准备工作&lt;/h2&gt;&lt;p&gt;在树莓派的终端里运行下面这条命令，安装必备工具：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ sudo aptitude install dosfstools dump parted kpartx screen exfat-fuse fuse-utils ntfs-3g&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="技术研究" scheme="https://blog.xlsdg.org/categories/%E6%8A%80%E6%9C%AF%E7%A0%94%E7%A9%B6/"/>
    
    
      <category term="Raspberry-Pi" scheme="https://blog.xlsdg.org/tags/Raspberry-Pi/"/>
    
      <category term="Shell" scheme="https://blog.xlsdg.org/tags/Shell/"/>
    
  </entry>
  
  <entry>
    <title>HTML学习笔记</title>
    <link href="https://blog.xlsdg.org/2015/05/28/html-study-notes/"/>
    <id>https://blog.xlsdg.org/2015/05/28/html-study-notes/</id>
    <published>2015-05-28T07:00:00.000Z</published>
    <updated>2016-12-09T10:55:22.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="HTML-简单模板"><a href="#HTML-简单模板" class="headerlink" title="HTML 简单模板"></a>HTML 简单模板</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"> <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<a id="more"></a>
<h2 id="HTML-lt-DOCTYPE-gt-声明"><a href="#HTML-lt-DOCTYPE-gt-声明" class="headerlink" title="HTML &lt;!DOCTYPE&gt; 声明"></a>HTML <code>&lt;!DOCTYPE&gt;</code> 声明</h2><h3 id="HTML-5"><a href="#HTML-5" class="headerlink" title="HTML 5"></a>HTML 5</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div></pre></td></tr></table></figure>
<h3 id="HTML-4-01-Strict"><a href="#HTML-4-01-Strict" class="headerlink" title="HTML 4.01 Strict"></a>HTML 4.01 Strict</h3><p>这个 DTD 包含所有 HTML 元素和属性，但不包括表象或过时的元素（如 font ）。框架集是不允许的。</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd"&gt;</span></div></pre></td></tr></table></figure>
<h3 id="HTML-4-01-Transitional"><a href="#HTML-4-01-Transitional" class="headerlink" title="HTML 4.01 Transitional"></a>HTML 4.01 Transitional</h3><p>这个 DTD 包含所有 HTML 元素和属性，包括表象或过时的元素（如 font ）。框架集是不允许的。</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd"&gt;</span></div></pre></td></tr></table></figure>
<h3 id="HTML-4-01-Frameset"><a href="#HTML-4-01-Frameset" class="headerlink" title="HTML 4.01 Frameset"></a>HTML 4.01 Frameset</h3><p>这个 DTD 与 HTML 4.01 Transitional 相同，但是允许使用框架集内容。</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Frameset//EN" "http://www.w3.org/TR/html4/frameset.dtd"&gt;</span></div></pre></td></tr></table></figure>
<h3 id="XHTML-1-0-Strict"><a href="#XHTML-1-0-Strict" class="headerlink" title="XHTML 1.0 Strict"></a>XHTML 1.0 Strict</h3><p>这个 DTD 包含所有 HTML 元素和属性，但不包括表象或过时的元素（如 font ）。框架集是不允许的。结构必须按标准格式的 XML 进行书写。</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"&gt;</span></div></pre></td></tr></table></figure>
<h3 id="XHTML-1-0-Transitional"><a href="#XHTML-1-0-Transitional" class="headerlink" title="XHTML 1.0 Transitional"></a>XHTML 1.0 Transitional</h3><p>这个 DTD 包含所有 HTML 元素和属性，包括表象或过时的元素（如 font ）。框架集是不允许的。结构必须按标准格式的 XML 进行书写。</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;</span></div></pre></td></tr></table></figure>
<h3 id="XHTML-1-0-Frameset"><a href="#XHTML-1-0-Frameset" class="headerlink" title="XHTML 1.0 Frameset"></a>XHTML 1.0 Frameset</h3><p>这个 DTD 与 XHTML 1.0 Transitional 相同，但是允许使用框架集内容。</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Frameset//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd"&gt;</span></div></pre></td></tr></table></figure>
<h3 id="XHTML-1-1"><a href="#XHTML-1-1" class="headerlink" title="XHTML 1.1"></a>XHTML 1.1</h3><p>这个 DTD 与 XHTML 1.0 Strict 相同，但是允许您添加模块（例如为东亚语言提供 ruby 支持）。</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd"&gt;</span></div></pre></td></tr></table></figure>
<h2 id="HTML-标题"><a href="#HTML-标题" class="headerlink" title="HTML 标题"></a>HTML 标题</h2><p>HTML 标题（Heading）是通过<code>&lt;h1&gt; - &lt;h6&gt;</code>标签来定义的.</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>这是一个标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>这是一个标题<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>这是一个标题<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></div></pre></td></tr></table></figure>
<h2 id="HTML-段落"><a href="#HTML-段落" class="headerlink" title="HTML 段落"></a>HTML 段落</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>这是一个段落。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>这是另外一个段落。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div></pre></td></tr></table></figure>
<h2 id="HTML-链接"><a href="#HTML-链接" class="headerlink" title="HTML 链接"></a>HTML 链接</h2><p>使用 Target 属性，你可以定义被链接的文档在何处显示。</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.xxx.com/"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>Welcome<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div></pre></td></tr></table></figure>
<p>在HTML文档中创建一个链接到’有用的提示部分(id=”tips”)’：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#tips"</span>&gt;</span>Visit the Useful Tips Section<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div></pre></td></tr></table></figure>
<p>从另一个页面创建一个链接到’有用的提示(id=”tips”)部分’：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.xxx.com/html_links.htm#tips"</span>&gt;</span></div><div class="line">Visit the Useful Tips Section<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div></pre></td></tr></table></figure>
<h2 id="HTML-图像"><a href="#HTML-图像" class="headerlink" title="HTML 图像"></a>HTML 图像</h2><p><code>&lt;img&gt;</code> 是空标签，意思是说，它只包含属性，并且没有闭合标签。 <code>alt</code> 属性在浏览器无法载入图像时，替换文本属性告诉读者她们失去的信息。</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"pulpit.jpg"</span> <span class="attr">alt</span>=<span class="string">"Pulpit rock"</span> <span class="attr">width</span>=<span class="string">"304"</span> <span class="attr">height</span>=<span class="string">"228"</span>&gt;</span></div></pre></td></tr></table></figure>
<p>HTML 图像标签</p>
<table>
<thead>
<tr>
<th>标签</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>&lt;img&gt;</code></td>
<td>定义图像</td>
</tr>
<tr>
<td><code>&lt;map&gt;</code></td>
<td>定义图像地图</td>
</tr>
<tr>
<td><code>&lt;area&gt;</code></td>
<td>定义图像地图中的可点击区域</td>
</tr>
</tbody>
</table>
<h2 id="HTML-空元素"><a href="#HTML-空元素" class="headerlink" title="HTML 空元素"></a>HTML 空元素</h2><p>在开始标签中添加斜杠，比如 <code>&lt;br /&gt;</code>，是关闭空元素的正确方法，HTML、XHTML 和 XML 都接受这种方式。</p>
<h2 id="HTML-属性"><a href="#HTML-属性" class="headerlink" title="HTML 属性"></a>HTML 属性</h2><table>
<thead>
<tr>
<th>属性</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>class</code></td>
<td>为html元素定义一个或多个类名（classname）(类名从样式文件引入)</td>
</tr>
<tr>
<td><code>id</code></td>
<td>定义元素的唯一id</td>
</tr>
<tr>
<td><code>style</code></td>
<td>规定元素的行内样式（inline style）</td>
</tr>
<tr>
<td><code>title</code></td>
<td>描述了元素的额外信息 (作为工具条使用)</td>
</tr>
</tbody>
</table>
<h2 id="HTML-水平线"><a href="#HTML-水平线" class="headerlink" title="HTML 水平线"></a>HTML 水平线</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>这是一个段落。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">hr</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>这是一个段落。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">hr</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>这是一个段落。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div></pre></td></tr></table></figure>
<h2 id="HTML-注释"><a href="#HTML-注释" class="headerlink" title="HTML 注释"></a>HTML 注释</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!-- 这是一个注释 --&gt;</span></div></pre></td></tr></table></figure>
<h2 id="HTML-文本格式化标签"><a href="#HTML-文本格式化标签" class="headerlink" title="HTML 文本格式化标签"></a>HTML 文本格式化标签</h2><table>
<thead>
<tr>
<th>标签</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>&lt;b&gt;</code></td>
<td>定义粗体文本</td>
</tr>
<tr>
<td><code>&lt;em&gt;</code></td>
<td>定义着重文字</td>
</tr>
<tr>
<td><code>&lt;i&gt;</code></td>
<td>定义斜体字</td>
</tr>
<tr>
<td><code>&lt;small&gt;</code></td>
<td>定义小号字</td>
</tr>
<tr>
<td><code>&lt;strong&gt;</code></td>
<td>定义加重语气</td>
</tr>
<tr>
<td><code>&lt;sub&gt;</code></td>
<td>定义下标字</td>
</tr>
<tr>
<td><code>&lt;sup&gt;</code></td>
<td>定义上标字</td>
</tr>
<tr>
<td><code>&lt;ins&gt;</code></td>
<td>定义插入字</td>
</tr>
<tr>
<td><code>&lt;del&gt;</code></td>
<td>定义删除字</td>
</tr>
</tbody>
</table>
<h2 id="HTML-“计算机输出”-标签"><a href="#HTML-“计算机输出”-标签" class="headerlink" title="HTML “计算机输出” 标签"></a>HTML “计算机输出” 标签</h2><table>
<thead>
<tr>
<th>标签</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>&lt;code&gt;</code></td>
<td>定义计算机代码</td>
</tr>
<tr>
<td><code>&lt;kbd&gt;</code></td>
<td>定义键盘码</td>
</tr>
<tr>
<td><code>&lt;samp&gt;</code></td>
<td>定义计算机代码样本</td>
</tr>
<tr>
<td><code>&lt;var&gt;</code></td>
<td>定义变量</td>
</tr>
<tr>
<td><code>&lt;pre&gt;</code></td>
<td>定义预格式文本</td>
</tr>
</tbody>
</table>
<h2 id="HTML-引文-引用-及标签定义"><a href="#HTML-引文-引用-及标签定义" class="headerlink" title="HTML 引文, 引用, 及标签定义"></a>HTML 引文, 引用, 及标签定义</h2><table>
<thead>
<tr>
<th>标签</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>&lt;abbr&gt;</code></td>
<td>定义缩写</td>
</tr>
<tr>
<td><code>&lt;address&gt;</code></td>
<td>定义地址</td>
</tr>
<tr>
<td><code>&lt;bdo&gt;</code></td>
<td>定义文字方向</td>
</tr>
<tr>
<td><code>&lt;blockquote&gt;</code></td>
<td>定义长的引用</td>
</tr>
<tr>
<td><code>&lt;q&gt;</code></td>
<td>定义短的引用语</td>
</tr>
<tr>
<td><code>&lt;cite&gt;</code></td>
<td>定义引用、引证</td>
</tr>
<tr>
<td><code>&lt;dfn&gt;</code></td>
<td>定义一个定义项目</td>
</tr>
</tbody>
</table>
<h2 id="HTML-lt-head-gt-元素"><a href="#HTML-lt-head-gt-元素" class="headerlink" title="HTML &lt;head&gt; 元素"></a>HTML <code>&lt;head&gt;</code> 元素</h2><p>可以添加在头部区域的元素标签为: <code>&lt;title&gt;</code>, <code>&lt;style&gt;</code>, <code>&lt;meta&gt;</code>, <code>&lt;link&gt;</code>, <code>&lt;script&gt;</code>, <code>&lt;noscript&gt;</code>, <code>&lt;base&gt;</code>。</p>
<h2 id="HTML-lt-title-gt-元素"><a href="#HTML-lt-title-gt-元素" class="headerlink" title="HTML &lt;title&gt; 元素"></a>HTML <code>&lt;title&gt;</code> 元素</h2><p><code>&lt;title&gt;</code> 标签定义了浏览器工具栏的标题、当网页添加到收藏夹时，显示在收藏夹中的标题、显示在搜索引擎结果页面的标题。</p>
<h2 id="HTML-lt-base-gt-元素"><a href="#HTML-lt-base-gt-元素" class="headerlink" title="HTML &lt;base&gt; 元素"></a>HTML <code>&lt;base&gt;</code> 元素</h2><p><code>&lt;base&gt;</code> 标签描述了基本的链接地址/链接目标，该标签作为HTML文档中所有的链接标签的默认链接:</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">base</span> <span class="attr">href</span>=<span class="string">"http://www.xxx.com/images/"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div></pre></td></tr></table></figure>
<h2 id="HTML-lt-link-gt-元素"><a href="#HTML-lt-link-gt-元素" class="headerlink" title="HTML &lt;link&gt; 元素"></a>HTML <code>&lt;link&gt;</code> 元素</h2><p><code>&lt;link&gt;</code> 标签定义了文档与外部资源之间的关系，通常用于链接到样式表:</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">type</span>=<span class="string">"text/css"</span> <span class="attr">href</span>=<span class="string">"mystyle.css"</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div></pre></td></tr></table></figure>
<h2 id="HTML-lt-style-gt-元素"><a href="#HTML-lt-style-gt-元素" class="headerlink" title="HTML &lt;style&gt; 元素"></a>HTML <code>&lt;style&gt;</code> 元素</h2><p><code>&lt;style&gt;</code> 标签定义了HTML文档的样式文件引用地址.</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></div><div class="line">body &#123;background-color:yellow&#125;</div><div class="line">p &#123;color:blue&#125;</div><div class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div></pre></td></tr></table></figure>
<h2 id="HTML-lt-meta-gt-元素"><a href="#HTML-lt-meta-gt-元素" class="headerlink" title="HTML &lt;meta&gt; 元素"></a>HTML <code>&lt;meta&gt;</code> 元素</h2><p><code>&lt;meta&gt;</code> 标签提供了元数据.元数据也不显示在页面上，但会被浏览器解析。META元素通常用于指定网页的描述，关键词，文件的最后修改时间，作者，和其他元数据。元数据可以使用于浏览器（如何显示内容或重新加载页面），搜索引擎（关键词），或其他Web服务。<code>&lt;meta&gt;</code> 一般放置于 <code>&lt;head&gt;</code> 区域。</p>
<p>为搜索引擎定义关键词:</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"keywords"</span> <span class="attr">content</span>=<span class="string">"HTML, CSS, XML, XHTML, JavaScript"</span>&gt;</span></div></pre></td></tr></table></figure>
<p>为网页定义描述内容:</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"description"</span> <span class="attr">content</span>=<span class="string">"Free Web tutorials on HTML and CSS"</span>&gt;</span></div></pre></td></tr></table></figure>
<p>定义网页作者:</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"author"</span> <span class="attr">content</span>=<span class="string">"Hege Refsnes"</span>&gt;</span></div></pre></td></tr></table></figure>
<p>每30秒中刷新当前页面:</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"refresh"</span> <span class="attr">content</span>=<span class="string">"30"</span>&gt;</span></div></pre></td></tr></table></figure>
<h2 id="HTML-lt-script-gt-元素"><a href="#HTML-lt-script-gt-元素" class="headerlink" title="HTML &lt;script&gt; 元素"></a>HTML <code>&lt;script&gt;</code> 元素</h2><p><code>&lt;script&gt;</code> 标签可用于加载外部脚本文件，如：JavaScript。</p>
<h2 id="CSS-内联样式"><a href="#CSS-内联样式" class="headerlink" title="CSS 内联样式"></a>CSS 内联样式</h2><p>当特殊的样式需要应用到个别元素时，就可以使用内联样式。使用内联样式的方法是在相关的标签中使用样式属性。样式属性可以包含任何 CSS 属性。</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"color:blue;margin-left:20px;"</span>&gt;</span>This is a paragraph.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div></pre></td></tr></table></figure>
<h2 id="CSS-内部样式表"><a href="#CSS-内部样式表" class="headerlink" title="CSS 内部样式表"></a>CSS 内部样式表</h2><p>当单个文件需要特别样式时，就可以使用内部样式表。你可以在 <code>&lt;head&gt;</code> 部分通过 <code>&lt;style&gt;</code> 标签定义内部样式表。</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></div><div class="line">body &#123;background-color:yellow;&#125;</div><div class="line">p &#123;color:blue;&#125;</div><div class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div></pre></td></tr></table></figure>
<h2 id="CSS-外部样式表"><a href="#CSS-外部样式表" class="headerlink" title="CSS 外部样式表"></a>CSS 外部样式表</h2><p>当样式需要被应用到很多页面的时候，外部样式表将是理想的选择。使用外部样式表，你就可以通过更改一个文件来改变整个站点的外观。</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">type</span>=<span class="string">"text/css"</span> <span class="attr">href</span>=<span class="string">"mystyle.css"</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div></pre></td></tr></table></figure>
<h2 id="HTML-表格标签"><a href="#HTML-表格标签" class="headerlink" title="HTML 表格标签"></a>HTML 表格标签</h2><table>
<thead>
<tr>
<th>标签</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>&lt;table&gt;</code></td>
<td>定义表格</td>
</tr>
<tr>
<td><code>&lt;th&gt;</code></td>
<td>定义表格的表头</td>
</tr>
<tr>
<td><code>&lt;tr&gt;</code></td>
<td>定义表格的行</td>
</tr>
<tr>
<td><code>&lt;td&gt;</code></td>
<td>定义表格单元</td>
</tr>
<tr>
<td><code>&lt;caption&gt;</code></td>
<td>定义表格标题</td>
</tr>
<tr>
<td><code>&lt;colgroup&gt;</code></td>
<td>定义表格列的组</td>
</tr>
<tr>
<td><code>&lt;col&gt;</code></td>
<td>定义用于表格列的属性</td>
</tr>
<tr>
<td><code>&lt;thead&gt;</code></td>
<td>定义表格的页眉</td>
</tr>
<tr>
<td><code>&lt;tbody&gt;</code></td>
<td>定义表格的主体</td>
</tr>
<tr>
<td><code>&lt;tfoot&gt;</code></td>
<td>定义表格的页脚</td>
</tr>
</tbody>
</table>
<h2 id="HTML-列表标签"><a href="#HTML-列表标签" class="headerlink" title="HTML 列表标签"></a>HTML 列表标签</h2><p>有序列表 <code>start</code> 属性：a、A、i、I。</p>
<p>无序列表 <code>type</code> 属性：<code>disc</code> 实心圆、 <code>circle</code> 空心圆、 <code>square</code> 实心方块。</p>
<table>
<thead>
<tr>
<th>标签</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>&lt;ol&gt;</code></td>
<td>定义有序列表</td>
</tr>
<tr>
<td><code>&lt;ul&gt;</code></td>
<td>定义无序列表</td>
</tr>
<tr>
<td><code>&lt;li&gt;</code></td>
<td>定义列表项</td>
</tr>
<tr>
<td><code>&lt;dl&gt;</code></td>
<td>定义自定义列表</td>
</tr>
<tr>
<td><code>&lt;dt&gt;</code></td>
<td>定义自定义列表项目</td>
</tr>
<tr>
<td><code>&lt;dd&gt;</code></td>
<td>定义自定义列表的描述</td>
</tr>
</tbody>
</table>
<h2 id="HTML-区块元素"><a href="#HTML-区块元素" class="headerlink" title="HTML 区块元素"></a>HTML 区块元素</h2><p>块级元素在浏览器显示时，通常会以新行来开始（和结束）。</p>
<p>实例: <code>&lt;h1&gt;</code>, <code>&lt;p&gt;</code>, <code>&lt;ul&gt;</code>, <code>&lt;table&gt;</code>。</p>
<h2 id="HTML-内联元素"><a href="#HTML-内联元素" class="headerlink" title="HTML 内联元素"></a>HTML 内联元素</h2><p>内联元素在显示时通常不会以新行开始。</p>
<p>实例: <code>&lt;b&gt;</code>, <code>&lt;td&gt;</code>, <code>&lt;a&gt;</code>, <code>&lt;img&gt;</code>。</p>
<h2 id="HTML-lt-div-gt-元素"><a href="#HTML-lt-div-gt-元素" class="headerlink" title="HTML &lt;div&gt; 元素"></a>HTML <code>&lt;div&gt;</code> 元素</h2><p><code>&lt;div&gt;</code> 元素没有特定的含义。除此之外，由于它属于块级元素，浏览器会在其前后显示折行。</p>
<h2 id="HTML-lt-span-gt-与元素"><a href="#HTML-lt-span-gt-与元素" class="headerlink" title="HTML &lt;span&gt; 与元素"></a>HTML <code>&lt;span&gt;</code> 与元素</h2><p>HTML <code>&lt;span&gt;</code> 元素是内联元素，可用作文本的容器，也没有特定的含义。</p>
<h2 id="HTML-表单标签"><a href="#HTML-表单标签" class="headerlink" title="HTML 表单标签"></a>HTML 表单标签</h2><table>
<thead>
<tr>
<th>标签</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>&lt;form&gt;</code></td>
<td>定义供用户输入的表单</td>
</tr>
<tr>
<td><code>&lt;input&gt;</code></td>
<td>定义输入域</td>
</tr>
<tr>
<td><code>&lt;textarea&gt;</code></td>
<td>定义文本域 (一个多行的输入控件)</td>
</tr>
<tr>
<td><code>&lt;label&gt;</code></td>
<td>定义了 <code>&lt;input&gt;</code> 元素的标签，一般为输入标题</td>
</tr>
<tr>
<td><code>&lt;fieldset&gt;</code></td>
<td>定义了一组相关的表单元素，并使用外框包含起来</td>
</tr>
<tr>
<td><code>&lt;legend&gt;</code></td>
<td>定义了 <code>&lt;fieldset&gt;</code> 元素的标题</td>
</tr>
<tr>
<td><code>&lt;select&gt;</code></td>
<td>定义了下拉选项列表</td>
</tr>
<tr>
<td><code>&lt;optgroup&gt;</code></td>
<td>定义选项组</td>
</tr>
<tr>
<td><code>&lt;option&gt;</code></td>
<td>定义下拉列表中的选项</td>
</tr>
<tr>
<td><code>&lt;button&gt;</code></td>
<td>定义一个点击按钮</td>
</tr>
<tr>
<td><code>&lt;datalist&gt;</code></td>
<td>指定一个预先定义的输入控件选项列表</td>
</tr>
<tr>
<td><code>&lt;keygen&gt;</code></td>
<td>定义了表单的密钥对生成器字段</td>
</tr>
<tr>
<td><code>&lt;output&gt;</code></td>
<td>定义一个计算结果</td>
</tr>
</tbody>
</table>
<h3 id="文本域："><a href="#文本域：" class="headerlink" title="文本域："></a>文本域：</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span></div><div class="line">First name: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"firstname"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></div><div class="line">Last name: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"lastname"</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="密码字段："><a href="#密码字段：" class="headerlink" title="密码字段："></a>密码字段：</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span></div><div class="line">Password: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"pwd"</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="单选按钮："><a href="#单选按钮：" class="headerlink" title="单选按钮："></a>单选按钮：</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"sex"</span> <span class="attr">value</span>=<span class="string">"male"</span>&gt;</span>Male<span class="tag">&lt;<span class="name">br</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"sex"</span> <span class="attr">value</span>=<span class="string">"female"</span>&gt;</span>Female</div><div class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="复选框："><a href="#复选框：" class="headerlink" title="复选框："></a>复选框：</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"vehicle"</span> <span class="attr">value</span>=<span class="string">"Bike"</span>&gt;</span>I have a bike<span class="tag">&lt;<span class="name">br</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"vehicle"</span> <span class="attr">value</span>=<span class="string">"Car"</span>&gt;</span>I have a car</div><div class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="提交按钮："><a href="#提交按钮：" class="headerlink" title="提交按钮："></a>提交按钮：</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">name</span>=<span class="string">"input"</span> <span class="attr">action</span>=<span class="string">"html_form_action.php"</span> <span class="attr">method</span>=<span class="string">"get"</span>&gt;</span></div><div class="line">Username: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"user"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"Submit"</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></div></pre></td></tr></table></figure>
<h2 id="HTML-内联框架"><a href="#HTML-内联框架" class="headerlink" title="HTML 内联框架"></a>HTML 内联框架</h2><p><code>iframe</code> 移除边框：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">"demo_iframe.htm"</span> <span class="attr">frameborder</span>=<span class="string">"0"</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></div></pre></td></tr></table></figure>
<p>使用 <code>iframe</code> 来显示目录链接页面：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">"demo_iframe.htm"</span> <span class="attr">name</span>=<span class="string">"iframe_a"</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.xxx.com"</span> <span class="attr">target</span>=<span class="string">"iframe_a"</span>&gt;</span>xxx.com<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></div></pre></td></tr></table></figure>
<h2 id="HTML-颜色"><a href="#HTML-颜色" class="headerlink" title="HTML 颜色"></a>HTML 颜色</h2><p>颜色值：HTML 颜色由一个十六进制符号来定义，这个符号由红色、绿色和蓝色的值组成（RGB）。每种颜色的最小值是0（十六进制：#00），最大值是255（十六进制：#FF）。</p>
<p>颜色名：141个颜色名称是在HTML和CSS颜色规范定义的（17个标准颜色，再加另外124个）。17个标准颜色：黑色，蓝色，水，紫红色，灰色，绿色，石灰，栗色，海军，橄榄，橙，紫，红，白，银，蓝绿色，黄色。</p>
<h2 id="HTML-lt-noscript-gt-标签"><a href="#HTML-lt-noscript-gt-标签" class="headerlink" title="HTML &lt;noscript&gt; 标签"></a>HTML <code>&lt;noscript&gt;</code> 标签</h2><p><code>&lt;noscript&gt;</code> 标签提供无法使用脚本时的替代内容，比方在浏览器禁用脚本时，或浏览器不支持客户端脚本时。<code>&lt;noscript&gt;</code> 元素可包含普通 HTML 页面的 body 元素中能够找到的所有元素。</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></div><div class="line"><span class="built_in">document</span>.write(<span class="string">"Hello World!"</span>)</div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">noscript</span>&gt;</span>Sorry, your browser does not support JavaScript!<span class="tag">&lt;/<span class="name">noscript</span>&gt;</span></div></pre></td></tr></table></figure>
<h2 id="HTML-实体"><a href="#HTML-实体" class="headerlink" title="HTML 实体"></a>HTML 实体</h2><p>在 HTML 中不能使用小于号（&lt;）和大于号（&gt;），这是因为浏览器会误认为它们是标签。如果希望正确地显示预留字符，我们必须在 HTML 源代码中使用字符实体。 如需显示小于号，我们必须这样写：<code>&amp;lt;</code> 或 <code>&amp;#60;</code> 或 <code>&amp;#060;</code> 。使用实体名而不是数字的好处是，名称易于记忆。不过坏处是，浏览器也许并不支持所有实体名称（对实体数字的支持却很好）。比较重要的一点是：实体名称对大小写敏感。</p>
<p>浏览器总是会截短 HTML 页面中的空格。如果您在文本中写 10 个空格，在显示该页面之前，浏览器会删除它们中的 9 个。如需在页面中增加空格的数量，您需要使用 <code>&amp;nbsp;</code> 字符实体。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;HTML-简单模板&quot;&gt;&lt;a href=&quot;#HTML-简单模板&quot; class=&quot;headerlink&quot; title=&quot;HTML 简单模板&quot;&gt;&lt;/a&gt;HTML 简单模板&lt;/h2&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="编程笔记" scheme="https://blog.xlsdg.org/categories/%E7%BC%96%E7%A8%8B%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="HTML" scheme="https://blog.xlsdg.org/tags/HTML/"/>
    
  </entry>
  
  <entry>
    <title>树莓派之网络摄像头配置</title>
    <link href="https://blog.xlsdg.org/2015/05/24/raspberry-pi-webcam-using-mjpg-streamer-over-internet/"/>
    <id>https://blog.xlsdg.org/2015/05/24/raspberry-pi-webcam-using-mjpg-streamer-over-internet/</id>
    <published>2015-05-24T01:30:00.000Z</published>
    <updated>2016-12-09T15:58:10.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="安装支持库"><a href="#安装支持库" class="headerlink" title="安装支持库"></a>安装支持库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo aptitude install libjpeg8-dev imagemagick libv4l-dev cmake</div></pre></td></tr></table></figure>
<a id="more"></a>
<h3 id="编译mjpg-streamer"><a href="#编译mjpg-streamer" class="headerlink" title="编译mjpg-streamer"></a>编译mjpg-streamer</h3><p>当前用户是pi，目录是/home/pi/。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ git <span class="built_in">clone</span> https://github.com/jacksonliam/mjpg-streamer.git</div><div class="line">$ <span class="built_in">cd</span> mjpg-streamer/mjpg-streamer-experimental/</div><div class="line">$ sudo make clean all</div><div class="line">$ <span class="built_in">cd</span> ..</div><div class="line">$ sudo chown -R pi:pi mjpg-streamer-experimental/</div></pre></td></tr></table></figure>
<h3 id="编写启动脚本"><a href="#编写启动脚本" class="headerlink" title="编写启动脚本"></a>编写启动脚本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo vi /etc/init.d/webcam</div></pre></td></tr></table></figure>
<h3 id="脚本内容"><a href="#脚本内容" class="headerlink" title="脚本内容"></a>脚本内容</h3><p>修改代码中第15行的<code>DAEMON</code>变量为<code>mjpg-streamer</code>的执行目录。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/sh</span></div><div class="line"></div><div class="line"><span class="comment"># /etc/init.d/webcam</span></div><div class="line"></div><div class="line"><span class="comment">### BEGIN INIT INFO</span></div><div class="line"><span class="comment"># Provides:          webcam</span></div><div class="line"><span class="comment"># Required-Start:    $network</span></div><div class="line"><span class="comment"># Required-Stop:     $network</span></div><div class="line"><span class="comment"># Default-Start:     2 3 4 5</span></div><div class="line"><span class="comment"># Default-Stop:      0 1 6</span></div><div class="line"><span class="comment"># Short-Description: mjpg_streamer for webcam</span></div><div class="line"><span class="comment"># Description:       Streams /dev/video0 to http://IP/?action=stream</span></div><div class="line"><span class="comment">### END INIT INFO</span></div><div class="line"></div><div class="line">DAEMON=/home/pi/mjpg-streamer/mjpg-streamer-experimental</div><div class="line">WC_USER=user</div><div class="line">WC_PASSWORD=password</div><div class="line">WC_PORT=12345</div><div class="line"></div><div class="line"><span class="function"><span class="title">f_message</span></span>()&#123;</div><div class="line">        <span class="built_in">echo</span> <span class="string">"[+] <span class="variable">$1</span>"</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment"># Carry out specific functions when asked to by the system</span></div><div class="line"><span class="keyword">case</span> <span class="string">"<span class="variable">$1</span>"</span> <span class="keyword">in</span></div><div class="line">        start)</div><div class="line">                f_message <span class="string">"Starting mjpg_streamer"</span></div><div class="line">                <span class="variable">$DAEMON</span>/mjpg_streamer -b -i <span class="string">"<span class="variable">$DAEMON</span>/input_uvc.so"</span> -o <span class="string">"<span class="variable">$DAEMON</span>/output_http.so -w <span class="variable">$DAEMON</span>/www -c <span class="variable">$WC_USER</span>:<span class="variable">$WC_PASSWORD</span> -p <span class="variable">$WC_PORT</span>"</span></div><div class="line">                sleep 2</div><div class="line">                f_message <span class="string">"mjpg_streamer started"</span></div><div class="line">                ;;</div><div class="line">        stop)</div><div class="line">                f_message <span class="string">"Stopping mjpg_streamer…"</span></div><div class="line">                killall mjpg_streamer</div><div class="line">                f_message <span class="string">"mjpg_streamer stopped"</span></div><div class="line">                ;;</div><div class="line">        restart)</div><div class="line">                f_message <span class="string">"Restarting daemon: mjpg_streamer"</span></div><div class="line">                killall mjpg_streamer</div><div class="line">                <span class="variable">$DAEMON</span>/mjpg_streamer -b -i <span class="string">"<span class="variable">$DAEMON</span>/input_uvc.so"</span> -o <span class="string">"<span class="variable">$DAEMON</span>/output_http.so -w <span class="variable">$DAEMON</span>/www -c <span class="variable">$WC_USER</span>:<span class="variable">$WC_PASSWORD</span> -p <span class="variable">$WC_PORT</span>"</span></div><div class="line">                sleep 2</div><div class="line">                f_message <span class="string">"Restarted daemon: mjpg_streamer"</span></div><div class="line">                ;;</div><div class="line">        status)</div><div class="line">                pid=`ps -A | grep mjpg_streamer | grep -v <span class="string">"grep"</span> | grep -v mjpg_streamer. | awk <span class="string">'&#123;print $1&#125;'</span> | head -n 1`</div><div class="line">                <span class="keyword">if</span> [ -n <span class="string">"<span class="variable">$pid</span>"</span> ];</div><div class="line">                <span class="keyword">then</span></div><div class="line">                        f_message <span class="string">"mjpg_streamer is running with pid <span class="variable">$&#123;pid&#125;</span>"</span></div><div class="line">                        f_message <span class="string">"mjpg_streamer was started with the following command line"</span></div><div class="line">                        cat /proc/<span class="variable">$&#123;pid&#125;</span>/cmdline ; <span class="built_in">echo</span> <span class="string">""</span></div><div class="line">                <span class="keyword">else</span></div><div class="line">                        f_message <span class="string">"Could not find mjpg_streamer running"</span></div><div class="line">                <span class="keyword">fi</span></div><div class="line">                ;;</div><div class="line">        *)</div><div class="line">                f_message <span class="string">"Usage: <span class="variable">$0</span> &#123;start|stop|status|restart&#125;"</span></div><div class="line">                <span class="built_in">exit</span> 1</div><div class="line">                ;;</div><div class="line"><span class="keyword">esac</span></div><div class="line"><span class="built_in">exit</span> 0</div></pre></td></tr></table></figure>
<p>默认登录的用户名是<code>user</code>，密码是<code>password</code>，端口是<code>12345</code>（可以在代码中第16，17，18行修改）。</p>
<h3 id="赋予脚本执行权限"><a href="#赋予脚本执行权限" class="headerlink" title="赋予脚本执行权限"></a>赋予脚本执行权限</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo chmod +x /etc/init.d/webcam</div></pre></td></tr></table></figure>
<h3 id="配置脚本开机启动"><a href="#配置脚本开机启动" class="headerlink" title="配置脚本开机启动"></a>配置脚本开机启动</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo update-rc.d webcam defaults</div></pre></td></tr></table></figure>
<h3 id="启动网络摄像头后台程序"><a href="#启动网络摄像头后台程序" class="headerlink" title="启动网络摄像头后台程序"></a>启动网络摄像头后台程序</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo /etc/init.d/webcam start</div></pre></td></tr></table></figure>
<h3 id="查看网络摄像头运行状态"><a href="#查看网络摄像头运行状态" class="headerlink" title="查看网络摄像头运行状态"></a>查看网络摄像头运行状态</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo /etc/init.d/webcam status</div></pre></td></tr></table></figure>
<h3 id="重启网络摄像头后台程序"><a href="#重启网络摄像头后台程序" class="headerlink" title="重启网络摄像头后台程序"></a>重启网络摄像头后台程序</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo /etc/init.d/webcam restart</div></pre></td></tr></table></figure>
<h3 id="停止网络摄像头后台程序"><a href="#停止网络摄像头后台程序" class="headerlink" title="停止网络摄像头后台程序"></a>停止网络摄像头后台程序</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo /etc/init.d/webcam stop</div></pre></td></tr></table></figure>
<h3 id="浏览器中查看网络摄像头"><a href="#浏览器中查看网络摄像头" class="headerlink" title="浏览器中查看网络摄像头"></a>浏览器中查看网络摄像头</h3><p>访问地址：<code>http://树莓派的IP地址:自定义的端口号</code></p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;安装支持库&quot;&gt;&lt;a href=&quot;#安装支持库&quot; class=&quot;headerlink&quot; title=&quot;安装支持库&quot;&gt;&lt;/a&gt;安装支持库&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ sudo aptitude install libjpeg8-dev imagemagick libv4l-dev cmake&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="技术研究" scheme="https://blog.xlsdg.org/categories/%E6%8A%80%E6%9C%AF%E7%A0%94%E7%A9%B6/"/>
    
    
      <category term="Raspberry-Pi" scheme="https://blog.xlsdg.org/tags/Raspberry-Pi/"/>
    
      <category term="Shell" scheme="https://blog.xlsdg.org/tags/Shell/"/>
    
  </entry>
  
  <entry>
    <title>《精通iOS开发》第10章学习笔记</title>
    <link href="https://blog.xlsdg.org/2015/05/05/beginning-ios7-development-exploring-the-ios-sdk-10/"/>
    <id>https://blog.xlsdg.org/2015/05/05/beginning-ios7-development-exploring-the-ios-sdk-10/</id>
    <published>2015-05-05T07:30:00.000Z</published>
    <updated>2016-12-09T10:48:14.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="自定义单元"><a href="#自定义单元" class="headerlink" title="自定义单元"></a>自定义单元</h3><p>1.创建标签：</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">- (<span class="keyword">id</span>)initWithFrame:(<span class="built_in">CGRect</span>)frame &#123;</div><div class="line">  <span class="keyword">self</span> = [<span class="keyword">super</span> initWithFrame:frame];</div><div class="line">  <span class="keyword">if</span> (<span class="keyword">self</span>) &#123;</div><div class="line">    <span class="keyword">self</span>.label = [[<span class="built_in">UILabel</span> alloc] initWithFrame:<span class="keyword">self</span>.contentView.bounds];</div><div class="line">    <span class="keyword">self</span>.label.opaque = <span class="literal">NO</span>;</div><div class="line">    <span class="keyword">self</span>.label.backgroundColor =</div><div class="line">        [<span class="built_in">UIColor</span> colorWithRed:<span class="number">0.8</span> green:<span class="number">0.9</span> blue:<span class="number">1.0</span> alpha:<span class="number">1.0</span>];</div><div class="line">    <span class="keyword">self</span>.label.textColor = [<span class="built_in">UIColor</span> blackColor];</div><div class="line">    <span class="keyword">self</span>.label.textAlignment = <span class="built_in">NSTextAlignmentCenter</span>;</div><div class="line">    <span class="keyword">self</span>.label.font = [[<span class="keyword">self</span> <span class="keyword">class</span>] defaultFont];</div><div class="line">    [<span class="keyword">self</span>.contentView addSubview:<span class="keyword">self</span>.label];</div><div class="line">  &#125;</div><div class="line">  <span class="keyword">return</span> <span class="keyword">self</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<a id="more"></a>
<p>2.重写text属性：</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">- (<span class="built_in">NSString</span> *)text &#123;</div><div class="line">  <span class="keyword">return</span> <span class="keyword">self</span>.label.text;</div><div class="line">&#125;</div><div class="line"></div><div class="line">- (<span class="keyword">void</span>)setText:(<span class="built_in">NSString</span> *)text &#123;</div><div class="line">  <span class="keyword">self</span>.label.text = text;</div><div class="line">  <span class="built_in">CGRect</span> newLabelFrame = <span class="keyword">self</span>.label.frame;</div><div class="line">  <span class="built_in">CGRect</span> newContentFrame = <span class="keyword">self</span>.contentView.frame;</div><div class="line">  <span class="built_in">CGSize</span> textSize = [[<span class="keyword">self</span> <span class="keyword">class</span>] sizeForContentString:text];</div><div class="line"></div><div class="line">  newLabelFrame.size = textSize;</div><div class="line">  newContentFrame.size = textSize;</div><div class="line">  <span class="keyword">self</span>.label.frame = newLabelFrame;</div><div class="line">  <span class="keyword">self</span>.contentView.frame = newContentFrame;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>3.获取字体尺寸：</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">+ (<span class="built_in">UIFont</span> *)defaultFont &#123;</div><div class="line">  <span class="keyword">return</span> [<span class="built_in">UIFont</span> preferredFontForTextStyle:<span class="built_in">UIFontTextStyleBody</span>];</div><div class="line">&#125;</div><div class="line"></div><div class="line">+ (<span class="built_in">CGSize</span>)sizeForContentString:(<span class="built_in">NSString</span> *)string &#123;</div><div class="line">  <span class="built_in">CGSize</span> maxSize = <span class="built_in">CGSizeMake</span>(<span class="number">300</span>, <span class="number">1000</span>);</div><div class="line"></div><div class="line">  <span class="built_in">NSStringDrawingOptions</span> opts =</div><div class="line">      <span class="built_in">NSStringDrawingUsesLineFragmentOrigin</span> | <span class="built_in">NSStringDrawingUsesFontLeading</span>;</div><div class="line">  <span class="built_in">NSMutableParagraphStyle</span> *style = [[<span class="built_in">NSMutableParagraphStyle</span> alloc] init];</div><div class="line"></div><div class="line">  [style setLineBreakMode:<span class="built_in">NSLineBreakByCharWrapping</span>];</div><div class="line"></div><div class="line">  <span class="built_in">NSDictionary</span> *attributes = @&#123;</div><div class="line">    <span class="built_in">NSFontAttributeName</span> : [<span class="keyword">self</span> defaultFont],</div><div class="line">    <span class="built_in">NSParagraphStyleAttributeName</span> : style</div><div class="line">  &#125;;</div><div class="line">  <span class="built_in">CGRect</span> rect = [string boundingRectWithSize:maxSize</div><div class="line">                                     options:opts</div><div class="line">                                  attributes:attributes</div><div class="line">                                     context:<span class="literal">nil</span>];</div><div class="line"></div><div class="line">  <span class="keyword">return</span> rect.size;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="配置视图控制器"><a href="#配置视图控制器" class="headerlink" title="配置视图控制器"></a>配置视图控制器</h3><p>1.初始化：</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div></pre></td><td class="code"><pre><div class="line">- (<span class="keyword">void</span>)viewDidLoad &#123;</div><div class="line">  [<span class="keyword">super</span> viewDidLoad];</div><div class="line">  <span class="comment">// Do any additional setup after loading the view, typically from a nib.</span></div><div class="line">  <span class="keyword">self</span>.sections = @[</div><div class="line">    @&#123;</div><div class="line">      <span class="string">@"header"</span> : <span class="string">@"First Witch"</span>,</div><div class="line">      <span class="string">@"content"</span> : <span class="string">@"Hey, when will the three of us meet up later?"</span></div><div class="line">    &#125;,</div><div class="line">    @&#123;</div><div class="line">      <span class="string">@"header"</span> : <span class="string">@"Second Witch"</span>,</div><div class="line">      <span class="string">@"content"</span> : <span class="string">@"When everything's straightened out."</span></div><div class="line">    &#125;,</div><div class="line">    @&#123;</div><div class="line">      <span class="string">@"header"</span> : <span class="string">@"Third Witch"</span>,</div><div class="line">      <span class="string">@"content"</span> : <span class="string">@"That'll be just before sunset."</span></div><div class="line">    &#125;,</div><div class="line">    @&#123;</div><div class="line">      <span class="string">@"header"</span> : <span class="string">@"First Witch"</span>,</div><div class="line">      <span class="string">@"content"</span> : <span class="string">@"Where?"</span></div><div class="line">    &#125;,</div><div class="line">    @&#123;</div><div class="line">      <span class="string">@"header"</span> : <span class="string">@"Second Witch"</span>,</div><div class="line">      <span class="string">@"content"</span> : <span class="string">@"The dirt patch."</span></div><div class="line">    &#125;,</div><div class="line">    @&#123;</div><div class="line">      <span class="string">@"header"</span> : <span class="string">@"Third Witch"</span>,</div><div class="line">      <span class="string">@"content"</span> : <span class="string">@"I guess we'll see Mac there."</span></div><div class="line">    &#125;,</div><div class="line">  ];</div><div class="line"></div><div class="line">  [<span class="keyword">self</span>.collectionView registerClass:[BIDContentCell <span class="keyword">class</span>]</div><div class="line">          forCellWithReuseIdentifier:<span class="string">@"CONTENT"</span>];</div><div class="line"></div><div class="line">  <span class="keyword">self</span>.collectionView.backgroundColor = [<span class="built_in">UIColor</span> whiteColor];</div><div class="line"></div><div class="line">  <span class="built_in">UIEdgeInsets</span> contentInset = <span class="keyword">self</span>.collectionView.contentInset;</div><div class="line">  contentInset.top = <span class="number">20</span>;</div><div class="line">  [<span class="keyword">self</span>.collectionView setContentInset:contentInset];</div><div class="line"></div><div class="line">  <span class="built_in">UICollectionViewLayout</span> *layout = <span class="keyword">self</span>.collectionView.collectionViewLayout;</div><div class="line">  <span class="built_in">UICollectionViewFlowLayout</span> *flow = (<span class="built_in">UICollectionViewFlowLayout</span> *)layout;</div><div class="line">  flow.sectionInset = <span class="built_in">UIEdgeInsetsMake</span>(<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>, <span class="number">20</span>);</div><div class="line"></div><div class="line">  [<span class="keyword">self</span>.collectionView registerClass:[BIDHeaderCell <span class="keyword">class</span>]</div><div class="line">          forSupplementaryViewOfKind:<span class="built_in">UICollectionElementKindSectionHeader</span></div><div class="line">                 withReuseIdentifier:<span class="string">@"HEADER"</span>];</div><div class="line"></div><div class="line">  flow.headerReferenceSize = <span class="built_in">CGSizeMake</span>(<span class="number">100</span>, <span class="number">25</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>2.实现流式布局：</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div></pre></td><td class="code"><pre><div class="line">- (<span class="built_in">NSArray</span> *)wordsInSection:(<span class="built_in">NSInteger</span>)setion &#123;</div><div class="line">  <span class="built_in">NSString</span> *content = <span class="keyword">self</span>.sections[setion][<span class="string">@"content"</span>];</div><div class="line">  <span class="built_in">NSCharacterSet</span> *space = [<span class="built_in">NSCharacterSet</span> whitespaceAndNewlineCharacterSet];</div><div class="line">  <span class="built_in">NSArray</span> *words = [content componentsSeparatedByCharactersInSet:space];</div><div class="line">  <span class="keyword">return</span> words;</div><div class="line">&#125;</div><div class="line"></div><div class="line">- (<span class="built_in">NSInteger</span>)collectionView:(<span class="built_in">UICollectionView</span> *)collectionView</div><div class="line">     numberOfItemsInSection:(<span class="built_in">NSInteger</span>)section &#123;</div><div class="line">  <span class="built_in">NSArray</span> *words = [<span class="keyword">self</span> wordsInSection:section];</div><div class="line">  <span class="keyword">return</span> [words count];</div><div class="line">&#125;</div><div class="line"></div><div class="line">- (<span class="built_in">NSInteger</span>)numberOfSectionsInCollectionView:</div><div class="line">    (<span class="built_in">UICollectionView</span> *)collectionView &#123;</div><div class="line">  <span class="keyword">return</span> [<span class="keyword">self</span>.sections count];</div><div class="line">&#125;</div><div class="line"></div><div class="line">- (<span class="built_in">UICollectionViewCell</span> *)collectionView:(<span class="built_in">UICollectionView</span> *)collectionView</div><div class="line">                  cellForItemAtIndexPath:(<span class="built_in">NSIndexPath</span> *)indexPath &#123;</div><div class="line">  <span class="built_in">NSArray</span> *words = [<span class="keyword">self</span> wordsInSection:indexPath.section];</div><div class="line"></div><div class="line">  BIDContentCell *cell =</div><div class="line">      [<span class="keyword">self</span>.collectionView dequeueReusableCellWithReuseIdentifier:<span class="string">@"CONTENT"</span></div><div class="line">                                                     forIndexPath:indexPath];</div><div class="line"></div><div class="line">  cell.text = words[indexPath.row];</div><div class="line"></div><div class="line">  <span class="keyword">return</span> cell;</div><div class="line">&#125;</div><div class="line"></div><div class="line">- (<span class="built_in">CGSize</span>)collectionView:(<span class="built_in">UICollectionView</span> *)collectionView</div><div class="line">                  layout:(<span class="built_in">UICollectionViewLayout</span> *)collectionViewLayout</div><div class="line">  sizeForItemAtIndexPath:(<span class="built_in">NSIndexPath</span> *)indexPath &#123;</div><div class="line">  <span class="built_in">NSArray</span> *words = [<span class="keyword">self</span> wordsInSection:indexPath.section];</div><div class="line">  <span class="built_in">CGSize</span> size = [BIDContentCell sizeForContentString:words[indexPath.row]];</div><div class="line">  <span class="keyword">return</span> size;</div><div class="line">&#125;</div><div class="line"></div><div class="line">- (<span class="built_in">UICollectionReusableView</span> *)collectionView:(<span class="built_in">UICollectionView</span> *)collectionView</div><div class="line">           viewForSupplementaryElementOfKind:(<span class="built_in">NSString</span> *)kind</div><div class="line">                                 atIndexPath:(<span class="built_in">NSIndexPath</span> *)indexPath &#123;</div><div class="line">  <span class="keyword">if</span> ([kind isEqual:<span class="built_in">UICollectionElementKindSectionHeader</span>]) &#123;</div><div class="line">    BIDHeaderCell *cell =</div><div class="line">        [<span class="keyword">self</span>.collectionView dequeueReusableSupplementaryViewOfKind:kind</div><div class="line">                                                withReuseIdentifier:<span class="string">@"HEADER"</span></div><div class="line">                                                       forIndexPath:indexPath];</div><div class="line">    cell.text = <span class="keyword">self</span>.sections[indexPath.row][<span class="string">@"header"</span>];</div><div class="line">    <span class="keyword">return</span> cell;</div><div class="line">  &#125;</div><div class="line">  <span class="keyword">return</span> <span class="literal">nil</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;自定义单元&quot;&gt;&lt;a href=&quot;#自定义单元&quot; class=&quot;headerlink&quot; title=&quot;自定义单元&quot;&gt;&lt;/a&gt;自定义单元&lt;/h3&gt;&lt;p&gt;1.创建标签：&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;)initWithFrame:(&lt;span class=&quot;built_in&quot;&gt;CGRect&lt;/span&gt;)frame &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; = [&lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt; initWithFrame:frame];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.label = [[&lt;span class=&quot;built_in&quot;&gt;UILabel&lt;/span&gt; alloc] initWithFrame:&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.contentView.bounds];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.label.opaque = &lt;span class=&quot;literal&quot;&gt;NO&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.label.backgroundColor =&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        [&lt;span class=&quot;built_in&quot;&gt;UIColor&lt;/span&gt; colorWithRed:&lt;span class=&quot;number&quot;&gt;0.8&lt;/span&gt; green:&lt;span class=&quot;number&quot;&gt;0.9&lt;/span&gt; blue:&lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt; alpha:&lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.label.textColor = [&lt;span class=&quot;built_in&quot;&gt;UIColor&lt;/span&gt; blackColor];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.label.textAlignment = &lt;span class=&quot;built_in&quot;&gt;NSTextAlignmentCenter&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.label.font = [[&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;] defaultFont];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.contentView addSubview:&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.label];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="编程笔记" scheme="https://blog.xlsdg.org/categories/%E7%BC%96%E7%A8%8B%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="iOS" scheme="https://blog.xlsdg.org/tags/iOS/"/>
    
      <category term="Objective-C" scheme="https://blog.xlsdg.org/tags/Objective-C/"/>
    
  </entry>
  
  <entry>
    <title>《精通iOS开发》第09章学习笔记</title>
    <link href="https://blog.xlsdg.org/2015/05/04/beginning-ios7-development-exploring-the-ios-sdk-09/"/>
    <id>https://blog.xlsdg.org/2015/05/04/beginning-ios7-development-exploring-the-ios-sdk-09/</id>
    <published>2015-05-04T13:30:00.000Z</published>
    <updated>2016-12-09T10:48:09.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Font应用的基础框架"><a href="#Font应用的基础框架" class="headerlink" title="Font应用的基础框架"></a>Font应用的基础框架</h3><p>1.工厂方法代码示例：</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">+ (<span class="keyword">instancetype</span>)sharedFavoritesList &#123;</div><div class="line">  <span class="keyword">static</span> BIDFavoritesList *shared = <span class="literal">nil</span>;</div><div class="line">  <span class="keyword">static</span> <span class="built_in">dispatch_once_t</span> onceToken;</div><div class="line"></div><div class="line">  <span class="built_in">dispatch_once</span>(&amp;onceToken, ^&#123;</div><div class="line">    shared = [[<span class="keyword">self</span> alloc] init];</div><div class="line">  &#125;);</div><div class="line"></div><div class="line">  <span class="keyword">return</span> shared;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<a id="more"></a>
<p>2.读取用户偏好设置代码示例：</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">- (<span class="keyword">instancetype</span>)init &#123;</div><div class="line">  <span class="keyword">self</span> = [<span class="keyword">super</span> init];</div><div class="line">  <span class="keyword">if</span> (<span class="keyword">self</span>) &#123;</div><div class="line">    <span class="built_in">NSUserDefaults</span> *defaults = [<span class="built_in">NSUserDefaults</span> standardUserDefaults];</div><div class="line">    <span class="built_in">NSArray</span> *storedFavorites = [defaults objectForKey:<span class="string">@"favorites"</span>];</div><div class="line"></div><div class="line">    <span class="keyword">if</span> (storedFavorites) &#123;</div><div class="line">      <span class="keyword">self</span>.favorites = [storedFavorites mutableCopy];</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">      <span class="keyword">self</span>.favorites = [<span class="built_in">NSMutableArray</span> array];</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">  <span class="keyword">return</span> <span class="keyword">self</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>3.保存用户偏好设置代码示例：</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">- (<span class="keyword">void</span>)moveItemAtIndex:(<span class="built_in">NSInteger</span>)from toIndex:(<span class="built_in">NSInteger</span>)to &#123;</div><div class="line">  <span class="keyword">id</span> item = _favorites[from];</div><div class="line">  [_favorites removeObjectAtIndex:from];</div><div class="line">  [_favorites insertObject:item atIndex:to];</div><div class="line">  [<span class="keyword">self</span> saveFavorites];</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="创建根视图控制器"><a href="#创建根视图控制器" class="headerlink" title="创建根视图控制器"></a>创建根视图控制器</h3><p>1.获取所有已知字体名字：</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">- (<span class="keyword">void</span>)viewDidLoad &#123;</div><div class="line">  [<span class="keyword">super</span> viewDidLoad];</div><div class="line"></div><div class="line">  <span class="keyword">self</span>.familyNames = [[<span class="built_in">UIFont</span> familyNames] sortedArrayUsingSelector:<span class="keyword">@selector</span>(compare:)];</div><div class="line"></div><div class="line">  <span class="built_in">UIFont</span> *preferredTableViewFont = [<span class="built_in">UIFont</span> preferredFontForTextStyle:<span class="built_in">UIFontTextStyleHeadline</span>];</div><div class="line"></div><div class="line">  <span class="keyword">self</span>.cellPointSize = preferredTableViewFont.pointSize;</div><div class="line">  <span class="keyword">self</span>.favoritesList = [BIDFavoritesList sharedFavoritesList];</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>2.设置分区标题：</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">- (<span class="built_in">NSString</span> *)tableView:(<span class="built_in">UITableView</span> *)tableView</div><div class="line">titleForHeaderInSection:(<span class="built_in">NSInteger</span>)section &#123;</div><div class="line">  <span class="keyword">if</span> (section == <span class="number">0</span>) &#123;</div><div class="line">    <span class="keyword">return</span> <span class="string">@"All Font Families"</span>;</div><div class="line">  &#125; <span class="keyword">else</span> &#123;</div><div class="line">    <span class="keyword">return</span> <span class="string">@"My Favorite Fonts"</span>;</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>3.根据字体大小设置每行高度：</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">- (<span class="built_in">CGFloat</span>)tableView:(<span class="built_in">UITableView</span> *)tableView</div><div class="line">    heightForRowAtIndexPath:(<span class="built_in">NSIndexPath</span> *)indexPath &#123;</div><div class="line">  <span class="keyword">if</span> (indexPath.section == <span class="number">0</span>) &#123;</div><div class="line">    <span class="built_in">UIFont</span> *font = [<span class="keyword">self</span> fontForDisplayAtIndexPath:indexPath];</div><div class="line">    <span class="keyword">return</span> <span class="number">25</span> + font.ascender - font.descender;</div><div class="line">  &#125; <span class="keyword">else</span> &#123;</div><div class="line">    <span class="keyword">return</span> tableView.rowHeight;</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="创建字体列表视图控制器"><a href="#创建字体列表视图控制器" class="headerlink" title="创建字体列表视图控制器"></a>创建字体列表视图控制器</h3><p>1.添加编辑按钮：</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">- (<span class="keyword">void</span>)viewDidLoad &#123;</div><div class="line">  [<span class="keyword">super</span> viewDidLoad];</div><div class="line"></div><div class="line">  <span class="built_in">UIFont</span> *preferredTableViewFont =</div><div class="line">      [<span class="built_in">UIFont</span> preferredFontForTextStyle:<span class="built_in">UIFontTextStyleHeadline</span>];</div><div class="line"></div><div class="line">  <span class="keyword">self</span>.cellPointSize = preferredTableViewFont.pointSize;</div><div class="line"></div><div class="line">  <span class="keyword">if</span> (<span class="keyword">self</span>.showsFavorites) &#123;</div><div class="line">    <span class="keyword">self</span>.navigationItem.rightBarButtonItem = <span class="keyword">self</span>.editButtonItem;</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>2.在视图将要出现时，重载数据：</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">- (<span class="keyword">void</span>)viewWillAppear:(<span class="built_in">BOOL</span>)animated &#123;</div><div class="line">  <span class="keyword">if</span> (<span class="keyword">self</span>.showsFavorites) &#123;</div><div class="line">    <span class="keyword">self</span>.fontNames = [BIDFavoritesList sharedFavoritesList].favorites;</div><div class="line">    [<span class="keyword">self</span>.tableView reloadData];</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>3.使每行数据都能编辑：</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">- (<span class="built_in">BOOL</span>)tableView:(<span class="built_in">UITableView</span> *)tableView</div><div class="line">    canEditRowAtIndexPath:(<span class="built_in">NSIndexPath</span> *)indexPath &#123;</div><div class="line">  <span class="comment">// Return NO if you do not want the specified item to be editable.</span></div><div class="line">  <span class="keyword">return</span> <span class="keyword">self</span>.showsFavorites;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>4.删除某行数据：</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">- (<span class="keyword">void</span>)tableView:(<span class="built_in">UITableView</span> *)tableView</div><div class="line">    commitEditingStyle:(<span class="built_in">UITableViewCellEditingStyle</span>)editingStyle</div><div class="line">     forRowAtIndexPath:(<span class="built_in">NSIndexPath</span> *)indexPath &#123;</div><div class="line">  <span class="keyword">if</span> (!<span class="keyword">self</span>.showsFavorites) &#123;</div><div class="line">    <span class="keyword">return</span>;</div><div class="line">  &#125;</div><div class="line">  <span class="keyword">if</span> (editingStyle == <span class="built_in">UITableViewCellEditingStyleDelete</span>) &#123;</div><div class="line">    <span class="built_in">NSString</span> *favorite = <span class="keyword">self</span>.fontNames[indexPath.row];</div><div class="line">    [[BIDFavoritesList sharedFavoritesList] removeFavorite:favorite];</div><div class="line">    <span class="keyword">self</span>.fontNames = [BIDFavoritesList sharedFavoritesList].favorites;</div><div class="line"></div><div class="line">    <span class="comment">// Delete the row from the data source</span></div><div class="line">    [tableView deleteRowsAtIndexPaths:@[ indexPath ]</div><div class="line">                     withRowAnimation:<span class="built_in">UITableViewRowAnimationFade</span>];</div><div class="line">    <span class="comment">//&#125; else if (editingStyle == UITableViewCellEditingStyleInsert) &#123;</span></div><div class="line">    <span class="comment">// Create a new instance of the appropriate class, insert it into the array,</span></div><div class="line">    <span class="comment">// and add a new row to the table view</span></div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>5.调整某行数据：</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">- (<span class="keyword">void</span>)tableView:(<span class="built_in">UITableView</span> *)tableView</div><div class="line">    moveRowAtIndexPath:(<span class="built_in">NSIndexPath</span> *)fromIndexPath</div><div class="line">           toIndexPath:(<span class="built_in">NSIndexPath</span> *)toIndexPath &#123;</div><div class="line">  [[BIDFavoritesList sharedFavoritesList] moveItemAtIndex:fromIndexPath.row</div><div class="line">                                                  toIndex:toIndexPath.row];</div><div class="line">  <span class="keyword">self</span>.fontNames = [BIDFavoritesList sharedFavoritesList].favorites;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>6.场景跳转时的数据处理：</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">- (<span class="keyword">void</span>)prepareForSegue:(<span class="built_in">UIStoryboardSegue</span> *)segue sender:(<span class="keyword">id</span>)sender &#123;</div><div class="line">  <span class="built_in">NSIndexPath</span> *indexPath = [<span class="keyword">self</span>.tableView indexPathForCell:sender];</div><div class="line">  <span class="built_in">UIFont</span> *font = [<span class="keyword">self</span> fontForDisplayAtIndexPath:indexPath];</div><div class="line"></div><div class="line">  [segue.destinationViewController navigationItem].title = font.fontName;</div><div class="line"></div><div class="line">  <span class="keyword">if</span> ([segue.identifier isEqualToString:<span class="string">@"ShowFontSizes"</span>]) &#123;</div><div class="line">    BIDFontSizesViewController *sizeVC = segue.destinationViewController;</div><div class="line">    sizeVC.font = font;</div><div class="line">  &#125; <span class="keyword">else</span> &#123;</div><div class="line">    BIDFontInfoViewController *infoVC = segue.destinationViewController;</div><div class="line">    infoVC.font = font;</div><div class="line">    infoVC.favorite = [[BIDFavoritesList sharedFavoritesList]</div><div class="line">                           .favorites containsObject:font.fontName];</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="创建字体尺寸视图控制器"><a href="#创建字体尺寸视图控制器" class="headerlink" title="创建字体尺寸视图控制器"></a>创建字体尺寸视图控制器</h3><p>1.字体大小数组初始化：</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">- (<span class="built_in">NSArray</span> *)pointSizes &#123;</div><div class="line">  <span class="keyword">static</span> <span class="built_in">NSArray</span> *pointSizes = <span class="literal">nil</span>;</div><div class="line">  <span class="keyword">static</span> <span class="built_in">dispatch_once_t</span> onceToken;</div><div class="line">  <span class="built_in">dispatch_once</span>(&amp;onceToken, ^&#123;</div><div class="line">    pointSizes = @[</div><div class="line">      @<span class="number">9</span>,</div><div class="line">      @<span class="number">10</span>,</div><div class="line">      @<span class="number">11</span>,</div><div class="line">      @<span class="number">12</span>,</div><div class="line">      @<span class="number">13</span>,</div><div class="line">      @<span class="number">14</span>,</div><div class="line">      @<span class="number">18</span>,</div><div class="line">      @<span class="number">24</span>,</div><div class="line">      @<span class="number">36</span>,</div><div class="line">      @<span class="number">48</span>,</div><div class="line">      @<span class="number">64</span>,</div><div class="line">      @<span class="number">72</span>,</div><div class="line">      @<span class="number">96</span>,</div><div class="line">      @<span class="number">144</span></div><div class="line">    ];</div><div class="line">  &#125;);</div><div class="line">  <span class="keyword">return</span> pointSizes;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Font应用的基础框架&quot;&gt;&lt;a href=&quot;#Font应用的基础框架&quot; class=&quot;headerlink&quot; title=&quot;Font应用的基础框架&quot;&gt;&lt;/a&gt;Font应用的基础框架&lt;/h3&gt;&lt;p&gt;1.工厂方法代码示例：&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;+ (&lt;span class=&quot;keyword&quot;&gt;instancetype&lt;/span&gt;)sharedFavoritesList &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; BIDFavoritesList *shared = &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;dispatch_once_t&lt;/span&gt; onceToken;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;dispatch_once&lt;/span&gt;(&amp;amp;onceToken, ^&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    shared = [[&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; alloc] init];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; shared;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="编程笔记" scheme="https://blog.xlsdg.org/categories/%E7%BC%96%E7%A8%8B%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="iOS" scheme="https://blog.xlsdg.org/tags/iOS/"/>
    
      <category term="Objective-C" scheme="https://blog.xlsdg.org/tags/Objective-C/"/>
    
  </entry>
  
  <entry>
    <title>《精通iOS开发》第08章学习笔记</title>
    <link href="https://blog.xlsdg.org/2015/05/01/beginning-ios7-development-exploring-the-ios-sdk-08/"/>
    <id>https://blog.xlsdg.org/2015/05/01/beginning-ios7-development-exploring-the-ios-sdk-08/</id>
    <published>2015-05-01T13:00:00.000Z</published>
    <updated>2016-12-09T10:48:03.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="实现简单表"><a href="#实现简单表" class="headerlink" title="实现简单表"></a>实现简单表</h3><p>1.控制器头文件声明遵循的协议：</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">ViewController</span> : <span class="title">UIViewController</span> &lt;<span class="title">UITableViewDelegate</span>, <span class="title">UITableViewDataSource</span>&gt;</span></div><div class="line"><span class="keyword">@end</span></div></pre></td></tr></table></figure>
 <a id="more"></a>
<p>2.视图加载完毕后调整表的顶部位置：</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">UITableView</span> *tableView = (<span class="keyword">id</span>)[<span class="keyword">self</span>.view viewWithTag:<span class="number">1</span>];</div><div class="line"><span class="built_in">UIEdgeInsets</span> contentInsert = tableView.contentInset;</div><div class="line">contentInsert.top = <span class="number">20</span>;</div><div class="line">[tableView setContentInset:contentInsert];</div></pre></td></tr></table></figure>
<p>3.设置表的总行数：</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">- (<span class="built_in">NSInteger</span>)tableView:(<span class="built_in">UITableView</span> *)tableView</div><div class="line"> numberOfRowsInSection:(<span class="built_in">NSInteger</span>)section &#123;</div><div class="line">  <span class="keyword">return</span> [<span class="keyword">self</span>.dwarves count];</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>4.设置表的各行数据（UITableViewCellStyleDefault参数修改表的样式）：</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">- (<span class="built_in">UITableViewCell</span> *)tableView:(<span class="built_in">UITableView</span> *)tableView</div><div class="line">         cellForRowAtIndexPath:(<span class="built_in">NSIndexPath</span> *)indexPath &#123;</div><div class="line">  <span class="keyword">static</span> <span class="built_in">NSString</span> *simpleTableIdentifier = <span class="string">@"SimpleTableIdentifier"</span>;</div><div class="line"></div><div class="line">  <span class="built_in">UITableViewCell</span> *cell =</div><div class="line">      [tableView dequeueReusableCellWithIdentifier:simpleTableIdentifier];</div><div class="line"></div><div class="line">  <span class="keyword">if</span> (cell == <span class="literal">nil</span>) &#123;</div><div class="line">    cell = [[<span class="built_in">UITableViewCell</span> alloc] initWithStyle:<span class="built_in">UITableViewCellStyleDefault</span></div><div class="line">                                  reuseIdentifier:simpleTableIdentifier];</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="built_in">UIImage</span> *image = [<span class="built_in">UIImage</span> imageNamed:<span class="string">@"star"</span>];</div><div class="line">  cell.imageView.image = image;</div><div class="line"></div><div class="line">  cell.textLabel.text = <span class="keyword">self</span>.dwarves[indexPath.row];</div><div class="line">  cell.textLabel.font = [<span class="built_in">UIFont</span> boldSystemFontOfSize:<span class="number">50</span>];</div><div class="line"></div><div class="line">  <span class="keyword">if</span> (indexPath.row &lt; <span class="number">7</span>) &#123;</div><div class="line">    cell.detailTextLabel.text = <span class="string">@"Mr. Disney"</span>;</div><div class="line">  &#125; <span class="keyword">else</span> &#123;</div><div class="line">    cell.detailTextLabel.text = <span class="string">@"Mr. Tolkien"</span>;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="keyword">return</span> cell;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>5.设置表的每行缩进：</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">- (<span class="built_in">NSInteger</span>)tableView:(<span class="built_in">UITableView</span> *)tableView</div><div class="line">    indentationLevelForRowAtIndexPath:(<span class="built_in">NSIndexPath</span> *)indexPath &#123;</div><div class="line">  <span class="keyword">return</span> indexPath.row;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>6.设置表的某一行不能被选择：</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">- (<span class="built_in">NSIndexPath</span> *)tableView:(<span class="built_in">UITableView</span> *)tableView</div><div class="line">  willSelectRowAtIndexPath:(<span class="built_in">NSIndexPath</span> *)indexPath &#123;</div><div class="line">  <span class="keyword">if</span> (indexPath.row == <span class="number">0</span>) &#123;</div><div class="line">    <span class="keyword">return</span> <span class="literal">nil</span>;</div><div class="line">  &#125; <span class="keyword">else</span> &#123;</div><div class="line">    <span class="keyword">return</span> indexPath;</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>7.设置表的每行高度：</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">- (<span class="built_in">CGFloat</span>)tableView:(<span class="built_in">UITableView</span> *)tableView</div><div class="line">    heightForRowAtIndexPath:(<span class="built_in">NSIndexPath</span> *)indexPath &#123;</div><div class="line">  <span class="keyword">return</span> <span class="number">70</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>8.当表的某一行被选中后的操作：</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">- (<span class="keyword">void</span>)tableView:(<span class="built_in">UITableView</span> *)tableView</div><div class="line">    didSelectRowAtIndexPath:(<span class="built_in">NSIndexPath</span> *)indexPath &#123;</div><div class="line">  <span class="built_in">NSString</span> *rowValue = <span class="keyword">self</span>.dwarves[indexPath.row];</div><div class="line">  <span class="built_in">NSString</span> *message =</div><div class="line">      [[<span class="built_in">NSString</span> alloc] initWithFormat:<span class="string">@"You selected %@"</span>, rowValue];</div><div class="line"></div><div class="line">  <span class="built_in">UIAlertView</span> *alert = [[<span class="built_in">UIAlertView</span> alloc] initWithTitle:<span class="string">@"Row Selected!"</span></div><div class="line">                                                  message:message</div><div class="line">                                                 delegate:<span class="literal">nil</span></div><div class="line">                                        cancelButtonTitle:<span class="string">@"Yes, I Did"</span></div><div class="line">                                        otherButtonTitles:<span class="literal">nil</span>];</div><div class="line"></div><div class="line">  [alert show];</div><div class="line">  [tableView deselectRowAtIndexPath:indexPath animated:<span class="literal">YES</span>];</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="代码实现定制表视图单元"><a href="#代码实现定制表视图单元" class="headerlink" title="代码实现定制表视图单元"></a>代码实现定制表视图单元</h3><p>1.单元格类代码布局：</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line">- (<span class="keyword">id</span>)initWithStyle:(<span class="built_in">UITableViewCellStyle</span>)style</div><div class="line">    reuseIdentifier:(<span class="built_in">NSString</span> *)reuseIdentifier &#123;</div><div class="line">  <span class="keyword">self</span> = [<span class="keyword">super</span> initWithStyle:style reuseIdentifier:reuseIdentifier];</div><div class="line">  <span class="keyword">if</span> (<span class="keyword">self</span>) &#123;</div><div class="line">    <span class="built_in">CGRect</span> nameLabelRect = <span class="built_in">CGRectMake</span>(<span class="number">0</span>, <span class="number">5</span>, <span class="number">70</span>, <span class="number">15</span>);</div><div class="line">    <span class="built_in">UILabel</span> *nameMarker = [[<span class="built_in">UILabel</span> alloc] initWithFrame:nameLabelRect];</div><div class="line"></div><div class="line">    nameMarker.textAlignment = <span class="built_in">NSTextAlignmentRight</span>;</div><div class="line">    nameMarker.text = <span class="string">@"Name:"</span>;</div><div class="line">    nameMarker.font = [<span class="built_in">UIFont</span> boldSystemFontOfSize:<span class="number">12</span>];</div><div class="line">    [<span class="keyword">self</span>.contentView addSubview:nameMarker];</div><div class="line"></div><div class="line">    <span class="built_in">CGRect</span> colorLabelRect = <span class="built_in">CGRectMake</span>(<span class="number">0</span>, <span class="number">26</span>, <span class="number">70</span>, <span class="number">15</span>);</div><div class="line">    <span class="built_in">UILabel</span> *colorMarker = [[<span class="built_in">UILabel</span> alloc] initWithFrame:colorLabelRect];</div><div class="line"></div><div class="line">    colorMarker.textAlignment = <span class="built_in">NSTextAlignmentRight</span>;</div><div class="line">    colorMarker.text = <span class="string">@"Color:"</span>;</div><div class="line">    colorMarker.font = [<span class="built_in">UIFont</span> boldSystemFontOfSize:<span class="number">12</span>];</div><div class="line">    [<span class="keyword">self</span>.contentView addSubview:colorMarker];</div><div class="line"></div><div class="line">    <span class="built_in">CGRect</span> nameValueRect = <span class="built_in">CGRectMake</span>(<span class="number">80</span>, <span class="number">5</span>, <span class="number">200</span>, <span class="number">15</span>);</div><div class="line">    _nameLabel = [[<span class="built_in">UILabel</span> alloc] initWithFrame:nameValueRect];</div><div class="line">    [<span class="keyword">self</span>.contentView addSubview:_nameLabel];</div><div class="line"></div><div class="line">    <span class="built_in">CGRect</span> colorValueRect = <span class="built_in">CGRectMake</span>(<span class="number">80</span>, <span class="number">25</span>, <span class="number">200</span>, <span class="number">15</span>);</div><div class="line">    _colorLabel = [[<span class="built_in">UILabel</span> alloc] initWithFrame:colorValueRect];</div><div class="line">    [<span class="keyword">self</span>.contentView addSubview:_colorLabel];</div><div class="line">  &#125;</div><div class="line">  <span class="keyword">return</span> <span class="keyword">self</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>2.定义全局复用的单元格标识：</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">static</span> <span class="built_in">NSString</span> *CellTableIdentifier = <span class="string">@"CellTableIdentifier"</span>;</div></pre></td></tr></table></figure>
<p>3.视图控制器加载完毕后，注册表单元类：</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">UITableView</span> *tableView = (<span class="keyword">id</span>)[<span class="keyword">self</span>.view viewWithTag:<span class="number">1</span>];</div><div class="line">[tableView registerClass:[NameAndColorTableViewCell <span class="keyword">class</span>]</div><div class="line">    forCellReuseIdentifier:CellTableIdentifier];</div></pre></td></tr></table></figure>
<p>4.设置表的总行数：</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">- (<span class="built_in">NSInteger</span>)tableView:(<span class="built_in">UITableView</span> *)tableView</div><div class="line"> numberOfRowsInSection:(<span class="built_in">NSInteger</span>)section &#123;</div><div class="line">  <span class="keyword">return</span> [<span class="keyword">self</span>.computers count];</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>5.设置表的各行数据：</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">- (<span class="built_in">UITableViewCell</span> *)tableView:(<span class="built_in">UITableView</span> *)tableView</div><div class="line">         cellForRowAtIndexPath:(<span class="built_in">NSIndexPath</span> *)indexPath &#123;</div><div class="line">  NameAndColorTableViewCell *cell =</div><div class="line">      [tableView dequeueReusableCellWithIdentifier:CellTableIdentifier</div><div class="line">                                      forIndexPath:indexPath];</div><div class="line"></div><div class="line">  <span class="built_in">NSDictionary</span> *rowData = <span class="keyword">self</span>.computers[indexPath.row];</div><div class="line"></div><div class="line">  cell.name = rowData[<span class="string">@"Name"</span>];</div><div class="line">  cell.color = rowData[<span class="string">@"Color"</span>];</div><div class="line"></div><div class="line">  <span class="keyword">return</span> cell;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="Nib文件加载实现定制表视图单元"><a href="#Nib文件加载实现定制表视图单元" class="headerlink" title="Nib文件加载实现定制表视图单元"></a>Nib文件加载实现定制表视图单元</h3><p>1.视图控制器加载完毕后，从Nib文件中注册表单元类：</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">UITableView</span> *tableView = (<span class="keyword">id</span>)[<span class="keyword">self</span>.view viewWithTag:<span class="number">1</span>];</div><div class="line">tableView.rowHeight = <span class="number">65</span>;</div><div class="line"></div><div class="line"><span class="built_in">UINib</span> *nib = [<span class="built_in">UINib</span> nibWithNibName:<span class="string">@"BIDNameAndColorCell"</span> bundle:<span class="literal">nil</span>];</div><div class="line">[tableView registerNib:nib forCellReuseIdentifier:CellTableIdentifier];</div></pre></td></tr></table></figure>
<h3 id="实现分组分区"><a href="#实现分组分区" class="headerlink" title="实现分组分区"></a>实现分组分区</h3><p>1.视图加载完成之后，加载数据：</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">UITableView</span> *tableView = (<span class="keyword">id</span>)[<span class="keyword">self</span>.view viewWithTag:<span class="number">1</span>];</div><div class="line">[tableView registerClass:[<span class="built_in">UITableViewCell</span> <span class="keyword">class</span>]</div><div class="line">  forCellReuseIdentifier:SectionTableIdentifier];</div><div class="line"></div><div class="line"><span class="built_in">NSString</span> *path = [[<span class="built_in">NSBundle</span> mainBundle] pathForResource:<span class="string">@"sortednames"</span> ofType:<span class="string">@"plist"</span>];</div><div class="line"></div><div class="line"><span class="keyword">self</span>.names = [<span class="built_in">NSDictionary</span> dictionaryWithContentsOfFile:path];</div><div class="line"><span class="keyword">self</span>.keys = [[<span class="keyword">self</span>.names allKeys] sortedArrayUsingSelector:<span class="keyword">@selector</span>(compare:)];</div></pre></td></tr></table></figure>
<p>2.设置每个分区的数据个数：</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">- (<span class="built_in">NSInteger</span>)tableView:(<span class="built_in">UITableView</span> *)tableView</div><div class="line">numberOfRowsInSection:(<span class="built_in">NSInteger</span>)section &#123;</div><div class="line">    <span class="built_in">NSString</span> *key = <span class="keyword">self</span>.keys[section];</div><div class="line">    <span class="built_in">NSArray</span> *nameSection = <span class="keyword">self</span>.names[key];</div><div class="line">    <span class="keyword">return</span> [nameSection count];</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>3.设置每个分区的标题：</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">- (<span class="built_in">NSString</span> *)tableView:(<span class="built_in">UITableView</span> *)tableView</div><div class="line">titleForHeaderInSection:(<span class="built_in">NSInteger</span>)section &#123;</div><div class="line">    <span class="keyword">return</span> <span class="keyword">self</span>.keys[section];</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="实现索引分区"><a href="#实现索引分区" class="headerlink" title="实现索引分区"></a>实现索引分区</h3><p>1.设置索引标题：</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">- (<span class="built_in">NSArray</span> *)sectionIndexTitlesForTableView:(<span class="built_in">UITableView</span> *)tableView &#123;</div><div class="line">    <span class="keyword">return</span> <span class="keyword">self</span>.keys;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>2.处理顶端边缘偏移的问题：</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> (tableView.style == <span class="built_in">UITableViewStylePlain</span>) &#123;</div><div class="line">    <span class="built_in">UIEdgeInsets</span> contentInset = tableView.contentInset;</div><div class="line">    contentInset.top = <span class="number">20</span>;</div><div class="line">    [tableView setContentInset:contentInset];</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>3.处理状态栏被干扰的问题：</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">UIView</span> *barBackground =</div><div class="line">    [[<span class="built_in">UIView</span> alloc] initWithFrame:<span class="built_in">CGRectMake</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">320</span>, <span class="number">20</span>)];</div><div class="line">barBackground.backgroundColor = [<span class="built_in">UIColor</span> colorWithWhite:<span class="number">1.0</span> alpha:<span class="number">1.0</span>];</div><div class="line">[<span class="keyword">self</span>.view addSubview:barBackground];</div></pre></td></tr></table></figure>
<h3 id="实现搜索栏"><a href="#实现搜索栏" class="headerlink" title="实现搜索栏"></a>实现搜索栏</h3><p>1.控制器头文件声明遵循的协议：</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">SectionsViewController</span></span></div><div class="line">    : <span class="built_in">UIViewController</span> &lt;<span class="built_in">UITableViewDelegate</span>, <span class="built_in">UITableViewDataSource</span>, <span class="built_in">UISearchDisplayDelegate</span>&gt;</div><div class="line"><span class="keyword">@end</span></div></pre></td></tr></table></figure>
<p>2.添加实例变量保存搜索匹配的名字：</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">NSMutableArray</span> *filteredNames;</div><div class="line"><span class="built_in">UISearchDisplayController</span> *searchController;</div></pre></td></tr></table></figure>
<p>3.搜索栏初始化操作：</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">filteredNames = [<span class="built_in">NSMutableArray</span> array];</div><div class="line"><span class="built_in">UISearchBar</span> *searchBar = [[<span class="built_in">UISearchBar</span> alloc] initWithFrame:<span class="built_in">CGRectMake</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">320</span>, <span class="number">44</span>)];</div><div class="line"></div><div class="line">tableView.tableHeaderView = searchBar;</div><div class="line">searchController = [[<span class="built_in">UISearchDisplayController</span> alloc] initWithSearchBar:searchBar contentsController:<span class="keyword">self</span>];</div><div class="line">searchController.delegate = <span class="keyword">self</span>;</div><div class="line">searchController.searchResultsDataSource = <span class="keyword">self</span>;</div></pre></td></tr></table></figure>
<p>4.加载搜索结果：</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">- (<span class="keyword">void</span>)searchDisplayController:(<span class="built_in">UISearchDisplayController</span> *)controller</div><div class="line">  didLoadSearchResultsTableView:(<span class="built_in">UITableView</span> *)tableView &#123;</div><div class="line">  [tableView registerClass:[<span class="built_in">UITableViewCell</span> <span class="keyword">class</span>]</div><div class="line">      forCellReuseIdentifier:SectionTableIdentifier];</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>5.需重新加载搜索结果：</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">- (<span class="built_in">BOOL</span>)searchDisplayController:(<span class="built_in">UISearchDisplayController</span> *)controller</div><div class="line">    shouldReloadTableForSearchString:(<span class="built_in">NSString</span> *)searchString &#123;</div><div class="line">  [filteredNames removeAllObjects];</div><div class="line">  <span class="keyword">if</span> (searchString.length &gt; <span class="number">0</span>) &#123;</div><div class="line">    <span class="built_in">NSPredicate</span> *predicate =</div><div class="line">        [<span class="built_in">NSPredicate</span> predicateWithBlock:^<span class="built_in">BOOL</span>(<span class="built_in">NSString</span> *name, <span class="built_in">NSDictionary</span> *b) &#123;</div><div class="line">          <span class="built_in">NSRange</span> range =</div><div class="line">              [name rangeOfString:searchString options:<span class="built_in">NSCaseInsensitiveSearch</span>];</div><div class="line">          <span class="keyword">return</span> range.location != <span class="built_in">NSNotFound</span>;</div><div class="line">        &#125;];</div><div class="line">    <span class="keyword">for</span> (<span class="built_in">NSString</span> *key <span class="keyword">in</span> <span class="keyword">self</span>.keys) &#123;</div><div class="line">      <span class="built_in">NSArray</span> *matches =</div><div class="line">          [<span class="keyword">self</span>.names[key] filteredArrayUsingPredicate:predicate];</div><div class="line">      [filteredNames addObjectsFromArray:matches];</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">  <span class="keyword">return</span> <span class="literal">YES</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>6.设置分区索引的颜色：</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">tableView.sectionIndexBackgroundColor = [<span class="built_in">UIColor</span> blackColor];</div><div class="line">tableView.sectionIndexTrackingBackgroundColor = [<span class="built_in">UIColor</span> darkGrayColor];</div><div class="line">tableView.sectionIndexColor = [<span class="built_in">UIColor</span> whiteColor];</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;实现简单表&quot;&gt;&lt;a href=&quot;#实现简单表&quot; class=&quot;headerlink&quot; title=&quot;实现简单表&quot;&gt;&lt;/a&gt;实现简单表&lt;/h3&gt;&lt;p&gt;1.控制器头文件声明遵循的协议：&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@interface&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ViewController&lt;/span&gt; : &lt;span class=&quot;title&quot;&gt;UIViewController&lt;/span&gt; &amp;lt;&lt;span class=&quot;title&quot;&gt;UITableViewDelegate&lt;/span&gt;, &lt;span class=&quot;title&quot;&gt;UITableViewDataSource&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@end&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="编程笔记" scheme="https://blog.xlsdg.org/categories/%E7%BC%96%E7%A8%8B%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="iOS" scheme="https://blog.xlsdg.org/tags/iOS/"/>
    
      <category term="Objective-C" scheme="https://blog.xlsdg.org/tags/Objective-C/"/>
    
  </entry>
  
  <entry>
    <title>Vim 常用命令总结</title>
    <link href="https://blog.xlsdg.org/2015/04/30/vim-command-summary/"/>
    <id>https://blog.xlsdg.org/2015/04/30/vim-command-summary/</id>
    <published>2015-04-30T12:00:00.000Z</published>
    <updated>2016-12-09T15:58:03.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="光标移动"><a href="#光标移动" class="headerlink" title="光标移动"></a>光标移动</h2><table>
<thead>
<tr>
<th>命令</th>
<th>作用（解释）</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>h</code>,<code>j</code>,<code>k</code>,<code>l</code></td>
<td><code>h</code> 表示往左，<code>j</code> 表示往下，<code>k</code> 表示往右，<code>l</code> 表示往上</td>
</tr>
<tr>
<td><code>Ctrl</code>+<code>f</code></td>
<td>上一页</td>
</tr>
<tr>
<td><code>Ctrl</code>+<code>b</code></td>
<td>下一页</td>
</tr>
<tr>
<td><code>w</code>,<code>e</code>,<code>W</code>,<code>E</code></td>
<td>跳到单词的后面，小写包括标点</td>
</tr>
<tr>
<td><code>b</code>,<code>B</code></td>
<td>以单词为单位往前跳动光标，小写包含标点</td>
</tr>
<tr>
<td><code>O</code></td>
<td>开启新的一行</td>
</tr>
<tr>
<td><code>^</code></td>
<td>一行的开始</td>
</tr>
<tr>
<td><code>$</code></td>
<td>一行的结尾</td>
</tr>
<tr>
<td><code>gg</code></td>
<td>文档的第一行</td>
</tr>
<tr>
<td><code>[N]G</code></td>
<td>文档的第 N 行或者最后一行</td>
</tr>
</tbody>
</table>
<a id="more"></a>
<h2 id="插入模式"><a href="#插入模式" class="headerlink" title="插入模式"></a>插入模式</h2><table>
<thead>
<tr>
<th>命令</th>
<th>作用（解释）</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>i</code></td>
<td>插入到光标前面</td>
</tr>
<tr>
<td><code>I</code></td>
<td>插入到行的开始位置</td>
</tr>
<tr>
<td><code>a</code></td>
<td>插入到光标的后面</td>
</tr>
<tr>
<td><code>A</code></td>
<td>插入到行的最后位置</td>
</tr>
<tr>
<td><code>o</code>,<code>O</code></td>
<td>新开一行</td>
</tr>
<tr>
<td><code>Esc</code></td>
<td>关闭插入模式</td>
</tr>
</tbody>
</table>
<h2 id="编辑"><a href="#编辑" class="headerlink" title="编辑"></a>编辑</h2><table>
<thead>
<tr>
<th>命令</th>
<th>作用（解释）</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>r</code></td>
<td>在插入模式替换光标所在的一个字符</td>
</tr>
<tr>
<td><code>J</code></td>
<td>合并下一行到上一行</td>
</tr>
<tr>
<td><code>s</code></td>
<td>删除光标所在的一个字符, 光标还在当行</td>
</tr>
<tr>
<td><code>S</code></td>
<td>删除光标所在的一行，光标还在当行，不同于 dd</td>
</tr>
<tr>
<td><code>u</code></td>
<td>撤销上一步操作</td>
</tr>
<tr>
<td><code>Ctrl</code>+<code>r</code></td>
<td>恢复上一步操作</td>
</tr>
<tr>
<td><code>.</code></td>
<td>重复最后一个命令</td>
</tr>
<tr>
<td><code>~</code></td>
<td>变换为大写</td>
</tr>
<tr>
<td><code>[N]&gt;&gt;</code></td>
<td>一行或 N 行往右移动一个 Tab</td>
</tr>
<tr>
<td><code>[N]&lt;&lt;</code></td>
<td>一行或 N 行往左移动一个 Tab</td>
</tr>
</tbody>
</table>
<h2 id="关闭"><a href="#关闭" class="headerlink" title="关闭"></a>关闭</h2><table>
<thead>
<tr>
<th>命令</th>
<th>作用（解释）</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>:w</code></td>
<td>保存</td>
</tr>
<tr>
<td><code>:wq,:x</code></td>
<td>保存并关闭</td>
</tr>
<tr>
<td><code>:q</code></td>
<td>关闭（已保存）</td>
</tr>
<tr>
<td><code>:q!</code></td>
<td>强制关闭</td>
</tr>
</tbody>
</table>
<h2 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h2><table>
<thead>
<tr>
<th>命令</th>
<th>作用（解释）</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>/pattern</code></td>
<td>搜索（非插入模式)</td>
</tr>
<tr>
<td><code>?pattern</code></td>
<td>往后搜索</td>
</tr>
<tr>
<td><code>n</code></td>
<td>光标到达搜索结果的前一个目标</td>
</tr>
<tr>
<td><code>N</code></td>
<td>光标到达搜索结果的后一个目标</td>
</tr>
</tbody>
</table>
<h2 id="视觉模式"><a href="#视觉模式" class="headerlink" title="视觉模式"></a>视觉模式</h2><table>
<thead>
<tr>
<th>命令</th>
<th>作用（解释）</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>v</code></td>
<td>选中一个或多个字符</td>
</tr>
<tr>
<td><code>V</code></td>
<td>选中一行</td>
</tr>
</tbody>
</table>
<h2 id="剪切和复制"><a href="#剪切和复制" class="headerlink" title="剪切和复制"></a>剪切和复制</h2><table>
<thead>
<tr>
<th>命令</th>
<th>作用（解释）</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>dd</code></td>
<td>删除一行</td>
</tr>
<tr>
<td><code>dw</code></td>
<td>删除一个单词</td>
</tr>
<tr>
<td><code>x</code></td>
<td>删除后一个字符</td>
</tr>
<tr>
<td><code>X</code></td>
<td>删除前一个字符</td>
</tr>
<tr>
<td><code>D</code></td>
<td>删除一行最后一个字符</td>
</tr>
<tr>
<td><code>[N]yy</code></td>
<td>复制一行或者N行</td>
</tr>
<tr>
<td><code>yw</code></td>
<td>复制一个单词</td>
</tr>
<tr>
<td><code>p</code></td>
<td>粘贴</td>
</tr>
</tbody>
</table>
<h2 id="窗口操作"><a href="#窗口操作" class="headerlink" title="窗口操作"></a>窗口操作</h2><table>
<thead>
<tr>
<th>命令</th>
<th>作用（解释）</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>:split</code></td>
<td>水平方向分割出一个窗口</td>
</tr>
<tr>
<td><code>:vsplit</code></td>
<td>垂直方向分割出一个窗口</td>
</tr>
<tr>
<td><code>:close</code></td>
<td>关闭窗口</td>
</tr>
<tr>
<td><code>Ctrl</code>+<code>W</code></td>
<td>切换窗口,<code>h</code> 到左边窗口，<code>j</code> 到下方窗口，<code>k</code> 到上方窗口，<code>l</code> 到右边窗口</td>
</tr>
</tbody>
</table>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;光标移动&quot;&gt;&lt;a href=&quot;#光标移动&quot; class=&quot;headerlink&quot; title=&quot;光标移动&quot;&gt;&lt;/a&gt;光标移动&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;命令&lt;/th&gt;
&lt;th&gt;作用（解释）&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;h&lt;/code&gt;,&lt;code&gt;j&lt;/code&gt;,&lt;code&gt;k&lt;/code&gt;,&lt;code&gt;l&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;h&lt;/code&gt; 表示往左，&lt;code&gt;j&lt;/code&gt; 表示往下，&lt;code&gt;k&lt;/code&gt; 表示往右，&lt;code&gt;l&lt;/code&gt; 表示往上&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Ctrl&lt;/code&gt;+&lt;code&gt;f&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;上一页&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Ctrl&lt;/code&gt;+&lt;code&gt;b&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;下一页&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;w&lt;/code&gt;,&lt;code&gt;e&lt;/code&gt;,&lt;code&gt;W&lt;/code&gt;,&lt;code&gt;E&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;跳到单词的后面，小写包括标点&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;b&lt;/code&gt;,&lt;code&gt;B&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;以单词为单位往前跳动光标，小写包含标点&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;O&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;开启新的一行&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;^&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;一行的开始&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;$&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;一行的结尾&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;gg&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;文档的第一行&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;[N]G&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;文档的第 N 行或者最后一行&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
    
    </summary>
    
      <category term="网络转载" scheme="https://blog.xlsdg.org/categories/%E7%BD%91%E7%BB%9C%E8%BD%AC%E8%BD%BD/"/>
    
    
      <category term="Vim" scheme="https://blog.xlsdg.org/tags/Vim/"/>
    
  </entry>
  
  <entry>
    <title>《精通iOS开发》第07章学习笔记</title>
    <link href="https://blog.xlsdg.org/2015/04/29/beginning-ios7-development-exploring-the-ios-sdk-07/"/>
    <id>https://blog.xlsdg.org/2015/04/29/beginning-ios7-development-exploring-the-ios-sdk-07/</id>
    <published>2015-04-29T12:00:00.000Z</published>
    <updated>2016-12-09T10:47:58.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="实现日期选取器"><a href="#实现日期选取器" class="headerlink" title="实现日期选取器"></a>实现日期选取器</h3><p>日期数据初始化：</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">- (<span class="keyword">void</span>)viewDidLoad &#123;</div><div class="line">  [<span class="keyword">super</span> viewDidLoad];</div><div class="line">  <span class="comment">// Do any additional setup after loading the view.</span></div><div class="line">  <span class="built_in">NSDate</span> *now = [<span class="built_in">NSDate</span> date];</div><div class="line">  [<span class="keyword">self</span>.datePicker setDate:now animated:<span class="literal">YES</span>];</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<a id="more"></a>
<p>获取日期选取器的值：</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">- (<span class="keyword">IBAction</span>)buttonPressed:(<span class="built_in">UIButton</span> *)sender &#123;</div><div class="line">  <span class="built_in">NSDate</span> *selected = [<span class="keyword">self</span>.datePicker date];</div><div class="line">  <span class="built_in">NSString</span> *message = [[<span class="built_in">NSString</span> alloc]</div><div class="line">      initWithFormat:<span class="string">@"The date and time you selected is: %@"</span>, selected];</div><div class="line"></div><div class="line">  <span class="built_in">UIAlertView</span> *alert =</div><div class="line">      [[<span class="built_in">UIAlertView</span> alloc] initWithTitle:<span class="string">@"Date and Time Selected"</span></div><div class="line">                                 message:message</div><div class="line">                                delegate:<span class="literal">nil</span></div><div class="line">                       cancelButtonTitle:<span class="string">@"That's so true!"</span></div><div class="line">                       otherButtonTitles:<span class="literal">nil</span>];</div><div class="line">  [alert show];</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="实现单滚轮选取器"><a href="#实现单滚轮选取器" class="headerlink" title="实现单滚轮选取器"></a>实现单滚轮选取器</h3><p>声明遵循的协议：</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">BIDSingleComponentPickerViewController</span></span></div><div class="line">    : <span class="built_in">UIViewController</span> &lt;<span class="built_in">UIPickerViewDelegate</span>, <span class="built_in">UIPickerViewDataSource</span>&gt;</div><div class="line"></div><div class="line"><span class="keyword">@end</span></div></pre></td></tr></table></figure>
<p>实现数据源和委托：</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#pragma mark -</span></div><div class="line"><span class="meta">#pragma mark Picker Data Source Methods</span></div><div class="line">- (<span class="built_in">NSInteger</span>)numberOfComponentsInPickerView:(<span class="built_in">UIPickerView</span> *)pickerView &#123;</div><div class="line">  <span class="keyword">return</span> <span class="number">1</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line">- (<span class="built_in">NSInteger</span>)pickerView:(<span class="built_in">UIPickerView</span> *)pickerView</div><div class="line">numberOfRowsInComponent:(<span class="built_in">NSInteger</span>)component &#123;</div><div class="line">  <span class="keyword">return</span> [<span class="keyword">self</span>.characterNames count];</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="meta">#pragma mark Picker Delegate Methods</span></div><div class="line">- (<span class="built_in">NSString</span> *)pickerView:(<span class="built_in">UIPickerView</span> *)pickerView</div><div class="line">             titleForRow:(<span class="built_in">NSInteger</span>)row</div><div class="line">            forComponent:(<span class="built_in">NSInteger</span>)component &#123;</div><div class="line">  <span class="keyword">return</span> <span class="keyword">self</span>.characterNames[row];</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>获取选取器的值：</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">- (<span class="keyword">IBAction</span>)buttonPressed:(<span class="built_in">UIButton</span> *)sender &#123;</div><div class="line">  <span class="built_in">NSInteger</span> row = [<span class="keyword">self</span>.singlePicker selectedRowInComponent:<span class="number">0</span>];</div><div class="line">  <span class="built_in">NSString</span> *selected = <span class="keyword">self</span>.characterNames[row];</div><div class="line">  <span class="built_in">NSString</span> *title =</div><div class="line">      [[<span class="built_in">NSString</span> alloc] initWithFormat:<span class="string">@"You selected %@!"</span>, selected];</div><div class="line">  <span class="built_in">UIAlertView</span> *alert =</div><div class="line">      [[<span class="built_in">UIAlertView</span> alloc] initWithTitle:title</div><div class="line">                                 message:<span class="string">@"Thank you for choosing."</span></div><div class="line">                                delegate:<span class="literal">nil</span></div><div class="line">                       cancelButtonTitle:<span class="string">@"You're Welcome"</span></div><div class="line">                       otherButtonTitles:<span class="literal">nil</span>];</div><div class="line">  [alert show];</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="实现多滚轮选取器"><a href="#实现多滚轮选取器" class="headerlink" title="实现多滚轮选取器"></a>实现多滚轮选取器</h3><p>实现数据源和委托：</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#pragma mark -</span></div><div class="line"><span class="meta">#pragma mark Picker Data Source Methods</span></div><div class="line">- (<span class="built_in">NSInteger</span>)numberOfComponentsInPickerView:(<span class="built_in">UIPickerView</span> *)pickerView &#123;</div><div class="line">  <span class="keyword">return</span> <span class="number">2</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line">- (<span class="built_in">NSInteger</span>)pickerView:(<span class="built_in">UIPickerView</span> *)pickerView</div><div class="line">numberOfRowsInComponent:(<span class="built_in">NSInteger</span>)component &#123;</div><div class="line">  <span class="keyword">if</span> (component == kBreadComponent) &#123;</div><div class="line">    <span class="keyword">return</span> [<span class="keyword">self</span>.breadTypes count];</div><div class="line">  &#125; <span class="keyword">else</span> &#123;</div><div class="line">    <span class="keyword">return</span> [<span class="keyword">self</span>.fillingTypes count];</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="meta">#pragma mark Picker Delegate Methods</span></div><div class="line">- (<span class="built_in">NSString</span> *)pickerView:(<span class="built_in">UIPickerView</span> *)pickerView</div><div class="line">             titleForRow:(<span class="built_in">NSInteger</span>)row</div><div class="line">            forComponent:(<span class="built_in">NSInteger</span>)component &#123;</div><div class="line">  <span class="keyword">if</span> (component == kBreadComponent) &#123;</div><div class="line">    <span class="keyword">return</span> <span class="keyword">self</span>.breadTypes[row];</div><div class="line">  &#125; <span class="keyword">else</span> &#123;</div><div class="line">    <span class="keyword">return</span> <span class="keyword">self</span>.fillingTypes[row];</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>获取选取器的值：</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">- (<span class="keyword">IBAction</span>)buttonPressed:(<span class="built_in">UIButton</span> *)sender &#123;</div><div class="line">  <span class="built_in">NSInteger</span> fillingRow = [<span class="keyword">self</span>.doublePicker selectedRowInComponent:kFillingComponent];</div><div class="line">  <span class="built_in">NSInteger</span> breadRow = [<span class="keyword">self</span>.doublePicker selectedRowInComponent:kBreadComponent];</div><div class="line"></div><div class="line">  <span class="built_in">NSString</span> *filling = <span class="keyword">self</span>.fillingTypes[fillingRow];</div><div class="line">  <span class="built_in">NSString</span> *bread = <span class="keyword">self</span>.breadTypes[breadRow];</div><div class="line"></div><div class="line">  <span class="built_in">NSString</span> *message = [[<span class="built_in">NSString</span> alloc] initWithFormat:<span class="string">@"Your %@ on %@ bread will be right up."</span>, filling, bread];</div><div class="line"></div><div class="line">  <span class="built_in">UIAlertView</span> *alert = [[<span class="built_in">UIAlertView</span> alloc] initWithTitle:<span class="string">@"Thank you for your order"</span> message:message delegate:<span class="literal">nil</span> cancelButtonTitle:<span class="string">@"Great!"</span> otherButtonTitles:<span class="literal">nil</span>];</div><div class="line"></div><div class="line">  [alert show];</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="实现依赖型多滚轮选取器"><a href="#实现依赖型多滚轮选取器" class="headerlink" title="实现依赖型多滚轮选取器"></a>实现依赖型多滚轮选取器</h3><p>获取包数据：</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">- (<span class="keyword">void</span>)viewDidLoad &#123;</div><div class="line">  [<span class="keyword">super</span> viewDidLoad];</div><div class="line">  <span class="comment">// Do any additional setup after loading the view.</span></div><div class="line">  <span class="built_in">NSBundle</span> *bundle = [<span class="built_in">NSBundle</span> mainBundle];</div><div class="line">  <span class="built_in">NSURL</span> *plistURL =</div><div class="line">      [bundle URLForResource:<span class="string">@"statedictionary"</span> withExtension:<span class="string">@"plist"</span>];</div><div class="line"></div><div class="line">  <span class="keyword">self</span>.stateZips = [<span class="built_in">NSDictionary</span> dictionaryWithContentsOfURL:plistURL];</div><div class="line"></div><div class="line">  <span class="built_in">NSArray</span> *allStates = [<span class="keyword">self</span>.stateZips allKeys];</div><div class="line">  <span class="built_in">NSArray</span> *sortedStates =</div><div class="line">      [allStates sortedArrayUsingSelector:<span class="keyword">@selector</span>(compare:)];</div><div class="line"></div><div class="line">  <span class="keyword">self</span>.states = sortedStates;</div><div class="line"></div><div class="line">  <span class="built_in">NSString</span> *selectedState = <span class="keyword">self</span>.states[<span class="number">0</span>];</div><div class="line">  <span class="keyword">self</span>.zips = <span class="keyword">self</span>.stateZips[selectedState];</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>实现数据源和委托：</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#pragma mark -</span></div><div class="line"><span class="meta">#pragma mark Picker Data Source Methods</span></div><div class="line">- (<span class="built_in">NSInteger</span>)numberOfComponentsInPickerView:(<span class="built_in">UIPickerView</span> *)pickerView &#123;</div><div class="line">  <span class="keyword">return</span> <span class="number">2</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line">- (<span class="built_in">NSInteger</span>)pickerView:(<span class="built_in">UIPickerView</span> *)pickerView</div><div class="line">numberOfRowsInComponent:(<span class="built_in">NSInteger</span>)component &#123;</div><div class="line">  <span class="keyword">if</span> (component == kStateComponent) &#123;</div><div class="line">    <span class="keyword">return</span> [<span class="keyword">self</span>.states count];</div><div class="line">  &#125; <span class="keyword">else</span> &#123;</div><div class="line">    <span class="keyword">return</span> [<span class="keyword">self</span>.zips count];</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="meta">#pragma mark Picker Delegate Methods</span></div><div class="line">- (<span class="built_in">NSString</span> *)pickerView:(<span class="built_in">UIPickerView</span> *)pickerView</div><div class="line">             titleForRow:(<span class="built_in">NSInteger</span>)row</div><div class="line">            forComponent:(<span class="built_in">NSInteger</span>)component &#123;</div><div class="line">  <span class="keyword">if</span> (component == kStateComponent) &#123;</div><div class="line">    <span class="keyword">return</span> <span class="keyword">self</span>.states[row];</div><div class="line">  &#125; <span class="keyword">else</span> &#123;</div><div class="line">    <span class="keyword">return</span> <span class="keyword">self</span>.zips[row];</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">- (<span class="keyword">void</span>)pickerView:(<span class="built_in">UIPickerView</span> *)pickerView</div><div class="line">      didSelectRow:(<span class="built_in">NSInteger</span>)row</div><div class="line">       inComponent:(<span class="built_in">NSInteger</span>)component &#123;</div><div class="line">  <span class="keyword">if</span> (component == kStateComponent) &#123;</div><div class="line">    <span class="built_in">NSString</span> *selectedState = <span class="keyword">self</span>.states[row];</div><div class="line">    <span class="keyword">self</span>.zips = <span class="keyword">self</span>.stateZips[selectedState];</div><div class="line">    [<span class="keyword">self</span>.dependentPicker reloadComponent:kZipComponent];</div><div class="line">    [<span class="keyword">self</span>.dependentPicker selectRow:<span class="number">0</span> inComponent:kZipComponent animated:<span class="literal">YES</span>];</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>获取选取器的值：</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">- (<span class="keyword">IBAction</span>)buttonPressed:(<span class="built_in">UIButton</span> *)sender &#123;</div><div class="line">  <span class="built_in">NSInteger</span> stateRow =</div><div class="line">      [<span class="keyword">self</span>.dependentPicker selectedRowInComponent:kStateComponent];</div><div class="line">  <span class="built_in">NSInteger</span> zipRow =</div><div class="line">      [<span class="keyword">self</span>.dependentPicker selectedRowInComponent:kZipComponent];</div><div class="line"></div><div class="line">  <span class="built_in">NSString</span> *state = <span class="keyword">self</span>.states[stateRow];</div><div class="line">  <span class="built_in">NSString</span> *zip = <span class="keyword">self</span>.zips[zipRow];</div><div class="line">  <span class="built_in">NSString</span> *title =</div><div class="line">      [[<span class="built_in">NSString</span> alloc] initWithFormat:<span class="string">@"You selected zip code %@"</span>, zip];</div><div class="line">  <span class="built_in">NSString</span> *message =</div><div class="line">      [[<span class="built_in">NSString</span> alloc] initWithFormat:<span class="string">@"%@ is in %@"</span>, zip, state];</div><div class="line"></div><div class="line">  <span class="built_in">UIAlertView</span> *alert = [[<span class="built_in">UIAlertView</span> alloc] initWithTitle:title</div><div class="line">                                                  message:message</div><div class="line">                                                 delegate:<span class="literal">nil</span></div><div class="line">                                        cancelButtonTitle:<span class="string">@"OK"</span></div><div class="line">                                        otherButtonTitles:<span class="literal">nil</span>];</div><div class="line">  [alert show];</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>设置每个滚轮组件的宽度：</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">- (<span class="built_in">CGFloat</span>)pickerView:(<span class="built_in">UIPickerView</span> *)pickerView</div><div class="line">    widthForComponent:(<span class="built_in">NSInteger</span>)component &#123;</div><div class="line">  <span class="keyword">if</span> (component == kZipComponent) &#123;</div><div class="line">    <span class="keyword">return</span> <span class="number">90</span>;</div><div class="line">  &#125; <span class="keyword">else</span> &#123;</div><div class="line">    <span class="keyword">return</span> <span class="number">200</span>;</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="实现自定义视图选取器"><a href="#实现自定义视图选取器" class="headerlink" title="实现自定义视图选取器"></a>实现自定义视图选取器</h3><p>实现数据源和委托：</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#pragma mark -</span></div><div class="line"><span class="meta">#pragma mark Picker Data Source Methods</span></div><div class="line">- (<span class="built_in">NSInteger</span>)numberOfComponentsInPickerView:(<span class="built_in">UIPickerView</span> *)pickerView &#123;</div><div class="line">  <span class="keyword">return</span> <span class="number">5</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line">- (<span class="built_in">NSInteger</span>)pickerView:(<span class="built_in">UIPickerView</span> *)pickerView</div><div class="line">numberOfRowsInComponent:(<span class="built_in">NSInteger</span>)component &#123;</div><div class="line">  <span class="keyword">return</span> [<span class="keyword">self</span>.images count];</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="meta">#pragma mark Picker Delegate Methods</span></div><div class="line">- (<span class="built_in">UIView</span> *)pickerView:(<span class="built_in">UIPickerView</span> *)pickerView</div><div class="line">            viewForRow:(<span class="built_in">NSInteger</span>)row</div><div class="line">          forComponent:(<span class="built_in">NSInteger</span>)component</div><div class="line">           reusingView:(<span class="built_in">UIView</span> *)view &#123;</div><div class="line">  <span class="built_in">UIImage</span> *image = <span class="keyword">self</span>.images[row];</div><div class="line">  <span class="built_in">UIImageView</span> *imageView = [[<span class="built_in">UIImageView</span> alloc] initWithImage:image];</div><div class="line">  <span class="keyword">return</span> imageView;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>获取选取器的值：</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line">- (<span class="keyword">IBAction</span>)spin:(<span class="built_in">UIButton</span> *)sender &#123;</div><div class="line">  <span class="built_in">BOOL</span> win = <span class="literal">NO</span>;</div><div class="line">  <span class="keyword">int</span> numInRow = <span class="number">1</span>;</div><div class="line">  <span class="keyword">int</span> lastVal = <span class="number">-1</span>;</div><div class="line"></div><div class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</div><div class="line">    <span class="keyword">int</span> newValue = random() % [<span class="keyword">self</span>.images count];</div><div class="line"></div><div class="line">    <span class="keyword">if</span> (newValue == lastVal) &#123;</div><div class="line">      numInRow++;</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">      numInRow = <span class="number">1</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    lastVal = newValue;</div><div class="line"></div><div class="line">    [<span class="keyword">self</span>.picker selectRow:newValue inComponent:i animated:<span class="literal">YES</span>];</div><div class="line">    [<span class="keyword">self</span>.picker reloadComponent:i];</div><div class="line"></div><div class="line">    <span class="keyword">if</span> (numInRow &gt;= <span class="number">3</span>) &#123;</div><div class="line">      win = <span class="literal">YES</span>;</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="keyword">if</span> (crunchSoundID == <span class="number">0</span>) &#123;</div><div class="line">    <span class="built_in">NSString</span> *path =</div><div class="line">        [[<span class="built_in">NSBundle</span> mainBundle] pathForResource:<span class="string">@"crunch"</span> ofType:<span class="string">@"wav"</span>];</div><div class="line">    <span class="built_in">NSURL</span> *soundURL = [<span class="built_in">NSURL</span> fileURLWithPath:path];</div><div class="line"></div><div class="line">    AudioServicesCreateSystemSoundID((__bridge <span class="built_in">CFURLRef</span>)soundURL,</div><div class="line">                                     &amp;crunchSoundID);</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  AudioServicesPlaySystemSound(crunchSoundID);</div><div class="line"></div><div class="line">  <span class="keyword">if</span> (win) &#123;</div><div class="line">    [<span class="keyword">self</span> performSelector:<span class="keyword">@selector</span>(playWinSound) withObject:<span class="literal">nil</span> afterDelay:<span class="number">.5</span>];</div><div class="line">  &#125; <span class="keyword">else</span> &#123;</div><div class="line">    [<span class="keyword">self</span> performSelector:<span class="keyword">@selector</span>(showButton) withObject:<span class="literal">nil</span> afterDelay:<span class="number">.5</span>];</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="keyword">self</span>.button.hidden = <span class="literal">YES</span>;</div><div class="line">  <span class="keyword">self</span>.winLabel.text = <span class="string">@""</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>设置每个滚轮组件内容的高度：</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">- (<span class="built_in">CGFloat</span>)pickerView:(<span class="built_in">UIPickerView</span> *)pickerView</div><div class="line">rowHeightForComponent:(<span class="built_in">NSInteger</span>)component &#123;</div><div class="line">  <span class="keyword">return</span> <span class="number">70</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>播放音乐文件：</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">- (<span class="keyword">void</span>)playWinSound &#123;</div><div class="line">  <span class="keyword">if</span> (winSoundID == <span class="number">0</span>) &#123;</div><div class="line">    <span class="built_in">NSURL</span> *soundURL =</div><div class="line">        [[<span class="built_in">NSBundle</span> mainBundle] URLForResource:<span class="string">@"win"</span> withExtension:<span class="string">@"wav"</span>];</div><div class="line"></div><div class="line">    AudioServicesCreateSystemSoundID((__bridge <span class="built_in">CFURLRef</span>)soundURL, &amp;winSoundID);</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  AudioServicesPlaySystemSound(winSoundID);</div><div class="line">  <span class="keyword">self</span>.winLabel.text = <span class="string">@"WINNING!"</span>;</div><div class="line">  [<span class="keyword">self</span> performSelector:<span class="keyword">@selector</span>(showButton) withObject:<span class="literal">nil</span> afterDelay:<span class="number">1.5</span>];</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;实现日期选取器&quot;&gt;&lt;a href=&quot;#实现日期选取器&quot; class=&quot;headerlink&quot; title=&quot;实现日期选取器&quot;&gt;&lt;/a&gt;实现日期选取器&lt;/h3&gt;&lt;p&gt;日期数据初始化：&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)viewDidLoad &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  [&lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt; viewDidLoad];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// Do any additional setup after loading the view.&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;NSDate&lt;/span&gt; *now = [&lt;span class=&quot;built_in&quot;&gt;NSDate&lt;/span&gt; date];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.datePicker setDate:now animated:&lt;span class=&quot;literal&quot;&gt;YES&lt;/span&gt;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="编程笔记" scheme="https://blog.xlsdg.org/categories/%E7%BC%96%E7%A8%8B%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="iOS" scheme="https://blog.xlsdg.org/tags/iOS/"/>
    
      <category term="Objective-C" scheme="https://blog.xlsdg.org/tags/Objective-C/"/>
    
  </entry>
  
  <entry>
    <title>《精通iOS开发》第06章学习笔记</title>
    <link href="https://blog.xlsdg.org/2015/04/29/beginning-ios7-development-exploring-the-ios-sdk-06/"/>
    <id>https://blog.xlsdg.org/2015/04/29/beginning-ios7-development-exploring-the-ios-sdk-06/</id>
    <published>2015-04-29T05:00:00.000Z</published>
    <updated>2016-12-09T10:47:52.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="延迟加载处理"><a href="#延迟加载处理" class="headerlink" title="延迟加载处理"></a>延迟加载处理</h3><p>代码示例：</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">- (<span class="keyword">void</span>)viewDidLoad &#123;</div><div class="line">  [<span class="keyword">super</span> viewDidLoad];</div><div class="line">  <span class="comment">// Do any additional setup after loading the view, typically from a nib.</span></div><div class="line">  <span class="keyword">self</span>.blueViewController = [<span class="keyword">self</span>.storyboard instantiateViewControllerWithIdentifier:<span class="string">@"Blue"</span>];</div><div class="line">  [<span class="keyword">self</span>.view insertSubview:<span class="keyword">self</span>.blueViewController.view atIndex:<span class="number">0</span>];</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<a id="more"></a>
<h3 id="内存不足处理"><a href="#内存不足处理" class="headerlink" title="内存不足处理"></a>内存不足处理</h3><p>代码示例：</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">- (<span class="keyword">void</span>)didReceiveMemoryWarning &#123;</div><div class="line">  [<span class="keyword">super</span> didReceiveMemoryWarning];</div><div class="line">  <span class="comment">// Dispose of any resources that can be recreated.</span></div><div class="line">  <span class="keyword">if</span> (!<span class="keyword">self</span>.blueViewController.view.superview) &#123;</div><div class="line">    <span class="keyword">self</span>.blueViewController = <span class="literal">nil</span>;</div><div class="line">  &#125; <span class="keyword">else</span> &#123;</div><div class="line">    <span class="keyword">self</span>.yellowViewController = <span class="literal">nil</span>;</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="转换过程的动画效果"><a href="#转换过程的动画效果" class="headerlink" title="转换过程的动画效果"></a>转换过程的动画效果</h3><p>代码示例：</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">- (<span class="keyword">IBAction</span>)switchViews:(<span class="keyword">id</span>)sender &#123;</div><div class="line">  [<span class="built_in">UIView</span> beginAnimations:<span class="string">@"View Flip"</span> context:<span class="literal">NULL</span>];</div><div class="line">  [<span class="built_in">UIView</span> setAnimationDuration:<span class="number">0.4</span>];</div><div class="line">  [<span class="built_in">UIView</span> setAnimationCurve:<span class="built_in">UIViewAnimationCurveEaseInOut</span>];</div><div class="line"></div><div class="line">  <span class="keyword">if</span> (!<span class="keyword">self</span>.yellowViewController.view.superview) &#123;</div><div class="line">    <span class="keyword">if</span> (!<span class="keyword">self</span>.yellowViewController) &#123;</div><div class="line">      <span class="keyword">self</span>.yellowViewController = [<span class="keyword">self</span>.storyboard instantiateViewControllerWithIdentifier:<span class="string">@"Yellow"</span>];</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    [<span class="built_in">UIView</span> setAnimationTransition:<span class="built_in">UIViewAnimationTransitionFlipFromRight</span> forView:<span class="keyword">self</span>.view cache:<span class="literal">YES</span>];</div><div class="line"></div><div class="line">    [<span class="keyword">self</span>.blueViewController.view removeFromSuperview];</div><div class="line">    [<span class="keyword">self</span>.view insertSubview:<span class="keyword">self</span>.yellowViewController.view atIndex:<span class="number">0</span>];</div><div class="line">  &#125; <span class="keyword">else</span> &#123;</div><div class="line">    <span class="keyword">if</span> (!<span class="keyword">self</span>.blueViewController) &#123;</div><div class="line">      <span class="keyword">self</span>.blueViewController = [<span class="keyword">self</span>.storyboard instantiateViewControllerWithIdentifier:<span class="string">@"Blue"</span>];</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    [<span class="built_in">UIView</span> setAnimationTransition:<span class="built_in">UIViewAnimationTransitionFlipFromLeft</span> forView:<span class="keyword">self</span>.view cache:<span class="literal">YES</span>];</div><div class="line"></div><div class="line">    [<span class="keyword">self</span>.yellowViewController.view removeFromSuperview];</div><div class="line">    [<span class="keyword">self</span>.view insertSubview:<span class="keyword">self</span>.blueViewController.view atIndex:<span class="number">0</span>];</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  [<span class="built_in">UIView</span> commitAnimations];</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;延迟加载处理&quot;&gt;&lt;a href=&quot;#延迟加载处理&quot; class=&quot;headerlink&quot; title=&quot;延迟加载处理&quot;&gt;&lt;/a&gt;延迟加载处理&lt;/h3&gt;&lt;p&gt;代码示例：&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)viewDidLoad &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  [&lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt; viewDidLoad];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// Do any additional setup after loading the view, typically from a nib.&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.blueViewController = [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.storyboard instantiateViewControllerWithIdentifier:&lt;span class=&quot;string&quot;&gt;@&quot;Blue&quot;&lt;/span&gt;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.view insertSubview:&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.blueViewController.view atIndex:&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="编程笔记" scheme="https://blog.xlsdg.org/categories/%E7%BC%96%E7%A8%8B%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="iOS" scheme="https://blog.xlsdg.org/tags/iOS/"/>
    
      <category term="Objective-C" scheme="https://blog.xlsdg.org/tags/Objective-C/"/>
    
  </entry>
  
  <entry>
    <title>《精通iOS开发》第05章学习笔记</title>
    <link href="https://blog.xlsdg.org/2015/04/28/beginning-ios7-development-exploring-the-ios-sdk-05/"/>
    <id>https://blog.xlsdg.org/2015/04/28/beginning-ios7-development-exploring-the-ios-sdk-05/</id>
    <published>2015-04-28T09:00:00.000Z</published>
    <updated>2016-12-09T10:47:45.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="单个控制器的旋转支持"><a href="#单个控制器的旋转支持" class="headerlink" title="单个控制器的旋转支持"></a>单个控制器的旋转支持</h3><p>代码示例：</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">- (<span class="built_in">NSUInteger</span>)supportedInterfaceOrientations &#123;</div><div class="line">  <span class="keyword">return</span> (<span class="built_in">UIInterfaceOrientationMaskPortrait</span> | <span class="built_in">UIInterfaceOrientationMaskLandscapeLeft</span> | <span class="built_in">UIInterfaceOrientationMaskLandscapeRight</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<a id="more"></a>
<h3 id="代码调整界面布局"><a href="#代码调整界面布局" class="headerlink" title="代码调整界面布局"></a>代码调整界面布局</h3><p>在界面构造器中，将<code>Use Autolayout</code>复选框取消选中。</p>
<h3 id="旋转时移动按钮"><a href="#旋转时移动按钮" class="headerlink" title="旋转时移动按钮"></a>旋转时移动按钮</h3><p>代码示例：</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div></pre></td><td class="code"><pre><div class="line">- (<span class="keyword">void</span>)willAnimateRotationToInterfaceOrientation:(<span class="built_in">UIInterfaceOrientation</span>)toInterfaceOrientation duration:(<span class="built_in">NSTimeInterval</span>)duration &#123;</div><div class="line">  [<span class="keyword">self</span> doLayoutForOrientation:toInterfaceOrientation];</div><div class="line">&#125;</div><div class="line"></div><div class="line">- (<span class="keyword">void</span>)doLayoutForOrientation:(<span class="built_in">UIInterfaceOrientation</span>)orientation &#123;</div><div class="line">  <span class="keyword">if</span> (<span class="built_in">UIInterfaceOrientationIsPortrait</span>(orientation)) &#123;</div><div class="line">    [<span class="keyword">self</span> layoutPortrait];</div><div class="line">  &#125; <span class="keyword">else</span> &#123;</div><div class="line">    [<span class="keyword">self</span> layoutLandscape];</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">static</span> <span class="keyword">const</span> <span class="built_in">CGFloat</span> buttonHeight = <span class="number">40</span>;</div><div class="line"><span class="keyword">static</span> <span class="keyword">const</span> <span class="built_in">CGFloat</span> buttonWidth = <span class="number">120</span>;</div><div class="line"><span class="keyword">static</span> <span class="keyword">const</span> <span class="built_in">CGFloat</span> spacing = <span class="number">20</span>;</div><div class="line"></div><div class="line">- (<span class="keyword">void</span>)layoutPortrait &#123;</div><div class="line">  <span class="built_in">CGRect</span> b = <span class="keyword">self</span>.view.bounds;</div><div class="line"></div><div class="line">  <span class="built_in">CGFloat</span> contentWidth = <span class="built_in">CGRectGetWidth</span>(b) - (<span class="number">2</span> * spacing);</div><div class="line">  <span class="built_in">CGFloat</span> contentHeight = <span class="built_in">CGRectGetHeight</span>(b) - (<span class="number">4</span> * spacing) - (<span class="number">2</span> * buttonHeight);</div><div class="line"></div><div class="line">  <span class="keyword">self</span>.contentView.frame = <span class="built_in">CGRectMake</span>(spacing, spacing, contentWidth, contentHeight);</div><div class="line"></div><div class="line">  <span class="built_in">CGFloat</span> buttonRow1y = contentHeight + (<span class="number">2</span> * spacing);</div><div class="line">  <span class="built_in">CGFloat</span> buttonRow2y = buttonRow1y + buttonHeight + spacing;</div><div class="line"></div><div class="line">  <span class="built_in">CGFloat</span> buttonCol1x = spacing;</div><div class="line">  <span class="built_in">CGFloat</span> buttonCol2x = <span class="built_in">CGRectGetWidth</span>(b) - buttonWidth - spacing;</div><div class="line"></div><div class="line">  <span class="keyword">self</span>.actionButton1.frame = <span class="built_in">CGRectMake</span>(buttonCol1x, buttonRow1y, buttonWidth, buttonHeight);</div><div class="line">  <span class="keyword">self</span>.actionButton2.frame = <span class="built_in">CGRectMake</span>(buttonCol2x, buttonRow1y, buttonWidth, buttonHeight);</div><div class="line">  <span class="keyword">self</span>.actionButton3.frame = <span class="built_in">CGRectMake</span>(buttonCol1x, buttonRow2y, buttonWidth, buttonHeight);</div><div class="line">  <span class="keyword">self</span>.actionButton4.frame = <span class="built_in">CGRectMake</span>(buttonCol2x, buttonRow2y, buttonWidth, buttonHeight);</div><div class="line">&#125;</div><div class="line"></div><div class="line">- (<span class="keyword">void</span>)layoutLandscape &#123;</div><div class="line">  <span class="built_in">CGRect</span> b = <span class="keyword">self</span>.view.bounds;</div><div class="line"></div><div class="line">  <span class="built_in">CGFloat</span> contentWidth = <span class="built_in">CGRectGetWidth</span>(b) - buttonWidth - (<span class="number">3</span> * spacing);</div><div class="line">  <span class="built_in">CGFloat</span> contentHeight = <span class="built_in">CGRectGetHeight</span>(b) - (<span class="number">2</span> * spacing);</div><div class="line"></div><div class="line">  <span class="keyword">self</span>.contentView.frame = <span class="built_in">CGRectMake</span>(spacing, spacing, contentWidth, contentHeight);</div><div class="line"></div><div class="line">  <span class="built_in">CGFloat</span> buttonX = <span class="built_in">CGRectGetWidth</span>(b) - buttonWidth - spacing;</div><div class="line">  <span class="built_in">CGFloat</span> buttonRow1y = spacing;</div><div class="line">  <span class="built_in">CGFloat</span> buttonRow4y = <span class="built_in">CGRectGetHeight</span>(b) - buttonHeight - spacing;</div><div class="line"></div><div class="line">  <span class="built_in">CGFloat</span> buttonRow2y = buttonRow1y + floor((buttonRow4y - buttonRow1y) * <span class="number">0.333</span>);</div><div class="line">  <span class="built_in">CGFloat</span> buttonRow3y = buttonRow1y + floor((buttonRow4y - buttonRow1y) * <span class="number">0.667</span>);</div><div class="line"></div><div class="line">  <span class="keyword">self</span>.actionButton1.frame = <span class="built_in">CGRectMake</span>(buttonX, buttonRow1y, buttonWidth, buttonHeight);</div><div class="line">  <span class="keyword">self</span>.actionButton2.frame = <span class="built_in">CGRectMake</span>(buttonX, buttonRow2y, buttonWidth, buttonHeight);</div><div class="line">  <span class="keyword">self</span>.actionButton3.frame = <span class="built_in">CGRectMake</span>(buttonX, buttonRow3y, buttonWidth, buttonHeight);</div><div class="line">  <span class="keyword">self</span>.actionButton4.frame = <span class="built_in">CGRectMake</span>(buttonX, buttonRow4y, buttonWidth, buttonHeight);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="获取视图加载完后的屏幕方向"><a href="#获取视图加载完后的屏幕方向" class="headerlink" title="获取视图加载完后的屏幕方向"></a>获取视图加载完后的屏幕方向</h3><p>代码示例：</p>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">- (<span class="keyword">void</span>)viewDidLoad &#123;</div><div class="line">  [<span class="keyword">super</span> viewDidLoad];</div><div class="line">  <span class="comment">// Do any additional setup after loading the view, typically from a nib.</span></div><div class="line">  <span class="built_in">UIApplication</span> *app = [<span class="built_in">UIApplication</span> sharedApplication];</div><div class="line">  <span class="built_in">UIInterfaceOrientation</span> currentOrientation = app.statusBarOrientation;</div><div class="line">  [<span class="keyword">self</span> doLayoutForOrientation:currentOrientation];</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;单个控制器的旋转支持&quot;&gt;&lt;a href=&quot;#单个控制器的旋转支持&quot; class=&quot;headerlink&quot; title=&quot;单个控制器的旋转支持&quot;&gt;&lt;/a&gt;单个控制器的旋转支持&lt;/h3&gt;&lt;p&gt;代码示例：&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;NSUInteger&lt;/span&gt;)supportedInterfaceOrientations &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;UIInterfaceOrientationMaskPortrait&lt;/span&gt; | &lt;span class=&quot;built_in&quot;&gt;UIInterfaceOrientationMaskLandscapeLeft&lt;/span&gt; | &lt;span class=&quot;built_in&quot;&gt;UIInterfaceOrientationMaskLandscapeRight&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="编程笔记" scheme="https://blog.xlsdg.org/categories/%E7%BC%96%E7%A8%8B%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="iOS" scheme="https://blog.xlsdg.org/tags/iOS/"/>
    
      <category term="Objective-C" scheme="https://blog.xlsdg.org/tags/Objective-C/"/>
    
  </entry>
  
</feed>
